<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
		  http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         version="2.5">

    <session-config>
        <session-timeout>180</session-timeout>
    </session-config>

    <welcome-file-list>
        <welcome-file>main.jsp</welcome-file>
    </welcome-file-list>

    <context-param>
        <description>Application registry server</description>
        <param-name>host</param-name>
        <param-value>localhost</param-value>
    </context-param>
    <context-param>
        <description>Application registry port</description>
        <param-name>port</param-name>
        <param-value>7652</param-value>
    </context-param>


    <servlet>
        <servlet-name>mainDispatch</servlet-name>
        <servlet-class>org.springframework.web.context.support.HttpRequestHandlerServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>mainDispatch</servlet-name>
        <!-- gwt dispatch endpoint is <moduleName>/dispatch -->
        <!-- dispatch is the default value for remoteServiceRelativePath parameter of RemoteServiceProxy constructor in its super call in StandardDispatchService_Proxy constructor-->
        <url-pattern>/main/dispatch</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>jnlpHandler</servlet-name>
        <servlet-class>org.springframework.web.context.support.HttpRequestHandlerServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>jnlpHandler</servlet-name>
        <url-pattern>/client.jnlp</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>readLogoHandler</servlet-name>
        <servlet-class>org.springframework.web.context.support.HttpRequestHandlerServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>readLogoHandler</servlet-name>
        <url-pattern>/readlogo</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>externalHandler</servlet-name>
        <servlet-class>org.springframework.web.context.support.HttpRequestHandlerServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>externalHandler</servlet-name>
        <url-pattern>/exec</url-pattern>
        <url-pattern>/exec/system</url-pattern>
        <url-pattern>/eval</url-pattern>
        <url-pattern>/eval/action</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>fileUploadHandler</servlet-name>
        <servlet-class>org.springframework.web.context.support.HttpRequestHandlerServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>fileUploadHandler</servlet-name>
        <url-pattern>/uploadFile</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>fileDownloadHandler</servlet-name>
        <servlet-class>org.springframework.web.context.support.HttpRequestHandlerServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>fileDownloadHandler</servlet-name>
        <url-pattern>/downloadFile</url-pattern>
    </servlet-mapping>

    <!-- LOG4J configuration -->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>/WEB-INF/classes/log4j.xml</param-value>
    </context-param>
    <context-param>
        <param-name>log4jExposeWebAppRoot</param-name>
        <param-value>false</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>

    <!-- Spring configuration -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/spring/applicationContext-security.xml</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    
    <!-- exposes request params and locale to the thread, used in LSFRemoteAuthenticationProvider and ServerMessages.getString (where there is no explicit request) -->
    <filter>
        <filter-name>springRequestContextFilter</filter-name>
        <filter-class>org.springframework.web.filter.RequestContextFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springRequestContextFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- initializing spring security -->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- sets lsf user locale for request -->
    <filter>
        <filter-name>LSFLocaleFilter</filter-name>
        <filter-class>lsfusion.http.LSFLocaleFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>LSFLocaleFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- CORS -->
    <filter>
        <filter-name>CORS</filter-name>
        <filter-class>com.thetransactioncompany.cors.CORSFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>CORS</filter-name>
        <url-pattern>/exec</url-pattern>
        <url-pattern>/eval</url-pattern>
        <url-pattern>/eval/action</url-pattern>
    </filter-mapping>

    <!-- need to cache and nocache gwt resources (see urlrewrite.xml) -->
    <filter>
        <filter-name>UrlRewriteFilter</filter-name>
        <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>UrlRewriteFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
</web-app>
