MODULE Skype;

REQUIRE Messenger;

//webHookUrl = host/webHookSkype?botid=name(account)

EXTEND CLASS Messenger { skype 'Skype' }
isSkype(Account a) = messenger(a) == Messenger.skype;

GROUP from;
GROUP conversation;
serviceUrl = DATA LOCAL STRING();
action = DATA LOCAL STRING();
fromName = DATA LOCAL STRING();
conversationId = DATA LOCAL STRING();

FORM webHookSkype
    PROPERTIES() serviceUrl, action
    PROPERTIES() IN from fromName EXTID 'name'
    PROPERTIES() IN conversation conversationId EXTID 'id';

clientSecretSkype 'Client Secret' = DATA STRING (Account);
baseUrlSkype = DATA STRING (Chat);
webHookSkype(FILE f) {
    fileToString(f,'UTF-8');
    printToLog(resultString());

    IMPORT webHookSkype JSON FROM f;
    
    urlDecode(params('botid'));
    IF action() == 'add' THEN {
        LOCAL chat = Chat();
        chat() <- chatIdAccount(account(urlDecoded()), conversationId());
        IF NOT chat() THEN {
            NEW chat = Chat {
                chat() <- chat;
                account(chat) <- account(urlDecoded());
                id(chat()) <- conversationId();
            }
        }
        username(chat()) <-fromName();
        baseUrlSkype(chat()) <- serviceUrl();
        chatType(chat()) <- ChatType.private;
    } ELSE IF action() == 'remove' THEN {
        DELETE Chat c WHERE id(c) == conversationId() AND account(c) == account(urlDecoded());
    }
 
    APPLY;
} @@noauth;


accessTokenSkype = DATA STRING(Account);
accessTokenDateSkype = DATA DATETIME(Account);
getAccessTokenSkype(Account a) {
    NEWSESSION {
        LOCAL result = FILE();
        EXTERNAL HTTP POST 'https://login.microsoftonline.com/botframework.com/oauth2/v2.0/token' 
            BODYURL 'grant_type=client_credentials&scope=$1&client_id=$2&client_secret=$3' PARAMS 'https://api.botframework.com/.default', token(a), clientSecretSkype(a) TO result;
            
        LOCAL access_token = STRING();
        IMPORT JSON FROM result() TO() access_token;
        accessTokenSkype(a) <- access_token();
        accessTokenDateSkype(a) <- currentDateTime();
        APPLY;
    }
}

sendMessageSkypeResult = DATA LOCAL STRING();
sendMessageSkype(Chat chat, STRING message) {
    sendMessageSkypeResult() <- NULL;

    IF NOT accessTokenSkype(account(chat)) OR secondsBetweenDates(currentDateTime(), accessTokenDateSkype(account(chat))) > 3600 THEN {
        getAccessTokenSkype(account(chat));
    }

    LOCAL result = FILE();
    
    LOCAL httpHeaders = STRING(STRING);
    httpHeaders('Authorization') <- 'Bearer ' + accessTokenSkype(account(chat));
    
    EXTERNAL HTTP POST baseUrlSkype(chat) + 'v3/conversations/' + id(chat) + '/activities/' HEADERS httpHeaders 
        PARAMS JSONFILE('\{"type": "message","text": "' + message + '"\}') TO result;
        
    LOCAL message = STRING();
    IMPORT JSON FROM result() TO() message;
    sendMessageSkypeResult() <- message();     
}

sendMessage(Chat chat, STRING message) + {
    IF isSkype(account(chat)) THEN {
        sendMessageSkype(chat, message);
        sendMessageResult() <- sendMessageSkypeResult();
    }
}

EXTEND FORM messengers
    PROPERTIES(a) clientSecretSkype PANEL SHOWIF isSkype(a)
;