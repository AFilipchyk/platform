<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd"
       default-lazy-init="true">

    <bean id="settings" class="lsfusion.server.Settings">
        <property name="properties">
            <map>
                <entry key="innerGroupExprs" value="${settings.innerGroupExprs:}"/>
                <entry key="packOnCacheComplexity" value="${settings.packOnCacheComplexity:}"/>
                <entry key="LRUOftenCleanPeriod" value="${settings.LRUOftenCleanPeriod:}"/>
                <entry key="LRUOftenExpireSecond" value="${settings.LRUOftenExpireSecond:}"/>
                <entry key="LRUOftenProceedBucket" value="${settings.LRUOftenProceedBucket:}"/>
                <entry key="LRURareCleanPeriod" value="${settings.LRURareCleanPeriod:}"/>
                <entry key="LRURareExpireSecond" value="${settings.LRURareExpireSecond:}"/>
                <entry key="LRURareProceedBucket" value="${settings.LRURareProceedBucket:}"/>
                <entry key="cacheInnerHashes" value="${settings.cacheInnerHashes:}"/>
                <entry key="mapInnerMaxIterations" value="${settings.mapInnerMaxIterations:}"/>
                <entry key="enableApplySingleStored" value="${settings.enableApplySingleStored:}"/>
                <entry key="pushOrderWhere" value="${settings.pushOrderWhere:}"/>
                <entry key="splitSelectGroupInnerJoins" value="${settings.splitSelectGroupInnerJoins:}"/>
                <entry key="splitGroupStatInnerJoins" value="${settings.splitGroupStatInnerJoins:}"/>
                <entry key="useFJInsteadOfUnion" value="${settings.useFJInsteadOfUnion:}"/>
                <entry key="simpleCheckCompare" value="${settings.simpleCheckCompare:}"/>
                <entry key="editLogicalOnSingleClick" value="${settings.editLogicalOnSingleClick:}"/>
                <entry key="editActionOnSingleClick" value="${settings.editActionOnSingleClick:}"/>
                <entry key="checkFollowsWhenObjects" value="${settings.checkFollowsWhenObjects:}"/>
                <entry key="restructWhereOnMeans" value="${settings.restructWhereOnMeans:}"/>
                <entry key="splitGroupSelectExprcases" value="${settings.splitGroupSelectExprcases:}"/>
                <entry key="calculateGroupDataChanged" value="${settings.calculateGroupDataChanged:}"/>
                <entry key="noIncrementMaxGroupProperty" value="${settings.noIncrementMaxGroupProperty:}"/>
                <entry key="compileMeans" value="${settings.compileMeans:}"/>
                <entry key="freeConnections" value="${settings.freeConnections:}"/>
                <entry key="commonUnique" value="${settings.commonUnique:}"/>
                <entry key="disablePoolConnections" value="${settings.disablePoolConnections:}"/>
                <entry key="disablePoolPreparedStatements" value="${settings.disablePoolPreparedStatements:}"/>
                <entry key="disableWhenCalcDo" value="${settings.disableWhenCalcDo:}"/>
                <entry key="disablePrereadValues" value="${settings.disablePrereadValues:}"/>
                <entry key="disableSumGroupNotZero" value="${settings.disableSumGroupNotZero:}"/>
                <entry key="usedChangesCacheLimit" value="${settings.usedChangesCacheLimit:}"/>
                <entry key="locale" value="${settings.locale:}"/>
                <entry key="splitIncrementApply" value="${settings.splitIncrementApply:}"/>
                <entry key="statDegree" value="${settings.statDegree:}"/>
                <entry key="barcodeLength" value="${settings.barcodeLength:}"/>
                <entry key="useUniPass" value="${settings.useUniPass:}"/>
                <entry key="useSingleJoins" value="${settings.useSingleJoins:}"/>
                <entry key="useQueryExpr" value="${settings.useQueryExpr:}"/>
                <entry key="noExclusiveCompile" value="${settings.noExclusiveCompile:}"/>
                <entry key="limitWhereJoinsCount" value="${settings.limitWhereJoinsCount:}"/>
                <entry key="limitWhereJoinsComplexity" value="${settings.limitWhereJoinsComplexity:}"/>
                <entry key="limitClassWhereCount" value="${settings.limitClassWhereCount:}"/>
                <entry key="limitClassWhereComplexity" value="${settings.limitClassWhereComplexity:}"/>
                <entry key="limitWhereJoinPack" value="${settings.limitWhereJoinPack:}"/>
                <entry key="limitHintIncrementComplexity" value="${settings.limitHintIncrementComplexity:}"/>
                <entry key="noApplyIncrement" value="${settings.noApplyIncrement:}"/>
                <entry key="limitApplyHintIncrementComplexity" value="${settings.limitApplyHintIncrementComplexity:}"/>
                <entry key="limitHintIncrementStat" value="${settings.limitHintIncrementStat:}"/>
                <entry key="limitApplyHintIncrementStat" value="${settings.limitApplyHintIncrementStat:}"/>
                <entry key="limitHintNoUpdateComplexity" value="${settings.limitHintNoUpdateComplexity:}"/>
                <entry key="limitWrapComplexity" value="${settings.limitWrapComplexity:}"/>
                <entry key="limitGrowthIncrementComplexity" value="${settings.limitGrowthIncrementComplexity:}"/>
                <entry key="limitExclusiveCount" value="${settings.limitExclusiveCount:}"/>
                <entry key="limitExclusiveSimpleCount" value="${settings.limitExclusiveSimpleCount:}"/>
                <entry key="limitExclusiveSimpleComplexity" value="${settings.limitExclusiveSimpleComplexity:}"/>
                <entry key="limitExclusiveComplexity" value="${settings.limitExclusiveComplexity:}"/>
                <entry key="limitMaterializeComplexity" value="${settings.limitMaterializeComplexity:}"/>
                <entry key="updateFormCountPeriod" value="${settings.updateFormCountPeriod:}"/>
                <entry key="autoAnalyzeTempStats" value="${settings.autoAnalyzeTempStats:}"/>
                <entry key="useGreaterEquals" value="${settings.useGreaterEquals:}"/>
                <entry key="disableAutoHints" value="${settings.disableAutoHints:}"/>
                <entry key="disableAutoHintCaches" value="${settings.disableAutoHintCaches:}"/>
                <entry key="disableWrapComplexity" value="${settings.disableWrapComplexity:}"/>
                <entry key="enablePrevWrapComplexity" value="${settings.enablePrevWrapComplexity:}"/>
                <entry key="groupJoinLevel" value="${settings.groupJoinLevel:}"/>
                <entry key="applyVolatileStats" value="${settings.applyVolatileStats:}"/>
                <entry key="useEventValuePrevHeuristic" value="${settings.useEventValuePrevHeuristic:}"/>
                <entry key="disableTabbedOptimization" value="${settings.disableTabbedOptimization:}"/>
                <entry key="checkUniqueEvent" value="${settings.checkUniqueEvent:}"/>
                <entry key="disableChangeModifierAllHints" value="${settings.disableChangeModifierAllHints:}"/>
                <entry key="disableValueAllHints" value="${settings.disableValueAllHints:}"/>
                <entry key="defaultOrdersNotNull" value="${settings.defaultOrdersNotNull:}"/>
                <entry key="commandLengthVolatileStats" value="${settings.commandLengthVolatileStats:}"/>
                <entry key="disableReadSingleValues" value="${settings.disableReadSingleValues:}"/>
                <entry key="reserveIDStep" value="${settings.reserveIDStep:}"/>
                <entry key="mergeUpClassSets" value="${settings.mergeUpClassSets:}"/>
                <entry key="queryPrepareLength" value="${settings.queryPrepareLength:}"/>
                <entry key="queryPrepareRunTime" value="${settings.queryPrepareRunTime:}"/>
                <entry key="disableSimpleAddRemoveInNonExclCase" value="${settings.disableSimpleAddRemoveInNonExclCase:}"/>
                <entry key="modifySessionTableInsteadOfRewrite" value="${settings.modifySessionTableInsteadOfRewrite:}"/>
                <entry key="checkAlwaysNull" value="${settings.checkAlwaysNull:}"/>
                <entry key="checkClassWhere" value="${settings.checkClassWhere:}"/>
            </map>
        </property>
    </bean>

    <bean id="dataAdapter" class="lsfusion.server.data.sql.PostgreDataAdapter">
        <constructor-arg value="${db.name}"/>
        <constructor-arg value="${db.server}"/>
        <constructor-arg value="${db.user}"/>
        <constructor-arg value="${db.password}"/>
        <constructor-arg value="${backup.binPath:}"/>
        <constructor-arg value="${backup.dumpDir:}"/>
    </bean>

    <bean id="dbManager" class="lsfusion.server.logics.DBManager">
        <property name="adapter" ref="dataAdapter"/>
        <property name="businessLogics" ref="businessLogics"/>
        <property name="restartManager" ref="restartManager"/>
        <property name="denyDropModules" value="${db.denyDropModules:false}"/>
        <property name="denyDropTables" value="${db.denyDropTables:false}"/>
    </bean>

    <bean id="restartManager" class="lsfusion.server.logics.RestartManager">
        <property name="businessLogics" ref="businessLogics"/>
        <property name="navigatorsManager" ref="navigatorsManager"/>
    </bean>

    <bean id="navigatorsManager" class="lsfusion.server.logics.NavigatorsManager">
        <property name="businessLogics" ref="businessLogics"/>
        <property name="logicsInstance" ref="logicsInstance"/>
        <property name="restartManager" ref="restartManager"/>
        <property name="securityManager" ref="securityManager"/>
        <property name="rmiManager" ref="rmiManager"/>
        <property name="dbManager" ref="dbManager"/>
    </bean>

    <bean id="securityManager" class="lsfusion.server.logics.SecurityManager">
        <property name="businessLogics" ref="businessLogics"/>
        <property name="dbManager" ref="dbManager"/>
        <property name="initialAdminPassword" value="${logics.initialAdminPassword:#{null}}"/>
    </bean>

    <bean id="logicsInstance" class="lsfusion.server.logics.LogicsInstance">
        <property name="lifecycle" ref="lifecycleManager"/>
        <property name="businessLogics" ref="businessLogics"/>
        <property name="rmiManager" ref="rmiManager"/>
        <property name="navigatorsManager" ref="navigatorsManager"/>
        <property name="restartManager" ref="restartManager"/>
        <property name="securityManager" ref="securityManager"/>
        <property name="dbManager" ref="dbManager"/>
        <property name="settings" ref="settings"/>
        <property name="customObjects" ref="instanceCustomObjects"/>
    </bean>

    <!-- Список для переопределения custom-объектов -->
    <bean id="instanceCustomObjects" class="lsfusion.spring.SpringListsMergerFactory">
        <property name="listsToMerge">
            <list>
                <ref bean="coreCustomObjects"/>
                <ref bean="customObjects"/>
            </list>
        </property>
    </bean>

    <!-- Список базовых custom-объектов -->
    <util:list id="coreCustomObjects">
        <ref bean="scheduler"/>
    </util:list>

    <!-- Список для задания дополнительных custom-объектов -->
    <util:list id="customObjects"/>

    <!-- Remoting -->
    <bean id="rmiManager" class="lsfusion.server.logics.RMIManager">
        <property name="registryPort" value="${rmi.registryPort}"/>
        <property name="exportPort" value="${rmi.exportPort?:0}"/>
        <property name="exportName" value="${rmi.exportName:}"/>
    </bean>

    <bean id="remoteLogics" class="lsfusion.server.remote.RemoteLogics">
        <property name="businessLogics" ref="businessLogics"/>
        <property name="logicsInstance" ref="logicsInstance"/>
        <property name="navigatorsManager" ref="navigatorsManager"/>
        <property name="restartManager" ref="restartManager"/>
        <property name="securityManager" ref="securityManager"/>
        <property name="dbManager" ref="dbManager"/>
        <property name="clientVMOptions" ref="clientVMOptions"/>
    </bean>

    <bean id="clientVMOptions" class="lsfusion.interop.VMOptions">
        <constructor-arg name="initHeapSize" value="${client.initHeapSize:}"/>
        <constructor-arg name="maxHeapSize" value="${client.maxHeapSize:}"/>
    </bean>

    <bean id="remoteLogicsLoader" class="lsfusion.server.remote.RemoteLogicsLoader">
        <property name="rmiManager" ref="rmiManager"/>
        <property name="remoteLogics" ref="remoteLogics"/>
    </bean>

    <!-- Other services -->
    <bean id="scheduler" class="lsfusion.server.logics.Scheduler">
        <property name="businessLogics" ref="businessLogics"/>
        <property name="logicsInstance" ref="logicsInstance"/>
        <property name="dbManager" ref="dbManager"/>
    </bean>

    <!-- Lifecycle Manager setup -->
    <bean id="lifecycleManager" class="lsfusion.server.lifecycle.LifecycleManager">
        <constructor-arg ref="lifecycleListeners"/>
    </bean>

    <bean id="lifecycleListeners" class="lsfusion.spring.SpringListsMergerFactory">
        <property name="listsToMerge">
            <list>
                <ref bean="coreLifecycleListeners"/>
                <ref bean="customLifecycleListeners"/>
            </list>
        </property>
    </bean>

    <!-- Список базовых LifecycleListener'ов -->
    <util:list id="coreLifecycleListeners">
        <ref bean="rmiManager"/>
        <ref bean="remoteLogics"/>
        <ref bean="remoteLogicsLoader"/>
        <ref bean="scheduler"/>
    </util:list>

    <!-- Список для задания дополнительных LifecycleListener'ов -->
    <util:list id="customLifecycleListeners"/>

    <!-- businessLogics bean должен быть определён во включающем файле -->
    <!--<bean id="businessLogics" class="some.package.SomeBusinessLogics">-->
    <!--...-->
    <!--</bean>-->
</beans>
