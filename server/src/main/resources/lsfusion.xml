<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd"
       default-lazy-init="true">

    <bean id="settings" class="lsfusion.server.Settings">
        <property name="properties">
            <map>
                <entry key="innerGroupExprs" value="${settings.innerGroupExprs:}"/>
                <entry key="packOnCacheComplexity" value="${settings.packOnCacheComplexity:}"/>
                <entry key="LRUOftenCleanPeriod" value="${settings.LRUOftenCleanPeriod:}"/>
                <entry key="LRUOftenExpireSecond" value="${settings.LRUOftenExpireSecond:}"/>
                <entry key="LRUOftenProceedBucket" value="${settings.LRUOftenProceedBucket:}"/>
                <entry key="LRURareCleanPeriod" value="${settings.LRURareCleanPeriod:}"/>
                <entry key="LRURareExpireSecond" value="${settings.LRURareExpireSecond:}"/>
                <entry key="LRURareProceedBucket" value="${settings.LRURareProceedBucket:}"/>
                <entry key="cacheInnerHashes" value="${settings.cacheInnerHashes:}"/>
                <entry key="mapInnerMaxIterations" value="${settings.mapInnerMaxIterations:}"/>
                <entry key="enableApplySingleStored" value="${settings.enableApplySingleStored:}"/>
                <entry key="pushOrderWhere" value="${settings.pushOrderWhere:}"/>
                <entry key="splitSelectGroupInnerJoins" value="${settings.splitSelectGroupInnerJoins:}"/>
                <entry key="splitGroupStatInnerJoins" value="${settings.splitGroupStatInnerJoins:}"/>
                <entry key="useFJInsteadOfUnion" value="${settings.useFJInsteadOfUnion:}"/>
                <entry key="simpleCheckCompare" value="${settings.simpleCheckCompare:}"/>
                <entry key="editLogicalOnSingleClick" value="${settings.editLogicalOnSingleClick:}"/>
                <entry key="editActionOnSingleClick" value="${settings.editActionOnSingleClick:}"/>
                <entry key="checkFollowsWhenObjects" value="${settings.checkFollowsWhenObjects:}"/>
                <entry key="restructWhereOnMeans" value="${settings.restructWhereOnMeans:}"/>
                <entry key="splitGroupSelectExprcases" value="${settings.splitGroupSelectExprcases:}"/>
                <entry key="calculateGroupDataChanged" value="${settings.calculateGroupDataChanged:}"/>
                <entry key="noIncrementMaxGroupProperty" value="${settings.noIncrementMaxGroupProperty:}"/>
                <entry key="compileMeans" value="${settings.compileMeans:}"/>
                <entry key="freeConnections" value="${settings.freeConnections:}"/>
                <entry key="commonUnique" value="${settings.commonUnique:}"/>
                <entry key="disablePoolConnections" value="${settings.disablePoolConnections:}"/>
                <entry key="disablePoolPreparedStatements" value="${settings.disablePoolPreparedStatements:}"/>
                <entry key="disableWhenCalcDo" value="${settings.disableWhenCalcDo:}"/>
                <entry key="disablePrereadValues" value="${settings.disablePrereadValues:}"/>
                <entry key="disableSumGroupNotZero" value="${settings.disableSumGroupNotZero:}"/>
                <entry key="usedChangesCacheLimit" value="${settings.usedChangesCacheLimit:}"/>
                <entry key="splitIncrementApply" value="${settings.splitIncrementApply:}"/>
                <entry key="statDegree" value="${settings.statDegree:}"/>
                <entry key="barcodeLength" value="${settings.barcodeLength:}"/>
                <entry key="useUniPass" value="${settings.useUniPass:}"/>
                <entry key="useSingleJoins" value="${settings.useSingleJoins:}"/>
                <entry key="useQueryExpr" value="${settings.useQueryExpr:}"/>
                <entry key="noExclusiveCompile" value="${settings.noExclusiveCompile:}"/>
                <entry key="limitWhereJoinsCount" value="${settings.limitWhereJoinsCount:}"/>
                <entry key="limitWhereJoinsComplexity" value="${settings.limitWhereJoinsComplexity:}"/>
                <entry key="limitClassWhereCount" value="${settings.limitClassWhereCount:}"/>
                <entry key="limitClassWhereComplexity" value="${settings.limitClassWhereComplexity:}"/>
                <entry key="limitWhereJoinPack" value="${settings.limitWhereJoinPack:}"/>
                <entry key="limitHintIncrementComplexity" value="${settings.limitHintIncrementComplexity:}"/>
                <entry key="noApplyIncrement" value="${settings.noApplyIncrement:}"/>
                <entry key="limitApplyHintIncrementComplexity" value="${settings.limitApplyHintIncrementComplexity:}"/>
                <entry key="limitHintIncrementStat" value="${settings.limitHintIncrementStat:}"/>
                <entry key="limitApplyHintIncrementStat" value="${settings.limitApplyHintIncrementStat:}"/>
                <entry key="limitHintNoUpdateComplexity" value="${settings.limitHintNoUpdateComplexity:}"/>
                <entry key="limitWrapComplexity" value="${settings.limitWrapComplexity:}"/>
                <entry key="limitComplexityGrowthCoeff" value="${settings.limitComplexityGrowthCoeff:}"/>
                <entry key="limitExclusiveCount" value="${settings.limitExclusiveCount:}"/>
                <entry key="limitExclusiveSimpleCount" value="${settings.limitExclusiveSimpleCount:}"/>
                <entry key="limitExclusiveSimpleComplexity" value="${settings.limitExclusiveSimpleComplexity:}"/>
                <entry key="limitExclusiveComplexity" value="${settings.limitExclusiveComplexity:}"/>
                <entry key="limitMaterializeComplexity" value="${settings.limitMaterializeComplexity:}"/>
                <entry key="updateFormCountPeriod" value="${settings.updateFormCountPeriod:}"/>
                <entry key="autoAnalyzeTempStats" value="${settings.autoAnalyzeTempStats:}"/>
                <entry key="useGreaterEquals" value="${settings.useGreaterEquals:}"/>
                <entry key="disableAutoHints" value="${settings.disableAutoHints:}"/>
                <entry key="disableAutoHintCaches" value="${settings.disableAutoHintCaches:}"/>
                <entry key="disableWrapComplexity" value="${settings.disableWrapComplexity:}"/>
                <entry key="enablePrevWrapComplexity" value="${settings.enablePrevWrapComplexity:}"/>
                <entry key="groupJoinLevel" value="${settings.groupJoinLevel:}"/>
                <entry key="applyVolatileStats" value="${settings.applyVolatileStats:}"/>
                <entry key="useEventValuePrevHeuristic" value="${settings.useEventValuePrevHeuristic:}"/>
                <entry key="disableTabbedOptimization" value="${settings.disableTabbedOptimization:}"/>
                <entry key="checkUniqueEvent" value="${settings.checkUniqueEvent:}"/>
                <entry key="disableChangeModifierAllHints" value="${settings.disableChangeModifierAllHints:}"/>
                <entry key="disableValueAllHints" value="${settings.disableValueAllHints:}"/>
                <entry key="defaultOrdersNotNull" value="${settings.defaultOrdersNotNull:}"/>
                <entry key="commandLengthVolatileStats" value="${settings.commandLengthVolatileStats:}"/>
                <entry key="disableReadSingleValues" value="${settings.disableReadSingleValues:}"/>
                <entry key="reserveIDStep" value="${settings.reserveIDStep:}"/>
                <entry key="mergeUpClassSets" value="${settings.mergeUpClassSets:}"/>
                <entry key="queryPrepareLength" value="${settings.queryPrepareLength:}"/>
                <entry key="queryPrepareRunTime" value="${settings.queryPrepareRunTime:}"/>
                <entry key="disableSimpleAddRemoveInNonExclCase" value="${settings.disableSimpleAddRemoveInNonExclCase:}"/>
                <entry key="modifySessionTableInsteadOfRewrite" value="${settings.modifySessionTableInsteadOfRewrite:}"/>
                <entry key="checkAlwaysNull" value="${settings.checkAlwaysNull:}"/>
                <entry key="checkClassWhere" value="${settings.checkClassWhere:}"/>
                <entry key="dialogTransactionTimeout" value="${settings.dialogTransactionTimeout:}"/>
                <entry key="queryLengthTimeout" value="${settings.queryLengthTimeout:}"/>
                <entry key="queryRowCountPessLimit" value="${settings.queryRowCountPessLimit:}"/>
                <entry key="timeoutDegree" value="${settings.timeoutDegree:}"/>
                <entry key="timeoutStart" value="${settings.timeoutStart:}"/>
                <entry key="applyAutoAttemptCountLimit" value="${settings.applyAutoAttemptCountLimit:}"/>
                <entry key="useSafeDivision" value="${settings.useSafeDivision:}"/>
                <entry key="useSafeScaleCast" value="${settings.useSafeScaleCast:}"/>
                <entry key="useScaleOpType" value="${settings.useScaleOpType:}"/>
                <entry key="noTransSyncDB" value="${settings.noTransSyncDB:}"/>
                <entry key="useUserChangesSync" value="${settings.useUserChangesSync:}"/>
                <entry key="averageIntervalStat" value="${settings.averageIntervalStat:}"/>
                <entry key="startServerAnyWay" value="${settings.startServerAnyWay:}"/>
                <entry key="singleInstance" value="${jnlp.singleInstance:}"/>
                <entry key="busyDialog" value="${settings.busyDialog:}"/>
                <entry key="profilerBatchSize" value="${settings.profilerBatchSize:}"/>
            </map>
        </property>
        </bean>

    <bean id="dataAdapter" class="lsfusion.server.data.sql.PostgreDataAdapter">
        <constructor-arg value="${db.name}"/>
        <constructor-arg value="${db.server}"/>
        <constructor-arg value="${db.user}"/>
        <constructor-arg value="${db.password}"/>
        <constructor-arg value="${db.connectTimeout:10000}"/>
        <constructor-arg value="${backup.binPath:}"/>
        <constructor-arg value="${backup.dumpDir:}"/>
    </bean>

    <!--<bean id="dataAdapter" class="lsfusion.server.data.sql.MSSQLDataAdapter">-->
        <!--<constructor-arg value="${db.name}"/>-->
        <!--<constructor-arg value="${db.server}"/>-->
        <!--<constructor-arg value="${db.user}"/>-->
        <!--<constructor-arg value="${db.password}"/>-->
        <!--<constructor-arg value="${db.instance}"/>-->
    <!--</bean>-->

    <!--<bean id="dataAdapter" class="lsfusion.server.data.sql.OracleDataAdapter">-->
        <!--<constructor-arg value="${db.name}"/>-->
        <!--<constructor-arg value="${db.server}"/>-->
        <!--<constructor-arg value="${db.user}"/>-->
        <!--<constructor-arg value="${db.password}"/>-->
        <!--<constructor-arg value="${db.instance}"/>-->
    <!--</bean>-->


    <bean id="dbManager" class="lsfusion.server.logics.DBManager">
        <property name="adapter" ref="dataAdapter"/>
        <property name="businessLogics" ref="businessLogics"/>
        <property name="restartManager" ref="restartManager"/>
        <property name="denyDropModules" value="${db.denyDropModules:false}"/>
        <property name="denyDropTables" value="${db.denyDropTables:false}"/>
        <property name="dbNamingPolicy" value="${db.namingPolicy:}"/>
        <property name="dbMaxIdLength" value="${db.maxIdLength:}"/>
        <property name="defaultTwoDigitYearStart" value="${user.twoDigitYearStart:}"/>
        <property name="defaultUserTimeZone" value="${user.timeZone:}"/>
        <property name="defaultUserLanguage" value="${user.language:}"/>
        <property name="defaultUserCountry" value="${user.country:}"/>
    </bean>

    <bean id="reflectionManager" class="lsfusion.server.logics.ReflectionManager">
        <property name="businessLogics" ref="businessLogics"/>
        <property name="dbManager" ref="dbManager"/>
        
        <property name="initTask" ref="initReflectionTask"/>
    </bean>

    <bean id="modulesHashManager" class="lsfusion.server.logics.ModulesHashManager">
        <property name="businessLogics" ref="businessLogics"/>
        <property name="dbManager" ref="dbManager"/>

        <property name="initTask" ref="writeModulesHashTask"/>
    </bean>

    <bean id="restartManager" class="lsfusion.server.logics.RestartManager">
        <property name="businessLogics" ref="businessLogics"/>
        <property name="navigatorsManager" ref="navigatorsManager"/>
    </bean>

    <bean id="navigatorsManager" class="lsfusion.server.logics.NavigatorsManager">
        <property name="businessLogics" ref="businessLogics"/>
        <property name="logicsInstance" ref="logicsInstance"/>
        <property name="restartManager" ref="restartManager"/>
        <property name="securityManager" ref="securityManager"/>
        <property name="rmiManager" ref="rmiManager"/>
        <property name="dbManager" ref="dbManager"/>
    </bean>

    <bean id="securityManager" class="lsfusion.server.logics.SecurityManager">
        <property name="businessLogics" ref="businessLogics"/>
        <property name="dbManager" ref="dbManager"/>
        <property name="initialAdminPassword" value="${logics.initialAdminPassword:#{null}}"/>
    </bean>

    <bean id="logicsInstance" class="lsfusion.server.logics.LogicsInstance">
        <property name="lifecycle" ref="lifecycleManager"/>
        <property name="businessLogics" ref="businessLogics"/>
        <property name="rmiManager" ref="rmiManager"/>
        <property name="navigatorsManager" ref="navigatorsManager"/>
        <property name="restartManager" ref="restartManager"/>
        <property name="securityManager" ref="securityManager"/>
        <property name="dbManager" ref="dbManager"/>
        <property name="reflectionManager" ref="reflectionManager"/>
        <property name="settings" ref="settings"/>
        <property name="customObjects" ref="instanceCustomObjects"/>
    </bean>

    <!-- Задачи инициализации логики -->

    <bean id="createModulesTask" class="lsfusion.server.logics.tasks.impl.simple.CreateModulesTask">
        <property name="dependencies">
            <set>
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="initLocalizerTask" class="lsfusion.server.logics.tasks.impl.simple.InitLocalizerTask">
        <property name="dependencies">
            <set>
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="initModuleDependenciesTask" class="lsfusion.server.logics.tasks.impl.InitModuleDependenciesTask">
        <property name="dependencies">
            <set>
                <ref bean="createModulesTask"/>
                <ref bean="initLocalizerTask"/>
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="initModuleOrderTask" class="lsfusion.server.logics.tasks.impl.InitModuleOrderTask">
        <property name="dependencies">
            <set>
                <ref bean="initModuleDependenciesTask"/>
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="initModuleRestTask" class="lsfusion.server.logics.tasks.impl.InitModuleRestTask">
        <property name="dependencies">
            <set>
                <ref bean="initModuleOrderTask"/>
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="initGroupsTask" class="lsfusion.server.logics.tasks.impl.InitGroupsTask">
        <property name="dependencies">
            <set>
                <ref bean="initModuleRestTask"/> <!-- нужны метакоды и namespace'ы -->
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="initClassesTask" class="lsfusion.server.logics.tasks.impl.InitClassesTask">
        <property name="dependencies">
            <set>
                <ref bean="initGroupsTask"/> <!-- потому как parser не thread safe, поэтому initModuleRestTask -->
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="initObjectClassTask" class="lsfusion.server.logics.tasks.impl.InitObjectClassTask">
        <property name="dependencies">
            <set>
                <ref bean="initClassesTask"/>
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="initTablesTask" class="lsfusion.server.logics.tasks.impl.InitTablesTask">
        <property name="dependencies">
            <set>
                <ref bean="initObjectClassTask"/> <!-- нужны все классы, в том числе reflection -->
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="initClassDataPropsTask" class="lsfusion.server.logics.tasks.impl.InitClassDataPropsTask">
        <property name="dependencies">
            <set>
                <ref bean="initTablesTask"/> <!-- нужны таблицы, чтобы знать куда раскладывать признаки классов -->
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="initFullTablesTask" class="lsfusion.server.logics.tasks.impl.InitFullSingleTablesTask">
        <property name="dependencies">
            <set>
                <ref bean="initClassDataPropsTask"/> <!-- нужны все классы, в том числе reflection -->
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="initPropertiesTask" class="lsfusion.server.logics.tasks.impl.InitPropertiesTask">
        <property name="dependencies">
            <set>
                <ref bean="initFullTablesTask"/> <!-- так как влияет на работу с expr'ами и учавствует в большом количестве кэшей  -->
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>
    
    <bean id="checkDuplicateSystemElements" class="lsfusion.server.logics.tasks.impl.simple.CheckDuplicateSystemElementsTask">
        <property name="dependencies">
            <set>
                <ref bean="initPropertiesTask"/> <!-- так как влияет на работу с expr'ами и учавствует в большом количестве кэшей  -->
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>
    
    <bean id="fillImplicitCasesTask" class="lsfusion.server.logics.tasks.impl.simple.FillImplicitCasesTask">
        <property name="dependencies">
            <set>
                <ref bean="checkDuplicateSystemElements"/> <!-- так как влияет на работу с expr'ами и учавствует в большом количестве кэшей  -->
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="finalizeCalcAbstractTask" class="lsfusion.server.logics.tasks.impl.FinalizeCalcAbstractTask">
        <property name="dependencies">
            <set>
                <ref bean="fillImplicitCasesTask"/>
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="finalizeActionAbstractTask" class="lsfusion.server.logics.tasks.impl.FinalizeActionAbstractTask">
        <property name="dependencies">
            <set>
                <ref bean="fillImplicitCasesTask"/>
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="markRecursionsTask" class="lsfusion.server.logics.tasks.impl.MarkRecursionsTask">
        <property name="dependencies">
            <set>
                <ref bean="finalizeActionAbstractTask"/>
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="checkAbstractTask" class="lsfusion.server.logics.tasks.impl.CheckAbstractTask">
        <property name="dependencies">
            <set>
                <ref bean="finalizeCalcAbstractTask"/>
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="initClassAggrPropsTask" class="lsfusion.server.logics.tasks.impl.InitClassAggrPropsTask">
        <property name="dependencies">
            <set>
                <ref bean="finalizeCalcAbstractTask"/>
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>


    <bean id="finalizeTask" class="lsfusion.server.logics.tasks.GroupTask">
        <property name="dependencies">
            <set>
                <ref bean="finalizeCalcAbstractTask"/>
                <ref bean="markRecursionsTask"/>
            </set>
        </property>
    </bean>

    <bean id="initReflectionEventsTask" class="lsfusion.server.logics.tasks.impl.simple.InitReflectionEventsTask">
        <property name="dependencies">
            <set>
                <ref bean="finalizeTask"/>
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="initClassDataIndicesTask" class="lsfusion.server.logics.tasks.impl.simple.InitClassDataIndicesTask">
        <property name="dependencies">
            <set>
                <ref bean="initReflectionEventsTask"/>  <!-- чисто для хака initStats -->
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="finishLogInitTask" class="lsfusion.server.logics.tasks.impl.FinishLogInitTask">
        <property name="dependencies">
            <set>
                <ref bean="initReflectionEventsTask"/> <!-- так как логи - часть reflection'а-->
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="setupDrillDownTask" class="lsfusion.server.logics.tasks.impl.SetupDrillDownTask">
        <property name="dependencies">
            <set>
                <ref bean="finalizeTask"/>
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="setupPropertyPolicyFormsTask" class="lsfusion.server.logics.tasks.impl.SetupPropertyPolicyFormsTask">
        <property name="dependencies">
            <set>
                <ref bean="finalizeTask"/>
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="setupActionPolicyFormsTask" class="lsfusion.server.logics.tasks.impl.SetupActionPolicyFormsTask">
        <property name="dependencies">
            <set>
                <ref bean="setupDrillDownTask"/> <!-- т.к. нужна возможность настройки policy и для drilldown action'ов -->
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="showDependenciesTask" class="lsfusion.server.logics.tasks.impl.simple.ShowDependenciesTask">
        <property name="dependencies">
            <set>
                <ref bean="setupDrillDownTask"/>
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="getPropertyListTask" class="lsfusion.server.logics.tasks.impl.GetPropertyListTask">
        <property name="dependencies">
            <set>
                <ref bean="initReflectionEventsTask"/> <!-- так как в этом задании добавляются события -->
                <ref bean="showDependenciesTask"/> <!-- так как используется fillActionChangeProps, а его реализация не синхронизирована -->
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="finalizePropsTask" class="lsfusion.server.logics.tasks.impl.FinalizePropsTask">
        <property name="dependencies">
            <set>
                <!-- должно быть после всего, что может поменять editAction, contextMenu, etc.-->
                <ref bean="finishLogInitTask"/>
                <ref bean="setupDrillDownTask"/>
                <ref bean="setupPropertyPolicyFormsTask"/>
                <ref bean="setupActionPolicyFormsTask"/>
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="finalizeNavigatorElementsTask" class="lsfusion.server.logics.tasks.impl.FinalizeNavigatorElementsTask">
        <property name="dependencies">
            <set>
                <ref bean="finalizeTask"/>
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="finalizeFormsTask" class="lsfusion.server.logics.tasks.impl.FinalizeFormsTask">
        <property name="dependencies">
            <set>
                <ref bean="setupDrillDownTask"/> <!-- drilldown forms-->
                <ref bean="initReflectionEventsTask"/> <!-- log forms-->
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>
    
    <bean id="initIndicesTask" class="lsfusion.server.logics.tasks.impl.InitIndicesTask">
        <property name="dependencies">
            <set>
                <ref bean="finalizeTask"/>
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="initDebugTask" class="lsfusion.server.logics.tasks.impl.simple.InitActionDebuggerTask">
        <property name="dependencies">
            <set>
                <ref bean="checkAbstractTask"/>
                <ref bean="initClassAggrPropsTask"/>
                <ref bean="getPropertyListTask"/>
                <ref bean="finalizePropsTask"/>
                <ref bean="initIndicesTask"/>
                <ref bean="initClassDataIndicesTask"/>
                <ref bean="finalizeFormsTask"/>
                <ref bean="finalizeNavigatorElementsTask"/>
            </set>
        </property>
    </bean>

    <!-- Самый верхний task -->
    <bean id="initBLTask" class="lsfusion.server.logics.tasks.GroupTask">
        <property name="dependencies">
            <set>
                <ref bean="initDebugTask"/>
            </set>
        </property>
    </bean>
    
    <!-- Задачи инициализации reflection manager'а -->

    <bean id="executeOnStartedTask" class="lsfusion.server.logics.tasks.impl.ExecuteOnStartedTask">
        <property name="dependencies">
            <set>
                <ref bean="logLaunchTask"/>
            </set>
        </property>
        <property name="reflectionManager" ref="reflectionManager"/>
    </bean>

    <bean id="syncTablesTask" class="lsfusion.server.logics.tasks.impl.SyncTablesTask">
        <property name="dependencies">
            <set>
                <ref bean="syncPropertyEntitiesTask"/>
            </set>
        </property>
        <property name="reflectionManager" ref="reflectionManager"/>
    </bean>

    <bean id="syncPropertyEntitiesTask" class="lsfusion.server.logics.tasks.impl.SyncPropertyEntitiesTask">
        <property name="dependencies">
            <set>
                <ref bean="executeOnStartedTask"/>
            </set>
        </property>
        <property name="reflectionManager" ref="reflectionManager"/>
    </bean>

    <bean id="syncPropertyParentsTask" class="lsfusion.server.logics.tasks.impl.SyncPropertyParentsTask">
        <property name="dependencies">
            <set>
                <ref bean="syncPropertyEntitiesTask"/>
                <ref bean="syncGroupPropertiesTask"/>
            </set>
        </property>
        <property name="reflectionManager" ref="reflectionManager"/>
    </bean>

    <bean id="syncPropertyDrawsTask" class="lsfusion.server.logics.tasks.impl.SyncPropertyDrawsTask">
        <property name="dependencies">
            <set>
                <ref bean="syncFormsTask"/> <!--> так как ссылка на живой объект, а не varstring <-->
                <ref bean="syncGroupObjectsTask"/>
            </set>
        </property>
        <property name="reflectionManager" ref="reflectionManager"/>
    </bean>

    <bean id="syncParentsTask" class="lsfusion.server.logics.tasks.impl.SyncParentsTask">
        <property name="dependencies">
            <set>
                <ref bean="syncNavigatorElementsTask"/> <!--> так как ссылка на живой объект, а не varstring <-->
            </set>
        </property>
        <property name="reflectionManager" ref="reflectionManager"/>
    </bean>

    <bean id="syncNavigatorElementsTask" class="lsfusion.server.logics.tasks.impl.SyncNavigatorElementsTask">
        <property name="dependencies">
            <set>
                <ref bean="syncPropertyEntitiesTask"/> <!--> так как ссылка на живой объект, а не varstring, вообще конечно нужны action'ы но они пока вместе синхронизируются <-->
                <ref bean="syncFormsTask"/> <!--> так как ссылка на живой объект, а не varstring <-->
                <ref bean="executeOnStartedTask"/>
            </set>
        </property>
        <property name="reflectionManager" ref="reflectionManager"/>
    </bean>

    <bean id="syncFormsTask" class="lsfusion.server.logics.tasks.impl.SyncFormsTask">
        <property name="dependencies">
            <set>
                <ref bean="executeOnStartedTask"/>
            </set>
        </property>
        <property name="reflectionManager" ref="reflectionManager"/>
    </bean>
    
    <bean id="syncGroupPropertiesTask" class="lsfusion.server.logics.tasks.impl.SyncGroupPropertiesTask">
        <property name="dependencies">
            <set>
                <ref bean="executeOnStartedTask"/>
            </set>
        </property>
        <property name="reflectionManager" ref="reflectionManager"/>
    </bean>

    <bean id="syncGroupObjectsTask" class="lsfusion.server.logics.tasks.impl.SyncGroupObjectsTask">
        <property name="dependencies">
            <set>
                <ref bean="syncFormsTask"/> <!--> так как ссылка на живой объект, а не varstring <-->
            </set>
        </property>
        <property name="reflectionManager" ref="reflectionManager"/>
    </bean>

    <bean id="resetConnectionStatusTask" class="lsfusion.server.logics.tasks.impl.ResetConnectionStatusTask">
        <property name="dependencies">
            <set>
                <ref bean="executeOnStartedTask"/>
            </set>
        </property>
        <property name="reflectionManager" ref="reflectionManager"/>
    </bean>

    <bean id="logLaunchTask" class="lsfusion.server.logics.tasks.impl.LogLaunchTask">
        <property name="dependencies">
            <set>
            </set>
        </property>
        <property name="reflectionManager" ref="reflectionManager"/>
    </bean>

    <!-- Не имеет отношения к reflection manager'у, но желательно чтобы выполнялся после export'а remote объекта -->
    <bean id="prereadCachesTask" class="lsfusion.server.logics.tasks.impl.simple.PrereadCachesTask">
        <property name="dependencies">
            <set>
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="prereadPropertyCachesTask" class="lsfusion.server.logics.tasks.impl.PrereadPropertyCachesTask">
        <property name="dependencies">
            <set>
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="firstRecalculateStatsTask" class="lsfusion.server.logics.tasks.impl.FirstRecalculateStatsTask">
        <property name="dependencies">
            <set>
                <ref bean="syncTablesTask"/>
                <ref bean="syncPropertyParentsTask"/>
                <ref bean="syncPropertyEntitiesTask"/>
                <ref bean="syncPropertyDrawsTask"/>
                <ref bean="syncParentsTask"/>
                <ref bean="syncNavigatorElementsTask"/>
                <ref bean="syncGroupPropertiesTask"/>
                <ref bean="syncGroupObjectsTask"/>
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <bean id="initReflectionTask" class="lsfusion.server.logics.tasks.GroupTask">
        <property name="dependencies">
            <set>
                <ref bean="syncTablesTask"/>
                <ref bean="syncPropertyParentsTask"/>
                <ref bean="syncPropertyEntitiesTask"/>
                <ref bean="syncPropertyDrawsTask"/>
                <ref bean="syncParentsTask"/>
                <ref bean="syncNavigatorElementsTask"/>
                <ref bean="syncGroupPropertiesTask"/>
                <ref bean="syncGroupObjectsTask"/>
                <ref bean="resetConnectionStatusTask"/>
                <!--<ref bean="logLaunchTask"/>-->
                <ref bean="prereadCachesTask"/>
                <ref bean="prereadPropertyCachesTask"/>
                <ref bean="firstRecalculateStatsTask"/>
            </set>
        </property>
    </bean>

    <bean id="writeModulesHashTask" class="lsfusion.server.logics.tasks.impl.simple.WriteModulesHashTask">
        <property name="dependencies">
            <set>
            </set>
        </property>
        <property name="BL" ref="businessLogics"/>
    </bean>

    <!-- Список для переопределения custom-объектов -->
    <bean id="instanceCustomObjects" class="lsfusion.spring.SpringListsMergerFactory">
        <property name="listsToMerge">
            <list>
                <ref bean="coreCustomObjects"/>
                <ref bean="customObjects"/>
            </list>
        </property>
    </bean>

    <!-- Список базовых custom-объектов -->
    <util:list id="coreCustomObjects">
        <ref bean="scheduler"/>
    </util:list>

    <!-- Список для задания дополнительных custom-объектов -->
    <util:list id="customObjects"/>

    <!-- Remoting -->
    <bean id="rmiManager" class="lsfusion.server.logics.RMIManager">
        <property name="registryPort" value="${rmi.registryPort:7652}"/>
        <property name="httpPort" value="${http.port:7651}"/>
        <property name="jmxPort" value="${rmi.jmxPort:0}"/>
        <property name="exportPort" value="${rmi.exportPort:0}"/>
        <property name="exportName" value="${rmi.exportName:}"/>
    </bean>

    <bean id="remoteLogics" class="lsfusion.server.remote.RemoteLogics">
        <property name="businessLogics" ref="businessLogics"/>
        <property name="logicsInstance" ref="logicsInstance"/>
        <property name="navigatorsManager" ref="navigatorsManager"/>
        <property name="restartManager" ref="restartManager"/>
        <property name="securityManager" ref="securityManager"/>
        <property name="dbManager" ref="dbManager"/>
        <property name="clientVMOptions" ref="clientVMOptions"/>
        <property name="displayName" value="${logics.displayName:}"/>
        <property name="clientHideMenu" value="${client.hideMenu:}"/>
        <property name="logicsLogo" value="${logics.logicsLogo:}"/>
    </bean>

    <bean id="clientVMOptions" class="lsfusion.interop.VMOptions">
        <constructor-arg name="initHeapSize" value="${client.initHeapSize:}"/>
        <constructor-arg name="maxHeapSize" value="${client.maxHeapSize:}"/>
        <constructor-arg name="minHeapFreeRatio" value="${client.minHeapFreeRatio:}"/>
        <constructor-arg name="maxHeapFreeRatio" value="${client.maxHeapFreeRatio:}"/>
        <constructor-arg name="vmargs" value="${client.vmargs:}"/>
    </bean>

    <bean id="remoteLogicsLoader" class="lsfusion.server.remote.RemoteLogicsLoader">
        <property name="rmiManager" ref="rmiManager"/>
        <property name="remoteLogics" ref="remoteLogics"/>
    </bean>

    <!-- Other services -->
    <bean id="scheduler" class="lsfusion.server.logics.Scheduler">
        <property name="businessLogics" ref="businessLogics"/>
        <property name="logicsInstance" ref="logicsInstance"/>
        <property name="dbManager" ref="dbManager"/>
    </bean>

    <bean id="externalHttpServer" class="lsfusion.server.logics.ExternalHttpServer">
        <property name="logicsInstance" ref="logicsInstance"/>
        <property name="remoteLogics" ref="remoteLogics"/>
    </bean>

    <!-- Lifecycle Manager setup -->
    <bean id="lifecycleManager" class="lsfusion.server.lifecycle.LifecycleManager">
        <constructor-arg ref="lifecycleListeners"/>
    </bean>

    <bean id="lifecycleListeners" class="lsfusion.spring.SpringListsMergerFactory">
        <property name="listsToMerge">
            <list>
                <ref bean="coreLifecycleListeners"/>
                <ref bean="customLifecycleListeners"/>
            </list>
        </property>
    </bean>

    <!-- Список базовых LifecycleListener'ов -->
    <util:list id="coreLifecycleListeners">
        <ref bean="rmiManager"/>
        <ref bean="remoteLogics"/>
        <ref bean="remoteLogicsLoader"/>
        <ref bean="reflectionManager"/>
        <ref bean="modulesHashManager"/>
        <ref bean="scheduler"/>
        <ref bean="externalHttpServer"/>
    </util:list>

    <!-- Список для задания дополнительных LifecycleListener'ов -->
    <util:list id="customLifecycleListeners"/>

    <bean id="businessLogics" class="lsfusion.server.logics.scripted.ScriptingBusinessLogics">
        <property name="scriptFilePaths" value="${logics.includedPaths:}"/>
        <property name="excludedScriptFilePaths" value="${logics.excludedPaths:}"/>

        <property name="initTask" ref="initBLTask"/>

        <property name="topModule" value="${logics.topModule:}"/>
        <property name="orderDependencies" value="${logics.orderDependencies:}"/>
    </bean>
</beans>
