MODULE Service;

REQUIRE System, Reflection, Time;

NAMESPACE Service;

checkAggregationsAction 'Проверить аггрегации' = ACTION CUSTOM 'lsfusion.server.logics.service.CheckAggregationsActionProperty';
checkClassesAction 'Проверить классы' = ACTION CUSTOM 'lsfusion.server.logics.service.CheckClassesActionProperty';
recalculateClassesAction 'Пересчитать классы' = ACTION CUSTOM 'lsfusion.server.logics.service.RecalculateClassesActionProperty';
recalculateAction 'Пересчитать аггрегации' = ACTION CUSTOM 'lsfusion.server.logics.service.RecalculateActionProperty';
recalculateFollowsAction 'Пересчитать следствия и ограничения' = ACTION CUSTOM 'lsfusion.server.logics.service.RecalculateFollowsActionProperty';
analyzeDBAction 'Анализ БД' = ACTION CUSTOM 'lsfusion.server.logics.service.AnalyzeDBActionProperty';
vacuumDBAction 'Упаковать БД' = ACTION CUSTOM 'lsfusion.server.logics.service.VacuumDBActionProperty';
packAction 'Упаковать таблицы' = ACTION CUSTOM 'lsfusion.server.logics.service.PackActionProperty';
serviceDBAction 'Обслуживание БД' = ACTION CUSTOM 'lsfusion.server.logics.service.ServiceDBActionProperty';
getVMInfo 'Данные виртуальной машины' = ACTION CUSTOM 'lsfusion.server.logics.service.GetVMInfoActionProperty';
toggleExplainAnalyzeMode 'Выводить в лог EXPLAIN ANALYZE запросов' = ACTION CUSTOM 'lsfusion.server.logics.service.ToggleExplainAnalyzeModeActionProperty';
toggleExplainMode 'Выводить в лог EXPLAIN запросов' = ACTION CUSTOM 'lsfusion.server.logics.service.ToggleExplainModeActionProperty';
toggleVolatileStats 'Не использовать nested loop' = ACTION CUSTOM 'lsfusion.server.logics.service.ToggleVolatileStatsActionProperty';
toggleSQLLoggerDebugMode 'Выводить в лог доп.информацию' = ACTION CUSTOM 'lsfusion.server.logics.service.ToggleSQLLoggerDebugModeActionProperty';

restartServerAction 'Остановить сервер' = ACTION CUSTOM 'lsfusion.server.logics.service.RestartActionProperty';
runGarbageCollector 'Запустить сборщик мусора' = ACTION CUSTOM 'lsfusion.server.logics.service.GarbageCollectorActionProperty';
cancelRestartServerAction 'Отменить остановку сервера' = ACTION CUSTOM 'lsfusion.server.logics.service.CancelRestartActionProperty';
isServerRestarting = NATIVE BOOLEAN ();
isNotServerRestarting () = NOT isServerRestarting();

FORM admin 'Администрирование'
    PROPERTIES() currentDate, defaultBackgroundColor, defaultForegroundColor, restartServerAction SHOWIF isNotServerRestarting(),
                 cancelRestartServerAction SHOWIF isServerRestarting(), checkAggregationsAction, checkClassesAction, 
                 recalculateClassesAction, recalculateAction, recalculateFollowsAction, packAction, analyzeDBAction, 
                 vacuumDBAction, serviceDBAction, runGarbageCollector, getVMInfo, toggleExplainAnalyzeMode, 
                 toggleExplainMode, toggleVolatileStats,
                 toggleSQLLoggerDebugMode
;

DESIGN admin FROM DEFAULT {
    NEW pane {
        type = COLUMNS;
        columns = 3;
        NEW current {
            caption = 'Текущие значения';
            ADD PROPERTY(currentDate);
        }
        NEW colors {
            caption = 'Цвета';
            ADD PROPERTY(defaultBackgroundColor);
            ADD PROPERTY(defaultForegroundColor);
        }
        NEW administration {
            caption = 'Запуск';
            
            ADD PROPERTY(restartServerAction);
            ADD PROPERTY(cancelRestartServerAction);
            ADD PROPERTY(serviceDBAction);
        }
        NEW recalculate {
            caption = 'Исправление целостности базы данных';
            ADD PROPERTY(recalculateClassesAction);
            ADD PROPERTY(recalculateAction);
            ADD PROPERTY(recalculateFollowsAction);
        }
        NEW check {
            caption = 'Проверка целостности базы данных';
            ADD PROPERTY(checkClassesAction);
            ADD PROPERTY(checkAggregationsAction);
        }
        NEW database {
            caption = 'База данных';
            ADD PROPERTY(packAction);
            ADD PROPERTY(analyzeDBAction);
            ADD PROPERTY(vacuumDBAction);
            ADD PROPERTY(toggleVolatileStats);
        }
        NEW virtualMachine {
            caption = 'Виртуальная машина';
            ADD PROPERTY(runGarbageCollector);
            ADD PROPERTY(getVMInfo);
        }
        NEW log {
            caption = 'Логирование';
            ADD PROPERTY(toggleExplainAnalyzeMode);
            ADD PROPERTY(toggleExplainMode);
            ADD PROPERTY(toggleSQLLoggerDebugMode);
        }
    }
    ADD functions.box;
}

NAVIGATOR {
    configuration {
        ADD Service.admin;
    }
}

