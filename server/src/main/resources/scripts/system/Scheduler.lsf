MODULE Scheduler;

REQUIRE System, Reflection;


CLASS SchedulerStartType 'Отсчёт времени' {
    afterStart 'От запуска предыдущего',
    afterFinish 'От окончания предыдущего'
}

FORM schedulerStartTypes
    OBJECTS s = SchedulerStartType
    PROPERTIES(s) READONLY staticCaption
    DIALOG SchedulerStartType OBJECT s
;

EXTEND DESIGN schedulerStartTypes {
    main {
        PROPERTY(staticCaption) {
            caption = 'Отсчёт времени';
        }
    }
}

CLASS ScheduledTask 'Задание планировщика';
TABLE scheduledTask (ScheduledTask);

nameScheduledTask 'Имя' = DATA VARSTRING[100] (ScheduledTask);
runAtStartScheduledTask 'Выполнить при старте' = DATA BOOLEAN (ScheduledTask);
startDateScheduledTask 'Дата начала' = DATA DATETIME (ScheduledTask);
periodScheduledTask 'Повторять каждые (секунд)' = DATA INTEGER (ScheduledTask);
schedulerStartTypeScheduledTask 'Отсчёт времени' = DATA SchedulerStartType (ScheduledTask);
nameSchedulerStartTypeScheduledTask 'Отсчёт времени' = staticCaption(schedulerStartTypeScheduledTask(ScheduledTask));
activeScheduledTask 'Активно' = DATA BOOLEAN (ScheduledTask);

CLASS ScheduledTaskDetail 'Строка задания планировщика';
TABLE scheduledTaskDetail (ScheduledTaskDetail);

activeScheduledTaskDetail 'Активно' = DATA BOOLEAN (ScheduledTaskDetail);
orderScheduledTaskDetail 'Порядок' = DATA INTEGER (ScheduledTaskDetail);

scheduledTaskScheduledTaskDetail = DATA ScheduledTask (ScheduledTaskDetail);
propertyScheduledTaskDetail = DATA Property (ScheduledTaskDetail);
captionPropertyScheduledTaskDetail 'Свойство' (scheduledTaskDetail) = captionProperty(propertyScheduledTaskDetail(scheduledTaskDetail));
SIDPropertyScheduledTaskDetail 'Код свойства' (scheduledTaskDetail) = SIDProperty(propertyScheduledTaskDetail(scheduledTaskDetail));
classPropertyScheduledTaskDetail 'Класс свойства' (scheduledTaskDetail) = classProperty(propertyScheduledTaskDetail(scheduledTaskDetail));
returnPropertyScheduledTaskDetail 'Возвращаемый класс' (scheduledTaskDetail) = returnProperty(propertyScheduledTaskDetail(scheduledTaskDetail));
signaturePropertyScheduledTaskDetail 'Сигнатура' (scheduledTaskDetail) = signatureProperty(propertyScheduledTaskDetail(scheduledTaskDetail));

CLASS ScheduledTaskLog 'Лог планировщика';
TABLE scheduledTaskLog (ScheduledTaskLog);
TABLE scheduledTaskScheduledTaskLog (ScheduledTask, ScheduledTaskLog);

resultScheduledTaskLog 'Результат' = DATA VARSTRING[200] (ScheduledTaskLog);
propertyScheduledTaskLog 'Свойство' = DATA VARSTRING[200] (ScheduledTaskLog);
dateScheduledTaskLog 'Время' = DATA DATETIME (ScheduledTaskLog);
scheduledTaskScheduledTaskLog 'Задание планировщика' = DATA ScheduledTask (ScheduledTaskLog);


CLASS ScheduledClientTaskLog 'Сообщения клиента';
TABLE scheduledClientTaskLog (ScheduledClientTaskLog);

scheduledTaskLogScheduledClientTaskLog 'Лог планировщика'= DATA ScheduledTaskLog (ScheduledClientTaskLog);
messageScheduledClientTaskLog 'Сообщение'= DATA VARSTRING[200] (ScheduledClientTaskLog);

runSetupScheduler 'Планировщик' = ACTION CUSTOM 'lsfusion.server.SetupSchedulerActionProperty';

WHEN [GROUP SUM 1 IF
    ((CHANGED (runAtStartScheduledTask(scheduledTask)) AND activeScheduledTaskDetail(scheduledTaskDetail)) OR
    (CHANGED (startDateScheduledTask(scheduledTask)) AND activeScheduledTaskDetail(scheduledTaskDetail)) OR
    (CHANGED (periodScheduledTask(scheduledTask)) AND activeScheduledTaskDetail(scheduledTaskDetail)) OR
    (CHANGED (schedulerStartTypeScheduledTask(scheduledTask)) AND activeScheduledTaskDetail(scheduledTaskDetail)) OR
    (CHANGED (activeScheduledTask(scheduledTask)) AND activeScheduledTaskDetail(scheduledTaskDetail)) OR
    CHANGED (activeScheduledTaskDetail(scheduledTaskDetail)) OR
    CHANGED (orderScheduledTaskDetail(scheduledTaskDetail)))] ()
        DO EXEC runSetupScheduler();

FORM scheduledTask 'Планировщик'

    OBJECTS t=ScheduledTask
    PROPERTIES (t) activeScheduledTask, nameScheduledTask, startDateScheduledTask, periodScheduledTask,
                    nameSchedulerStartTypeScheduledTask, runAtStartScheduledTask
    PROPERTIES (t) ADDOBJ, DELETESESSION
         
    OBJECTS td=ScheduledTaskDetail
    PROPERTIES (td) activeScheduledTaskDetail, orderScheduledTaskDetail, captionPropertyScheduledTaskDetail, 
                    SIDPropertyScheduledTaskDetail, classPropertyScheduledTaskDetail, returnPropertyScheduledTaskDetail
    PROPERTIES (td) ADDOBJ, DELETESESSION
    
    OBJECTS tl=ScheduledTaskLog
    PROPERTIES (tl) READONLY propertyScheduledTaskLog, resultScheduledTaskLog, dateScheduledTaskLog

    OBJECTS ctl=ScheduledClientTaskLog
    PROPERTIES (ctl) READONLY messageScheduledClientTaskLog

    FILTERS scheduledTaskScheduledTaskDetail(td)==t,
            scheduledTaskScheduledTaskLog(tl) == t,
            scheduledTaskLogScheduledClientTaskLog(ctl) == tl

    FILTERGROUP filtersScheduler
            FILTER 'Только активные' 'F9' activeScheduledTaskDetail(td)
;

EXTEND DESIGN scheduledTask {
    NEW specContainer {
        fill = 1; 
        type = SPLITV;
        ADD t.box;
        NEW south {
            fill = 2;
            type = TABBED;
            ADD td.box {caption = 'Свойства';}
            NEW logContainer {
                caption = 'Лог';
                type = CONTAINERH;
                ADD tl.box;
                ADD ctl.box;
            }
        }
    }
    ADD functions.box;
}

FORM scheduledTaskProperties 'Свойства'
    OBJECTS p = Property
    PROPERTIES(p) READONLY captionProperty, SIDProperty, classProperty, returnProperty
    FILTERS signatureProperty(p) == '',
            returnProperty(p) == 'ActionClass'
    DIALOG Property OBJECT p
;

NAVIGATOR {
    configuration {
        ADD Scheduler.scheduledTask;
    }
}