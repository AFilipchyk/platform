MODULE Authentication;

REQUIRE System, Contact;

// ------------------------- Рабочие места ---------------------- //

CLASS Computer 'Рабочее место';
TABLE computer (Computer);

hostnameComputer 'Имя хоста' = DATA VARISTRING[100] (Computer) IN recognize;

// Сканер
scannerComPortComputer 'Com-port' = DATA INTEGER (Computer);
scannerSingleReadComputer 'Одно событие на весь штрих-код' = DATA BOOLEAN (Computer);

FORM computer 'Рабочее место'
    OBJECTS c = Computer FIXED PANEL
    PROPERTIES(c) hostnameComputer, scannerComPortComputer, scannerSingleReadComputer
    
    EDIT Computer OBJECT c
;

FORM computers 'Рабочие места'
    OBJECTS c = Computer
    PROPERTIES(c) READONLY hostnameComputer, scannerComPortComputer, scannerSingleReadComputer
    PROPERTIES(c) ADDFORM, EDITFORM, DELETE
;

// -------------------------- Пользователи ---------------------------- //
CLASS ABSTRACT User 'Пользователь';
TABLE user (User);

CLASS SystemUser 'Системный пользователь' : User;

CLASS CustomUser 'Обычный пользователь' : User, Contact;
TABLE customUser (CustomUser);
TABLE loginSID (STRING[30], STRING[30]);

currentUser = NATIVE User ();
currentUserName 'Имя Тек. Польз.' () = nameContact(currentUser());

nameUser 'Имя пользователя' (User user) = IF user IS SystemUser 
                        THEN 'Системный пользователь'
                        ELSE nameContact(user);
nameCustomUser (user) = nameUser(user AS CustomUser);

currentComputer = NATIVE Computer ();
hostnameCurrentComputer 'Текущий компьютер' () = hostnameComputer(currentComputer());

isLockedCustomUser 'Заблокирован' = DATA BOOLEAN (CustomUser);
loginCustomUser 'Логин' = DATA STRING[30] (CustomUser);
customUserLogin 'Обычный пользователь' (login) = GROUP AGGR customUser BY loginCustomUser(customUser) WHERE customUser IS CustomUser;
sha256PasswordCustomUser 'Пароль' = DATA VARSTRING[100] (CustomUser) ECHO;
calculatedHash 'Значение хэш' = DATA LOCAL VARSTRING[100] ();
forbidChangePasswordCustomUser 'Запретить пользователю изменять пароль' = DATA BOOLEAN (CustomUser);
forbidEditProfileCustomUser 'Запретить пользователю редактировать профиль' = DATA BOOLEAN (CustomUser);

lastActivityCustomUser 'Последняя активность' = DATA DATETIME (CustomUser);

calculateBase64Hash 'Вычислить Base64 хэш' = ACTION CUSTOM 'lsfusion.server.logics.authentication.CalculateBase64HashActionProperty' (STRING[10], STRING[30]);
logOut 'Выйти' = ACTION CUSTOM 'lsfusion.server.logics.authentication.LogOutActionProperty' ();
reloginUser 'Сменить пользователя' = ACTION CUSTOM 'lsfusion.server.logics.authentication.ReloginUserActionProperty' (CustomUser);

generateLoginPassword 'Сгенерировать логин и пароль' = ACTION CUSTOM 'lsfusion.server.logics.property.actions.GenerateLoginPasswordActionProperty' (CustomUser);

useLDAP 'Использовать LDAP аутентификацию' = DATA BOOLEAN ();
serverLDAP 'Сервер' = DATA VARSTRING[100] ();
portLDAP 'Порт' = DATA INTEGER ();
baseDNLDAP 'Base DN' = DATA VARSTRING[100] ();
userDNSuffixLDAP 'Суффикс для User DN' = DATA VARSTRING[100] ();

locked = DATA User (Object);
lockResult = DATA LOCAL NESTED BOOLEAN ();

lock(object) = ACTION NEWSESSION {    
    lockResult() <- NULL;
    APPLY SERIALIZABLE {
        IF NOT object THEN
            RETURN;
        IF locked(object) THEN {
            cancel();
        } ELSE {
            locked(object) <- currentUser();
            lockResult() <- TRUE;
        }
    }
}

unlock(object) = ACTION NEWSESSION { 
    IF lockResult() THEN APPLY locked(object) <- NULL;
}

changeSHA256PasswordCustomUser = ACTION(customUser) {
    REQUEST STRING[30] INPUT;
    EXEC calculateBase64Hash('SHA-256', requestedString());
    ASSIGN sha256PasswordCustomUser(customUser) <- calculatedHash();
}

FORM customUser 'Пользователь'
    OBJECTS u=CustomUser FIXED PANEL
    PROPERTIES(u) firstNameContact, lastNameContact, loginCustomUser,
    sha256PasswordCustomUser ON CHANGE changeSHA256PasswordCustomUser(u), emailContact,
    forbidChangePasswordCustomUser, forbidEditProfileCustomUser, isLockedCustomUser, lastActivityCustomUser

    EDIT CustomUser OBJECT u
;

DESIGN customUser {
    NEW container BEFORE functions.box {
        type = SPLITH;
        fill = 1;
        MOVE u.box {
            flex = 0.3;
        };
        u.panel.props {
            type = COLUMNS;
            columns = 1;
        }
    }
}

FORM customUsers 'Пользователи'
    OBJECTS u=CustomUser
    PROPERTIES(u) READONLY nameContact, loginCustomUser, emailContact
    PROPERTIES(u) forbidChangePasswordCustomUser, forbidEditProfileCustomUser, isLockedCustomUser READONLY,
                  lastActivityCustomUser, ADDFORM, EDITFORM FORCE PANEL, DELETE FORCE PANEL TOOLBAR

    PROPERTIES() useLDAP, serverLDAP, portLDAP, baseDNLDAP, userDNSuffixLDAP

    DIALOG CustomUser OBJECT u
;

FORM editProfile 'Редактировать профиль' IMAGE '/images/editReport.png'
    OBJECTS u=CustomUser FIXED PANEL
    PROPERTIES(u) loginCustomUser READONLY
    PROPERTIES(u) READONLYIF forbidEditProfileCustomUser(u) firstNameContact, lastNameContact, emailContact

    FILTERS u==currentUser()
;

DESIGN editProfile {
    main{
        type = CONTAINERH;
    }
}

// ---------------- Действия по изменению пользователя ------------------- //

userChanged() = DATA LOCAL BOOLEAN();

// Смена пользователя по логину и паролю
FORM reloginLoginUser 'Сменить пользователя'
    OBJECTS data = (login = STRING[30], password = STRING[30]) FIXED PANEL
    PROPERTIES valueLogin = OBJVALUE(login), valuePassword = OBJVALUE(password)
;

DESIGN reloginLoginUser {
    main{
        data.box {
            caption = 'Смена пользователя';
            PROPERTY(valueLogin){
                caption = 'Логин';
                font = 'Tahoma 36';
            }
            PROPERTY(valuePassword){
                caption = 'Пароль';
                echoSymbols = TRUE;
                font = 'Tahoma 36';
            }
        }
        REMOVE leftControls;
        REMOVE PROPERTY(formRefresh());
    }
}

reloginLoginUser = ACTION () {
    FORM reloginLoginUser MODAL;
    IF formResult() == FormResult.ok THEN {
        LOCAL user = CustomUser();
        ASSIGN user() <- customUserLogin(chosenString('login'));
        IF user() THEN {
            IF isLockedCustomUser(user()) THEN {
                MESSAGE 'Данный пользователь заблокирован';
            } ELSE {
                EXEC calculateBase64Hash('SHA-256', chosenString('password'));
                IF sha256PasswordCustomUser(user()) == calculatedHash() THEN {
                    EXEC reloginUser(user());
                    IF userChanged() THEN {
                        MESSAGE 'Пользователь изменён';
                    }
                } ELSE {
                    MESSAGE 'Неверный пароль (хэш)';
                }
            }
        } ELSE {
            MESSAGE 'Пользователь не найден';
        }
    }
}

// Смена пользователя по паролю
FORM reloginPasswordUser 'Сменить пользователя'
    OBJECTS password = STRING[30] FIXED PANEL
    PROPERTIES valuePassword = OBJVALUE(password)
;

DESIGN reloginPasswordUser {
    main{
        password.box {
            caption = 'Смена пользователя';
            PROPERTY(valuePassword){
                caption = 'Пароль';
                font = 'Tahoma 36';
            }
        }
        REMOVE leftControls;
        REMOVE PROPERTY(formRefresh());
    }
}

reloginPasswordUser = ACTION (customUser) {
    FORM reloginPasswordUser MODAL;
    IF formResult() == FormResult.ok THEN {
        IF isLockedCustomUser(customUser) THEN {
            MESSAGE 'Данный пользователь заблокирован';
        }  ELSE {
                EXEC calculateBase64Hash('SHA-256', chosenString('password'));
                IF sha256PasswordCustomUser(customUser)==calculatedHash() THEN {
                    EXEC reloginUser(customUser);
                    IF userChanged() THEN {
                        MESSAGE 'Пользователь изменён';
                    }
                } ELSE {
                    MESSAGE 'Неверный пароль (хэш)';
                }
        }
    }
}

// ---------------- Действия по изменению даннных пользователя ------------------- //

FORM changePasswordUser 'Сменить пароль'
    OBJECTS u=CustomUser FIXED PANEL
    PROPERTIES(u) READONLY loginCustomUser

    OBJECTS passwords = (old = STRING[30], new1 = STRING[30], new2 = STRING[30]) FIXED PANEL
    PROPERTIES valueOld = OBJVALUE(old), valueNew1 = OBJVALUE(new1), valueNew2 = OBJVALUE(new2)

    FILTERS u==currentUser()
;

DESIGN changePasswordUser {
    main{
        passwords.box {
            MOVE PROPERTY(loginCustomUser(u)) FIRST {
               font = 'Tahoma 36';
            };
            PROPERTY(valueOld){
                caption = 'Старый пароль';
                echoSymbols = TRUE;
                font = 'Tahoma 36';
            }
            PROPERTY(valueNew1){
                caption = 'Новый пароль';
                echoSymbols = TRUE;
                font = 'Tahoma 36';
            }
            PROPERTY(valueNew2){
                caption = 'Повторите новый пароль';
                echoSymbols = TRUE;
                font = 'Tahoma 36';
            }
        }
        REMOVE leftControls;
        REMOVE PROPERTY(formRefresh());
    }
}

changePasswordUser = ACTION (customUser) {
    FORM changePasswordUser MODAL;
    IF formResult() == FormResult.ok THEN {
            EXEC calculateBase64Hash('SHA-256', chosenString('old'));
            IF  calculatedHash() != sha256PasswordCustomUser(customUser) THEN {
                MESSAGE 'Неверный старый пароль (хэш)';
                BREAK;
            }

        IF chosenString('new1') != chosenString('new2') THEN {
            MESSAGE 'Введённые пароли не совпадают';
            BREAK;
        }
        //ASSIGN passwordCustomUser(customUser) <- chosenString('new1');
        EXEC calculateBase64Hash('SHA-256', chosenString('new1'));
        ASSIGN sha256PasswordCustomUser(customUser) <- calculatedHash();
        MESSAGE 'Пароль изменён';
        }
}

changePassword = ACTION () {
      IF forbidChangePasswordCustomUser(currentUser()) THEN {
        MESSAGE 'Вы не можете изменить свой пароль';
      }
      ELSE {
            EXEC changePasswordUser(currentUser());
      }
}

NAVIGATOR {
    administration {
        NEW security 'Управление доступом' AFTER application {
            ADD customUsers;
            ADD computers;
        }
    }
    NEW account 'Учётная запись' WINDOW toolbar IMAGE '/images/lock.png' {
        NEW reloginLoginUserAction 'Сменить пользователя' ACTION reloginLoginUser IMAGE '/images/relogin.png';
        ADD editProfile;
        NEW changePasswordAction 'Сменить пароль' ACTION changePassword IMAGE '/images/change_password.png';
        NEW logOutAction 'Выйти' ACTION logOut IMAGE '/images/logout.png';
    }
}