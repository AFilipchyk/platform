MODULE Email;

REQUIRE System, Reflection;

GROUP email 'Настройки почтового сервера' : public;   //rootGroup

CLASS EncryptedConnectionTypeStatus 'Тип шифрованного подключения' {
    SSL 'SSL',
    TLS 'TLS'
}
FORM encryptedConnectionTypeStatuses
    OBJECTS s = EncryptedConnectionTypeStatus
    PROPERTIES(s) READONLY staticCaption
    DIALOG EncryptedConnectionTypeStatus OBJECT s
;

CLASS ReceiveAccountType 'Тип учётной записи' {
    POP3 'POP3',
    IMAP 'IMAP'
}

FORM receiveAccountTypes
    OBJECTS r = ReceiveAccountType
    PROPERTIES(r) READONLY staticCaption
    DIALOG ReceiveAccountType OBJECT r
;

CLASS Notification 'Уведомление';
TABLE notification (Notification);
TABLE notificationProperty (Notification, Property);

isEventNotification 'При любом изменении' = DATA BOOLEAN (Notification);
emailFromNotification 'Адрес отправителя' = DATA VARSTRING[50] (Notification);
emailToNotification 'Адрес получателя' = DATA VARSTRING[50] (Notification);
emailToCCNotification 'Копия' = DATA VARSTRING[50] (Notification);
emailToBCNotification 'Скрытая копия' = DATA VARSTRING[50] (Notification);
textNotification 'Текст письма' = DATA TEXT (Notification);
subjectNotification 'Тема письма'= DATA VARSTRING[100] (Notification);
inNotificationProperty 'Вкл.' = DATA BOOLEAN (Notification, Property);

CLASS Account 'E-mail аккаунт';
TABLE account (Account);

nameAccount 'Имя аккаунта' = DATA VARSTRING[50](Account);
passwordAccount 'Пароль' = DATA VARSTRING[50](Account) ECHO;
fromAddressAccount 'Адрес отправителя' = DATA VARSTRING[50] (Account);

isDefaultNotificationAccount 'Использовать для отправки уведомлений' = DATA BOOLEAN (Account);
defaultNotificationAccount 'E-mail аккаунт для отправки уведомлений' = GROUP MAX account IF isDefaultNotificationAccount(account);
fromAddressDefaultNotificationAccount 'Адрес для отправки уведомлений по умолчанию' () = fromAddressAccount(defaultNotificationAccount());

isDefaultInboxAccount 'Использовать для получения сообщений' = DATA BOOLEAN (Account);
defaultInboxAccount 'E-mail аккаунт для получения сообщений' = GROUP MAX account IF isDefaultInboxAccount(account);

smtpHostAccount 'SMTP хост' = DATA VARSTRING[50](Account);
smtpPortAccount 'SMTP порт' = DATA VARSTRING[10](Account);
receiveHostAccount 'Хост' = DATA VARSTRING[50](Account);
receiveAccountTypeAccount 'Тип учётной записи' = DATA ReceiveAccountType(Account);
nameReceiveAccountTypeAccount 'Тип учётной записи' (account) = staticCaption(receiveAccountTypeAccount(account));
blindCarbonCopyAccount 'Копия (BCC)'= DATA VARSTRING[50](Account);
deleteMessagesAccount 'Удалять сообщения с сервера' = DATA BOOLEAN(Account);
disableAccount 'Отключить отсылку и получение почты' = DATA BOOLEAN(Account);

encryptedConnectionTypeAccount 'Тип шифрованного подключения' = DATA EncryptedConnectionTypeStatus(Account);
nameEncryptedConnectionTypeAccount 'Тип шифрованного подключения' (account) = staticCaption(encryptedConnectionTypeAccount(account)) PREFCHARWIDTH 3;

CLASS Email 'Письмо';
TABLE email(Email);

idEmail = DATA VARSTRING[100] (Email);  
emailId = GROUP AGGR email BY idEmail (email) WHERE email IS Email; 
accountEmail = DATA Account (Email);

subjectEmail 'Тема' = DATA VARSTRING[100] (Email);
fromAddressEmail 'От' = DATA VARSTRING[100] (Email);
toAddressEmail 'Кому' = DATA VARSTRING[100] (Email);
dateTimeSentEmail 'Дата отправки' = DATA DATETIME (Email);
dateTimeReceivedEmail 'Дата получения' = DATA DATETIME (Email);
messageEmail 'Сообщение' = DATA RICHTEXT (Email);
emlFileEmail 'Файл EML' = DATA CUSTOMFILE (Email);
openEMLFileEmail 'Открыть файл EML' (email) = ACTION OPENFILE emlFileEmail (email);

receiveEmailAction 'Получить почту' = ACTION CUSTOM 'lsfusion.server.mail.ReceiveEmailActionProperty';

FORM account 'E-mail аккаунт'
    OBJECTS a = Account FIXED PANEL
    PROPERTIES(a) nameAccount, passwordAccount, fromAddressAccount, smtpHostAccount, smtpPortAccount, nameReceiveAccountTypeAccount, receiveHostAccount,
                  nameEncryptedConnectionTypeAccount, blindCarbonCopyAccount, deleteMessagesAccount, 
                  isDefaultNotificationAccount, isDefaultInboxAccount, disableAccount
    EDIT Account OBJECT a
;

FORM accounts 'E-mail аккаунты'
   
    OBJECTS a = Account
    PROPERTIES(a) nameAccount, passwordAccount, fromAddressAccount, smtpHostAccount, smtpPortAccount, nameReceiveAccountTypeAccount, receiveHostAccount,
                  nameEncryptedConnectionTypeAccount, blindCarbonCopyAccount, deleteMessagesAccount, 
                  isDefaultNotificationAccount, disableAccount
    PROPERTIES(a) ADDFORM, EDITFORM, DELETE TOOLBAR

    DIALOG Account OBJECT a
;

CLASS AttachmentEmail 'Вложение';
TABLE attachmentEmail(AttachmentEmail);

idAttachmentEmail = DATA VARSTRING[100] (AttachmentEmail);  
importedAttachmentEmail 'Импортировано' = DATA BOOLEAN (AttachmentEmail);  
notImportedAttachmentEmail (attachmentEmail) = NOT importedAttachmentEmail (attachmentEmail) AND attachmentEmail IS AttachmentEmail;
emailAttachmentEmail = DATA Email (AttachmentEmail);
attachmentEmailIdEmail (id, email) = GROUP AGGR attachment BY idAttachmentEmail (attachment), idEmail(emailAttachmentEmail(attachment)) WHERE attachment IS AttachmentEmail; 
nameAttachmentEmail 'Имя файла' = DATA VARSTRING[255] (AttachmentEmail);
fileAttachmentEmail 'Файл' = DATA CUSTOMFILE (AttachmentEmail);
openFileAttachmentEmail 'Файл' (attachmentEmail) = ACTION OPENFILE fileAttachmentEmail(attachmentEmail);

FORM remindUserPass 'Напоминание пароля'

    OBJECTS u=CustomUser FIXED PANEL
    PROPERTIES(u) READONLY loginCustomUser, nameContact
;

emailUserPassUser 'Напоминание пароля' (user) = ACTION EMAIL
                               SUBJECT 'Напоминание пароля' IF user IS CustomUser
                               TO emailContact(user)
                               INLINE remindUserPass OBJECTS u = user;

FORM mail 'Почта' 

    OBJECTS a=Account

    PROPERTIES(a) nameAccount, smtpHostAccount, smtpPortAccount, nameReceiveAccountTypeAccount, receiveHostAccount, nameEncryptedConnectionTypeAccount,
                  fromAddressAccount, passwordAccount, blindCarbonCopyAccount, deleteMessagesAccount, 
                  isDefaultNotificationAccount, isDefaultInboxAccount, disableAccount 
    PROPERTIES(a) FORCE PANEL ADDOBJ, DELETE TOOLBAR
    
    OBJECTS e=Email
  
    PROPERTIES(e) subjectEmail, fromAddressEmail, toAddressEmail, dateTimeSentEmail, 
                   dateTimeReceivedEmail, openEMLFileEmail, messageEmail READONLY FORCE PANEL
    PROPERTIES(e) DELETE
    PROPERTIES() FORCE PANEL receiveEmailAction TODRAW e 
    FILTERS accountEmail(e)==a
                    
    OBJECTS ae=AttachmentEmail
    
    PROPERTIES(ae) importedAttachmentEmail, nameAttachmentEmail READONLY, openFileAttachmentEmail
    FILTERS emailAttachmentEmail(ae)==e
    
    OBJECTS n=Notification
    OBJECTS p=Property
        
    PROPERTIES(n, p) inNotificationProperty
    PROPERTIES(n) subjectNotification, textNotification FORCE PANEL, emailFromNotification, emailToNotification, emailToCCNotification, emailToBCNotification, isEventNotification, ADDOBJ
    PROPERTIES(p) READONLY captionProperty, SIDProperty
    ORDER BY SIDProperty(p)
        
    FILTERGROUP emailFilter
        FILTER 'Только отмеченные' 'F9' inNotificationProperty(n, p)
;

EXTEND DESIGN mail {
    main {
        NEW specContainer {
            fill = 1;
            ADD a.box;
            NEW mailContainer {
                fill = 3;
                type = TABBED;    
                NEW emailContainer {
                    caption = 'Входящие';
                    ADD e.box;
                    NEW tabbedContainer {
                        fill = 1;
                        type=TABBED;
                        NEW textContainer {
                            caption = 'Сообщение';
                            type = CONTAINERV;        
                            ADD PROPERTY(messageEmail(e)) {
                                fill = 1;
                                preferredSize = ( -1, 200);
                                panelLabelAbove = TRUE;
                            }
                        }
                        ADD ae.box {caption = 'Вложения';}
                    }
                }
                NEW notificationContainer {
                    caption = 'Уведомления';
                    ADD n.box;
                    NEW pane {
                        fill = 1;
                        type = CONTAINERH;
                        ADD p.box;
                        ADD PROPERTY(textNotification(n)) {
                            fill = 1;
                            panelLabelAbove = TRUE;
                        }
                    }
                }
            }
            ADD functions.box;
        }
    }
}

NAVIGATOR {
    //ADD remindUserPass;
    configuration {
        ADD Email.mail;
    }
}