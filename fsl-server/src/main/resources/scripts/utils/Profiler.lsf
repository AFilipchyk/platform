MODULE Profiler;

REQUIRE Security, Utils;

CLASS ProfileObject {
    top 'Базовое действие'
}

TABLE profileObject(ProfileObject); 
TABLE profileData(ProfileObject, ProfileObject, User, ProfileForm);

text 'Действие' = DATA TEXT (ProfileObject) IN recognize;
profileObject = GROUP AGGR ProfileObject profileObject BY text(profileObject);

totalTime 'Суммарное время выполнения' = DATA LOCAL LONG (TEXT, TEXT, User, ProfileForm);
totalSQLTime 'Суммарное время выполнения SQL' = DATA LOCAL LONG (TEXT, TEXT, User, ProfileForm);  
totalUserInteractionTime 'Суммарное время ожидания действия пользователя' = DATA LOCAL LONG (TEXT, TEXT, User, ProfileForm);
callCount 'Количество вызовов' = DATA LOCAL LONG (TEXT, TEXT, User, ProfileForm);
minTime 'Минимальное время выполнения' = DATA LOCAL LONG (TEXT, TEXT, User, ProfileForm);
maxTime 'Максимальное время выполнения' = DATA LOCAL LONG (TEXT, TEXT, User, ProfileForm);
squaresSum 'Сумма квадратов времени выполнения' = DATA LOCAL DOUBLE (TEXT, TEXT, User, ProfileForm);

totalTime 'Суммарное время выполнения' = DATA LONG (ProfileObject, ProfileObject, User, ProfileForm);
totalSQLTime 'Суммарное время выполнения SQL' = DATA LONG (ProfileObject, ProfileObject, User, ProfileForm);
totalUserInteractionTime 'Суммарное время ожидания действия пользователя' = DATA LONG (ProfileObject, ProfileObject, User, ProfileForm);
callCount 'Количество вызовов' = DATA LONG (ProfileObject, ProfileObject, User, ProfileForm);
minTime 'Минимальное время выполнения' = DATA LONG (ProfileObject, ProfileObject, User, ProfileForm);
maxTime 'Максимальное время выполнения' = DATA LONG (ProfileObject, ProfileObject, User, ProfileForm);
squaresSum 'Сумма квадратов времени выполнения' = DATA DOUBLE (ProfileObject, ProfileObject, User, ProfileForm);

mTotalTime 'Суммарное время выполнения (с ожиданием)' (ProfileObject p1, ProfileObject p2, User u, ProfileForm f) = NUMERIC[20,3](totalTime(p1, p2, u, f)) / 1000000;
mTotalSQLTime 'Суммарное время выполнения SQL' (ProfileObject p1, ProfileObject p2, User u, ProfileForm f) = NUMERIC[20,3](totalSQLTime(p1, p2, u, f)) / 1000000;
mTotalUserInteractionTime 'Суммарное время ожидания действия пользователя' (ProfileObject p1, ProfileObject p2, User u, ProfileForm f) = NUMERIC[20,3](totalUserInteractionTime(p1, p2, u, f)) / 1000000;
mMinTime 'Минимальное время выполнения' (ProfileObject p1, ProfileObject p2, User u, ProfileForm f) = NUMERIC[20,3](minTime(p1, p2, u, f)) / 1000000;
mMaxTime 'Максимальное время выполнения' (ProfileObject p1, ProfileObject p2, User u, ProfileForm f) = NUMERIC[20,3](maxTime(p1, p2, u, f)) / 1000000;
mAverageTime 'Среднее время выполнения' (ProfileObject p1, ProfileObject p2, User u, ProfileForm f) = NUMERIC[20,3](totalTime(p1, p2, u, f)) / callCount(p1, p2, u, f) / 1000000; 
mAverageSquaredTime 'Среднее квадратичное времени выполнения' (ProfileObject p1, ProfileObject p2, User u, ProfileForm f) = NUMERIC[20,3](sqrt(squaresSum(p1, p2, u, f) / callCount(p1, p2, u, f)) / 1000000); 

doStartProfiler 'Запустить профилировщик' () = ACTION CUSTOM 'lsfusion.erp.utils.StartProfilerActionProperty';
startProfiler 'Запустить профилировщик' () = ACTION {
    totalTime(ProfileObject p1, ProfileObject p2, User u, ProfileForm f) <- NULL;
    totalSQLTime(ProfileObject p1, ProfileObject p2, User u, ProfileForm f) <- NULL; 
    totalUserInteractionTime(ProfileObject p1, ProfileObject p2, User u, ProfileForm f) <- NULL; 
    callCount(ProfileObject p1, ProfileObject p2, User u, ProfileForm f) <- NULL; 
    minTime(ProfileObject p1, ProfileObject p2, User u, ProfileForm f) <- NULL; 
    maxTime(ProfileObject p1, ProfileObject p2, User u, ProfileForm f) <- NULL; 
    squaresSum(ProfileObject p1, ProfileObject p2, User u, ProfileForm f) <- NULL; 

    apply();
    
    doStartProfiler();
}

stopProfiler 'Остановить профилировщик' () = ACTION CUSTOM 'lsfusion.erp.utils.StopProfilerActionProperty';

writeProfilerBatch () = ACTION {
    FOR [= GROUP SUM 1 IF callCount(TEXT t1, TEXT t2, User u, ProfileForm f) BY t1](TEXT t1) AND NOT profileObject(t1) INLINE ADDOBJ p = ProfileObject DO {
        text(p) <- t1;    
    }     

    FOR [= GROUP SUM 1 IF callCount(TEXT t1, TEXT t2, User u, ProfileForm f) BY t2](TEXT t2) AND NOT profileObject(t2) INLINE ADDOBJ p = ProfileObject DO {
        text(p) <- t2;    
    }     
    
    FOR ProfileObject p1 == profileObject(TEXT t1) AND ProfileObject p2 == profileObject(TEXT t2) AND callCount(t1, t2, User u, ProfileForm f) INLINE DO {
            totalTime(p1, p2, u, f) <- totalTime(p1, p2, u, f) (+) totalTime(t1, t2, u, f); 
            totalSQLTime(p1, p2, u, f) <- totalSQLTime(p1, p2, u, f) (+) totalSQLTime(t1, t2, u, f); 
            totalUserInteractionTime(p1, p2, u, f) <- totalUserInteractionTime(p1, p2, u, f) (+) totalUserInteractionTime(t1, t2, u, f); 
            callCount(p1, p2, u, f) <- callCount(p1, p2, u, f) (+) callCount(t1, t2, u, f); 
            minTime(p1, p2, u, f) <- MIN minTime(p1, p2, u, f), minTime(t1, t2, u, f); 
            maxTime(p1, p2, u, f) <- MAX maxTime(p1, p2, u, f), maxTime(t1, t2, u, f); 
            squaresSum(p1, p2, u, f) <- squaresSum(p1, p2, u, f) (+) squaresSum(t1, t2, u, f);     
    }   
     
    apply();
}

totalTimeNoWait 'Суммарное время выполнения' (ProfileObject up, ProfileObject down, User u, ProfileForm f) = mTotalTime(up, down, u, f) (-)  mTotalUserInteractionTime(up, down, u, f);
totalJavaTime 'Суммарное время выполнения Java' (ProfileObject up, ProfileObject down, User u, ProfileForm f) = totalTimeNoWait(up, down, u, f) (-)  mTotalSQLTime(up, down, u, f);

dataInFilter 'Отм' = DATA LOCAL BOOLEAN (User);
inFilter 'Отм' = DATA LOCAL BOOLEAN (UserRole);
inFilter 'Отм' = OVERRIDE [=GROUP SUM 1 IF in(User u, UserRole r) AND inFilter(r) BY u](User u) > 0, inFilter(mainRole(u)), dataInFilter(u);

inFilter 'Отм' = DATA LOCAL BOOLEAN (ProfileForm);

downTotalTimeNoWait 'Общее время выполнения' = GROUP SUM totalTimeNoWait(ProfileObject down, ProfileObject up, User u, ProfileForm f) 
        IF inFilter(f) AND inFilter(u) AND callCount(down, up, u, f)
        BY down;
downTotalJavaTime 'Общее время выполнения Java' = GROUP SUM totalJavaTime(ProfileObject down, ProfileObject up, User u, ProfileForm f) 
        IF inFilter(f) AND inFilter(u) AND callCount(down, up, u, f)
        BY down;
downTotalSQLTime 'Общее время выполнения SQL' = GROUP SUM mTotalSQLTime(ProfileObject down, ProfileObject up, User u, ProfileForm f) 
        IF inFilter(f) AND inFilter(u) AND callCount(down, up, u, f)
        BY down;
        
upTotalTimeNoWait 'Время выполнения вызванных' = GROUP SUM totalTimeNoWait(ProfileObject down, ProfileObject up, User u, ProfileForm f) 
        IF inFilter(f) AND inFilter(u) AND callCount(down, up, u, f)
        BY up;
upTotalJavaTime 'Суммарное время выполнения Java вызванных' = GROUP SUM totalJavaTime(ProfileObject down, ProfileObject up, User u, ProfileForm f) 
        IF inFilter(f) AND inFilter(u) AND callCount(down, up, u, f)
        BY up;
upTotalSQLTime 'Суммарное время выполнения SQL вызванных' = GROUP SUM mTotalSQLTime(ProfileObject down, ProfileObject up, User u, ProfileForm f) 
        IF inFilter(f) AND inFilter(u) AND callCount(down, up, u, f)
        BY up;

totalTimeNoWait 'Внутренне время выполнения' (ProfileObject po) = downTotalTimeNoWait(po) (-) upTotalTimeNoWait(po);
totalJavaTime 'Внутреннее время выполнения Java' (ProfileObject po) = downTotalJavaTime(po) (-) upTotalJavaTime(po);
totalSQLTime 'Внутреннее время выполнения SQL' (ProfileObject po) = downTotalSQLTime(po) (-) upTotalSQLTime(po);

dataSelectedTop = DATA LOCAL ProfileObject();
selectedTop = OVERRIDE ProfileObject.top, dataSelectedTop();
nameSelectedTop 'Действие' = VARSTRING[1000](text(selectedTop()));

parent(ProfileObject down) = IF NOT down == selectedTop() THEN 
        OVERRIDE ProfileObject.top IF down IS ProfileObject, 
            [=GROUP LAST ProfileObject up IF callCount(ProfileObject down, up, User u, ProfileForm f) AND inFilter(f) AND inFilter(u) BY down ORDER downTotalTimeNoWait(down)](down);
        
allChild = GROUP LAST ProfileObject down IF callCount(down, ProfileObject up, User u, ProfileForm f) AND inFilter(f) AND inFilter(u) BY up ORDER upTotalTimeNoWait(up);

child(ProfileObject up) = IF NOT allChild(up) == selectedTop() THEN 
        OVERRIDE ProfileObject.top IF up IS ProfileObject, 
            allChild(up);
        
FORM profiler 'Профилировщик'
    PROPERTIES() startProfiler, stopProfiler 
  
    OBJECTS hs = ProfileObject
    PROPERTIES(hs) READONLY text, totalTimeNoWait, totalJavaTime, totalSQLTime, downTotalTimeNoWait, downTotalJavaTime, downTotalSQLTime
    ORDER BY totalTimeNoWait(hs) DESC
    FILTERS totalTimeNoWait(hs)
    
    OBJECTS tt = ProfileObject
    PROPERTIES(tt) READONLY text, downTotalTimeNoWait, downTotalJavaTime, downTotalSQLTime, totalTimeNoWait, totalJavaTime, totalSQLTime
    ORDER BY downTotalTimeNoWait(tt) DESC
    FILTERS downTotalTimeNoWait(tt)

    OBJECTS g = (po1 = ProfileObject, po2 = ProfileObject, user = User, form = ProfileForm)
    PROPERTIES(po2) READONLY text
    PROPERTIES(po1) READONLY text 
    PROPERTIES(user) READONLY name
    PROPERTIES(form) READONLY canonicalName
    PROPERTIES(po1, po2, user, form) READONLY mTotalTime, totalTimeNoWait, totalJavaTime, mTotalSQLTime,  mTotalUserInteractionTime, callCount, mMinTime, mMaxTime, mAverageTime, mAverageSquaredTime
    
    ORDER BY mTotalTime(po1, po2, user, form) DESC 
    FILTERS callCount(po1, po2, user, form)
    
    OBJECTS r = UserRole
    PROPERTIES (r) inFilter
    PROPERTIES (r) READONLY name
    
    OBJECTS u = User
    PROPERTIES (u) inFilter
    PROPERTIES (u) READONLY name, nameMainRole
    
    OBJECTS f = ProfileForm
    PROPERTIES (f) inFilter
    PROPERTIES (f) READONLY canonicalName
    
    PROPERTIES nameSelectedTop() 
    TREE pT down=ProfileObject PARENT parent
    PROPERTIES (down) READONLY text, downTotalTimeNoWait, downTotalJavaTime, downTotalSQLTime, totalTimeNoWait, totalJavaTime, totalSQLTime
    
    TREE pB up=ProfileObject PARENT child
    PROPERTIES (up) READONLY text, downTotalTimeNoWait, downTotalJavaTime, downTotalSQLTime, totalTimeNoWait, totalJavaTime, totalSQLTime
;

DESIGN profiler {
    PROPERTY (text(po2)) {
        caption = 'Верхнее действие';
    }
    
    NEW tab {
        type = TABBED ;
        fill = 1;
        NEW options {
            caption = 'Настройки';
            type = SPLITH;
            NEW user{
                fill = 1;
                MOVE r.box;
                MOVE u.box;        
            }
            MOVE f.box;
        }
        NEW hotSpots {
            caption = 'Hot spots';
            MOVE hs.box;
        }
        NEW totalTime {
            caption = 'Total time';
            MOVE tt.box;
        }
        NEW call {
            caption = 'Call graph';
            MOVE PROPERTY (nameSelectedTop());
            NEW split {
                type = SPLITH;
                fill = 1;
                MOVE pT.tree.box;
                MOVE pB.tree.box;
            }
        }
        NEW raw {
            caption = 'Raw data';
            MOVE g.box;
        }
    }
    MOVE PROPERTY (startProfiler());
    MOVE PROPERTY (stopProfiler());
    MOVE functions.box;
}

setSelected 'Посмотреть дерево вызовов'(ProfileObject po) = ACTION {
    dataSelectedTop() <- po;
    ACTIVATE TAB call FORM profiler;
} SHORTCUT text[ProfileObject];

NAVIGATOR {
    systemEvents {
        ADD profiler;
    }
}
