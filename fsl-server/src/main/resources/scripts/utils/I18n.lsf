MODULE I18n;

REQUIRE System, MasterData, Utils;

// ------------------------------------------------ Язык ---------------------------------------------- //

CLASS Dictionary 'Словарь';
TABLE dictionary (Dictionary);

name 'Наименование' = DATA VARISTRING[50](Dictionary);

insensitive 'Нечувствительный к регистру' = DATA BOOLEAN (Dictionary);

CLASS DictionaryEntry 'Слова';
TABLE dictionaryEntry (DictionaryEntry);

dictionary 'Словарь' = DATA Dictionary (DictionaryEntry);
term 'Термин' = DATA VARSTRING[50] (DictionaryEntry);
insensitiveTerm(DictionaryEntry dictionaryEntry) = upper (term(dictionaryEntry));
translation 'Перевод' = DATA VARSTRING[50] (DictionaryEntry);

dictionaryEntryTerm = GROUP AGGR DictionaryEntry dictionaryEntry BY dictionary(dictionaryEntry), term(dictionaryEntry) WHERE dictionaryEntry IS DictionaryEntry;
translationDictionaryEntry 'Перевод' (Dictionary dictionary, VARSTRING[50] term) = translation(dictionaryEntryTerm(dictionary, term));
nameDictionary 'Словарь' (DictionaryEntry dictionaryEntry) = name(dictionary(dictionaryEntry));
insensitiveDictionaryEntryTerm = GROUP MAX DictionaryEntry dictionaryEntry BY dictionary(dictionaryEntry), insensitiveTerm(dictionaryEntry);
insensitiveTranslationDictionaryEntry 'Нечувствительный к регистру перевод' = translation (dictionaryEntryTerm(Dictionary dictionary, VARSTRING[50] term));

CLASS Language 'Язык';
TABLE language(Language);

name 'Наименование' = DATA VARISTRING[50](Language);

locale 'Locale' = DATA STRING[5] (Language);

FORM language 'Язык'
    OBJECTS l = Language PANEL
    PROPERTIES(l) name, locale

    EDIT Language OBJECT l
;

FORM languages 'Языки'
    OBJECTS l = Language
    PROPERTIES(l) READONLY name, locale
    PROPERTIES(l)          NEWSESSION NEW, EDIT, DELETE GRID

    LIST Language OBJECT l
;

NAVIGATOR {
    regionalData {
        ADD languages;
    }
}

languageFrom = DATA Language (Dictionary);
nameLanguageFrom 'С языка'(Dictionary dictionary) = name(languageFrom(dictionary));
languageTo = DATA Language (Dictionary);
nameLanguageTo 'На язык'(Dictionary dictionary) = name(languageTo(dictionary));

translationInput 'Текст для перевода' = DATA LOCAL TEXT ();
translationResult 'Переведённый текст' = DATA LOCAL TEXT ();

// ------------------------------------ Перевод через Google Translate -------------------------------- //

languageFromTranslation = DATA Language ();
nameLanguageFromTranslation 'С языка'() = name(languageFromTranslation());
languageToTranslation = DATA Language ();
nameLanguageToTranslation 'На язык'() = name(languageToTranslation());

translate  = ACTION CUSTOM 'lsfusion.erp.utils.i18n.TranslateActionProperty' (TEXT, Language, Language);

translateTerm 'Перевести'(DictionaryEntry dictionaryEntry) = {

    EXEC translate (TEXT(term(dictionaryEntry)),
            languageFrom(dictionary(dictionaryEntry)),
            languageTo(dictionary(dictionaryEntry)));
    ASSIGN translation(dictionaryEntry) <- VARSTRING[50](translationResult());
}

translateText 'Перевести'() = {
    EXEC translate (translationInput(), languageFromTranslation(), languageToTranslation());
}

// ------------------------------------ Перевод через словарь -------------------------------- //

translate  = ACTION CUSTOM 'lsfusion.erp.utils.i18n.TranslateDictionaryActionProperty' (Dictionary, TEXT);

WHEN LOCAL CHANGED (translationInput()) AND Dictionary dictionary IS Dictionary DO EXEC translate(dictionary, translationInput());

FORM translation 'Перевод'
    PROPERTIES() translationInput, translationResult, nameLanguageFromTranslation, nameLanguageToTranslation,
                 translateText
;

DESIGN translation {
    NEW languages {
        caption = 'Языки';
        type = CONTAINERH;
        MOVE PROPERTY(nameLanguageFromTranslation());
        MOVE PROPERTY(nameLanguageToTranslation());
    }
    NEW translation {
        fill = 1;
        type = CONTAINERH;
        MOVE PROPERTY(translationInput()) {
            fill = 1;
            panelCaptionAbove = TRUE;
        }
        MOVE PROPERTY(translationResult()) {
            fill = 1;
            panelCaptionAbove = TRUE;
        }
    }
    MOVE PROPERTY(translateText()) { font = 'bold 24'; }
    MOVE functions.box;
}

NAVIGATOR {
    regionalData {
        ADD translation;
    }
}

// ---------------------------------------------- Мультиязычный объект -------------------------------- //

CLASS MultiLanguageNamed 'Мультиязычный объект';

TABLE multiLanguageNamedLanguage(MultiLanguageNamed, Language);
languageName 'Название (иностр.)' = DATA VARISTRING[110] (MultiLanguageNamed, Language);

// ---------------------------------------------- Словари --------------------------------------------- //

FORM dictionary 'Словарь'
    OBJECTS d = Dictionary PANEL
    PROPERTIES(d) name, insensitive, nameLanguageFrom, nameLanguageTo

    OBJECTS e = DictionaryEntry
    PROPERTIES(e) term, translation, translateTerm GRID, NEW, DELETE GRID
    FILTERS       dictionary(e) == d

    EDIT Dictionary OBJECT d

    PROPERTIES() translationInput, translationResult
;

DESIGN dictionary {
    main {
        type = CONTAINERV;
        MOVE d.box;
        MOVE e.box;
        NEW test {
            type = CONTAINERH;
            MOVE PROPERTY(translationInput()) {
                fill = 1;
                caption = 'Фраза для перевода';
                panelCaptionAbove = TRUE;
                font = 'bold 24';
            }
            MOVE PROPERTY(translationResult()){
                fill = 1;
                caption = 'Перевод';
                panelCaptionAbove = TRUE;
                font = 'bold 24';
            }
        }
        MOVE functions.box;
    }
}

FORM dictionaries 'Словари'
    OBJECTS d = Dictionary
    PROPERTIES(d) READONLY name, insensitive, nameLanguageFrom, nameLanguageTo

    PROPERTIES(d) NEWSESSION NEW, EDIT, DELETE GRID

    LIST Dictionary OBJECT d
;

NAVIGATOR {
    regionalData {
        ADD dictionaries;
    }
}
