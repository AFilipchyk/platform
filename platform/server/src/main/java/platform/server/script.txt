IMPORT RomanLogicsModule;
IMPORT BaseLogicsModule;

CLASS supplierAndDocument 'Поставщик и документ' : supplier, document;
CLASS namedDocument : named, supplierAndDocument;

GROUP NewGroup '\'Новая группа\'';
GROUP NewGroup2 'new group 2' : baseGroup;

// DProps
typeInvoiceDataFreightArticle2 = DATA typeInvoice (freight, article) IN idGroup;
rateExchange2(type, currency, date) = DATA Double (typeExchange, currency, Date);
nameOrigin2 = DATA InsensitiveString[50] (secondNameClass) IN baseGroup;
quantityPalletShipment2 = DATA Integer (shipment) IN baseGroup;
typeExchangeSTX2 =  DATA typeExchange () IN idGroup;
somePropertyName = DATA supplierAndDocument (namedDocument) IN NewGroup2;
mainCompositionFreightSku2(freight, sku) = DATA String[200] (freight, sku) IN baseGroup;


// JProps
nameCurrencyTypeExchange2(typeExchange) = name(currencyTypeExchange(typeExchange)) IN baseGroup;
nameTypeExchangeSTX2() = name(typeExchangeSTX()) IN NewGroup2;
//equalsItemArticleComposite2(item1, item2) = equals2(articleCompositeItem(item1), item2) IN baseGroup;
numberListSIDArticle2(list, doc) = numberListArticle(list, articleSIDList(doc, list));
netWeightArticleSizeSku2(item) = netWeightArticleSize(articleSku(item), sizeSupplierItem(item)) IN intraAttributeGroup PERSISTENT;
orderedOrderInvoiceArticle2(order, invoice, param3) = and1(quantityListArticle(order, param3), inOrderInvoice(order, invoice));


// JProps without params
nameCurrencyTypeExchange3 = name(currencyTypeExchange($1)) IN baseGroup;
nameTypeExchangeSTX3 = name(typeExchangeSTX()) IN baseGroup;
numberListSIDArticle3 = numberListArticle($1, articleSIDList($2, $1));
netWeightArticleSizeSku3 = netWeightArticleSize(articleSku($1), sizeSupplierItem($1)) IN intraAttributeGroup PERSISTENT;


// GProp
numberDocumentArticle2 = SGROUP numberListArticle BY documentList($1, $2) IN baseGroup;
orderedInvoiceArticle2(invoice, param3) = SGROUP orderedOrderInvoiceArticle2 BY invoice, param3 IN baseGroup;
invoicedOrderArticle2 = SGROUP invoicedOrderSku BY $1, articleSku($2) IN baseGroup;
compositionFreightArticleCompositionCountryCategory2 =
    MGROUP mainCompositionFreightSku2 BY
        freight,
        articleSku(sku),
        mainCompositionOriginFreightSku(freight, sku),
        countryOfOriginFreightSku(freight, sku),
        customCategory10FreightSku(freight, sku) IN baseGroup;

// UProp
typeInvoiceFreightArticle2(freight, article) = UNION  OVERRIDE typeInvoiceCategoryFreightArticle(freight, article), typeInvoiceDataFreightArticle(freight, article) IN idGroup;
typeInvoiceFreightArticle3 = UNION OVERRIDE typeInvoiceCategoryFreightArticle($1, $2), typeInvoiceDataFreightArticle($1, $2) IN idGroup;
sumSku2 = UNION SUM sumStockedSku($1), sumDirectInvoicedSku($1) IN baseGroup;


// Nested
netWeightImporterFreightUnitSku2(freight, unit, sku) = multiplyDouble2 (
        quantityImporterStockSku(freight, unit, sku),
        ( netWeightFreightSku(freightFreightUnit($1, $2)) )(unit, sku)
) IN baseGroup;
