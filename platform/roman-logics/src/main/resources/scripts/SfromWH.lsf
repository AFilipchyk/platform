//Store from WareHouse
MODULE SfromWH;

REQUIRE System,

        Stock,
        Numerator,
        Document,
        RomanDocument,
        Consignment,
        AccountDocument,
        PriceChange,
        StorePrice,
        Declaration,
        RetailPrice,
        WholesalePrice,
        MasterData,
        RomanLogicsModule,
        WHtoS;

PRIORITY RomanLogicsModule, Stock;

CLASS SfromWH 'Приход на магазин' : historyObject, numberedObject;
CLASS SfromWHDetail 'Строка прихода на магазин' : inTransferSkuLedger, priceChangeDocumentDetail, importerPriceLedger, supplierPriceLedger, retailPriceLedger, retailVATLedger, warePriceLedger;
CLASS SfromWHPosted 'Закрытый приход на магазин' : SfromWH, postedObject;

skuSfromWHDetail 'Товар (ИД)' (SfromWHDetail) = DATA sku(SfromWHDetail) IN idGroup;
nameSkuSfromWHDetail 'Наименование товара' (SfromWHDetail) = nameSku(skuSfromWHDetail(SfromWHDetail));

@defineRBCorrespondingDocumentWithRetailPrices(SfromWH, departmentStore, 'Отдел документа', sku, 'Приход на магазин', warehouse, 'Оптовый склад');
@defineDocumentDetailPackWeightSku(SfromWH);
@defineDocumentHeaderSkuQuantity(SfromWH);
@defineUniqueDocumentComingByExpense(SfromWH, WHtoS);
@defineDocumentHeaderOriginSkuQuantity(SfromWH, WHtoS);

quantityInTransferSkuLedger (ledger) += quantitySfromWHDetail(ledger);

companyCorrWarehouseSfromWH (SfromWH) = companyWarehouse(corrWarehouseSfromWH(SfromWH));
nameCompanyCorrWarehouseSfromWH 'Поставщик' (SfromWH) = name(companyCorrWarehouseSfromWH(SfromWH));
storeSfromWH (SfromWH) = storeDepartmentStore(departmentStoreSfromWH(SfromWH));
nameStoreSfromWH 'Магазин' (SfromWH) = name(storeSfromWH(SfromWH));

identitySfromWH (SfromWH) =  storeSfromWH(SfromWH) == corrStoreWHtoS(WHtoSSfromWH(SfromWH)) AND corrWarehouseSfromWH(SfromWH) == warehouseWHtoS(WHtoSSfromWH(SfromWH));

CONSTRAINT SfromWH IS SfromWH AND NOT identitySfromWH(SfromWH) CHECKED BY WHtoSSfromWH MESSAGE  'ошибка: Магазин из расхода должен совпадать с магазином из прихода';

numberSfromWH 'Номер док-та расхода' (SfromWH) = numberObject(WHtoSSfromWH(SfromWH));

documentFlowSfromWH 'Документ расхода' (SfromWH) =
    [FORMULA STRING[500] 'CAST($1 AS TEXT) ||  \' от \' || CAST($2 AS TEXT) || \', \' || CAST($3 AS TEXT)'] (
    seriesNumberObject(WHtoSSfromWH(SfromWH)), dateWHtoS(WHtoSSfromWH(SfromWH)), name(warehouseWHtoS(WHtoSSfromWH(SfromWH)))) MINCHARWIDTH 30 PREFCHARWIDTH 30;

retailPriceChangeSfromWHDetail(SfromWHDetail) = UNION OVERRIDE priceBasePriceSetDocumentArticleDateTime(articleSku(skuSfromWHDetail(SfromWHDetail)), dateTimeSfromWHDetail(SfromWHDetail)),
                                                               priceDiscountPriceSetDocumentArticleDateTime(articleSku(skuSfromWHDetail(SfromWHDetail)), dateTimeSfromWHDetail(SfromWHDetail));

retailPriceSfromWHDetail(SfromWHDetail) <- retailPriceChangeSfromWHDetail(SfromWHDetail) WHEN CHANGED (dateTimeSfromWHDetail(SfromWHDetail))
                                                                                           OR CHANGED (skuSfromWHDetail(SfromWHDetail));

toFillSfromWHDetailsSfromWH 'Заполнить документ из расхода' =  ACTION (SfromWH) {
    FOR SfromWHWHtoS(WHtoSWHtoSDetail(WHtoSDetail)) == SfromWH DO {
        ADDOBJ SfromWHDetail;
        FOR d == addedObject() DO {
            SET SfromWHSfromWHDetail(d) <- SfromWH AS SfromWH;
            SET quantitySfromWHDetail (d) <- quantityWHtoSDetail(WHtoSDetail);
            SET skuSfromWHDetail (d) <- skuWHtoSDetail(WHtoSDetail);
            SET UOMSfromWHDetail (d) <- UOMWHtoSDetail(WHtoSDetail);
            SET importerPriceSfromWHDetail (d) <- importerPriceWHtoSDetail(WHtoSDetail);
            SET supplierPriceSfromWHDetail (d) <- supplierPriceWHtoSDetail(WHtoSDetail);
            SET supplierVATSfromWHDetail (d) <- supplierVATWHtoSDetail(WHtoSDetail);
        };
    };
} CONFIRM;

FORM SfromWH 'Приход на магазин'
    OBJECTS sf = SfromWH FIXED PANEL
    PROPERTIES (sf) nameDepartmentStoreSfromWH, dateSfromWH, timeSfromWH, seriesObject, numberObject, numberSfromWH, nameCorrWarehouseSfromWH, quantitySfromWHDetailSfromWH,
                    supplierSumSfromWHDetailSfromWH, invoiceVATSumSfromWHDetailSfromWH, invoiceSumSfromWHDetailSfromWH,
                    retailSumSfromWHDetailSfromWH, noteSfromWH, toFillSfromWHDetailsSfromWH

    OBJECTS d = SfromWHDetail
    PROPERTIES(d) indexSfromWHDetail, barcodeSfromWHDetail, nameSkuSfromWHDetail, nameBrandSfromWHDetail, sidArticleSfromWHDetail,
                  nameCategorySfromWHDetail, sidColorSfromWHDetail, nameColorSfromWHDetail, shortNameUOMSfromWHDetail, balanceBSkuSfromWHDetail,
                  quantitySfromWHDetail, importerPriceSfromWHDetail, supplierPriceSfromWHDetail, supplierSumSfromWHDetail, numberSupplierVATSfromWHDetail,
                  valueSupplierVATSfromWHDetail, supplierVATISumSfromWHDetail, invoiceSumSfromWHDetail, numberRetailVATSfromWHDetail, valueRetailVATSfromWHDetail,
                  retailPriceSfromWHDetail

    PROPERTIES(sf) TODRAW d addDetailDialogSkuSfromWHDetailSfromWH, addDetailDialogBarcodeSfromWHDetailSfromWH,
                  deleteSfromWHDetailSfromWH

    PROPERTIES(d) ADDOBJ, delete

    OBJECTS i=sku
    PROPERTIES(i) nameSku
    PROPERTIES(i, sf) quantitySfromWHDetailSkuSfromWH, quantityOriginSfromWHDetailSkuSfromWH, diffQuantitySfromWHDetailSkuSfromWH

    FILTERS inSfromWHSfromWHDetail(sf, d)
    FILTERS quantityOriginSfromWHDetailSkuSfromWH(i, sf) OR quantitySfromWHDetailSkuSfromWH(i, sf)

    FILTERGROUP filtersDiff
        FILTER 'Показать отличающиеся' 'F10' diffQuantitySfromWHDetailSkuSfromWH(i, sf) !=0

    EDIT SfromWH OBJECT sf
;

DESIGN SfromWH FROM DEFAULT {
    main {
        preferredSize = (1024, 768);
        ADD sf.box {
            childConstraints = TO THE RIGHT;
            NEW row1 {
                childConstraints = TO THE BOTTOM;
                ADD sf.documentHeaderGroup {
                    childConstraints = TO THE RIGHT;
                    ADD PROPERTY (nameDepartmentStoreSfromWH);
                    ADD PROPERTY (numberObject);
                    ADD PROPERTY (seriesObject);
                    ADD PROPERTY (dateSfromWH);
                    ADD PROPERTY (timeSfromWH);
                }
                NEW row11 {
                childConstraints = TO THE RIGHT;

                    NEW row111 {
                        title = 'Контрагент-поставщик';
                        ADD PROPERTY (nameCorrWarehouseSfromWH);
                    }
                    NEW row112{
                        title = 'Расход';
                        ADD PROPERTY (numberSfromWH);
                        ADD PROPERTY (toFillSfromWHDetailsSfromWH);
                    }
                }
                ADD sf.documentPrmGroup;
            }
            NEW row2 {
                ADD sf.documentSumGroup {
                    childConstraints = TO THE BOTTOM;
                }
            }
        };
        NEW row3 {
            type = TABBED;
            ADD d.box;
            ADD i.box;
        }
        ADD functions.box;
    }
}

FORM SfromWHs 'Приходы на магазин'
    OBJECTS sf = SfromWH
    PROPERTIES(sf) READONLY objectClassName, numberObject, seriesObject, dateSfromWH, timeSfromWH, nameCorrWarehouseSfromWH, nameDepartmentStoreSfromWH, nameStoreSfromWH,
                   documentFlowSfromWH, countSfromWHDetailSfromWH, quantitySfromWHDetailSfromWH, supplierSumSfromWHDetailSfromWH, invoiceVATSumSfromWHDetailSfromWH, invoiceSumSfromWHDetailSfromWH,
                   retailSumSfromWHDetailSfromWH
    PROPERTIES(sf) READONLY FORCE PANEL nameUserCreated, timeCreated, hostnameComputerCreated, nameUserClosed, timeClosed, hostnameComputerClosed


    PROPERTIES(sf) ADDFORM, EDITFORM SHOWIF isDraftSfromWH(sf), delete FORCE PANEL SHOWIF isDraftSfromWH(sf),
                   postSfromWH SHOWIF isDraftSfromWH(sf), unpostSfromWH SHOWIF isPostedSfromWH(sf)

    OBJECTS d = SfromWHDetail
    PROPERTIES(d) READONLY indexSfromWHDetail, barcodeSfromWHDetail, nameSkuSfromWHDetail, nameBrandSfromWHDetail, sidArticleSfromWHDetail,
                  nameCategorySfromWHDetail, sidColorSfromWHDetail, nameColorSfromWHDetail, shortNameUOMSfromWHDetail, balanceBSkuSfromWHDetail,
                  quantitySfromWHDetail, importerPriceSfromWHDetail, supplierPriceSfromWHDetail, supplierSumSfromWHDetail, numberSupplierVATSfromWHDetail,
                  valueSupplierVATSfromWHDetail, supplierVATISumSfromWHDetail, invoiceSumSfromWHDetail, numberRetailVATSfromWHDetail, valueRetailVATSfromWHDetail,
                  retailPriceSfromWHDetail

    FILTERS inSfromWHSfromWHDetail(sf, d)
;

DESIGN SfromWHs FROM DEFAULT {
    ADD sf.box{
        PROPERTY (delete(sf)) {
            panelLocation = TOOLBAR;
            askConfirm = TRUE;
        PROPERTY (objectClassName(sf)) {
            preferredCharWidth = 15;
        }
        }
    }
    ADD d.box;

    NEW footer.container {
        childConstraints = TO THE BOTTOM;

        NEW cont3 {
            childConstraints = TO THE RIGHT;
            ADD sf.historyGroup {
                childConstraints = TO THE BOTTOM;
            }

            ADD sf.postedGroup {
                childConstraints = TO THE BOTTOM;
            }
        }
    }
    ADD functions.box;
}

