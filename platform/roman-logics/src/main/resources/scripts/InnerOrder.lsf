MODULE InnerOrder;

REQUIRE System,
        Document,
        RomanDocument,
        Stock,
        RomanStock,
        RetailPrice,
        DocumentTransfer,
        Move,
        Transfer,
        RomanLogicsModule;

PRIORITY Stock, RomanLogicsModule;

// ---------------------------------------- Внутренний заказ ------------------------------------ //
CLASS innerOrder 'Внутренний заказ': historyObject, numberedObject;
CLASS innerOrderDetail 'Строка внутреннего заказа';

@defineDocument(innerOrder);

@defineDocumentStock(innerOrder, stock, 'Склад-отправитель');
@defineDocumentStockPrefix(innerOrder, stock, 'Склад-получатель', destination);

@defineDocumentDescription (innerOrder, 'Внутренний заказ');

@defineDocumentDetailNumbered(innerOrder);

@defineDocumentDetailSku(innerOrder, sku);

@defineDocumentDetailQuantity(innerOrder);

@defineDocumentDetailPackWeightSku(innerOrder);

@defineDocumentDetailSkuBalance(innerOrder, sku, stock);

@defineDocumentHeaderQuantity(innerOrder);
@defineDocumentHeaderSkuQuantity(innerOrder, sku);

@defineDocumentDetailSkuArticle(innerOrder);

// Кнопки подбора
@defineAddDetailDialogSkuStock(innerOrder, sku, stock, dialogSku);
@defineAddDetailDialogBarcode(innerOrder, sku);

FORM innerOrder 'Внутренний заказ'
    OBJECTS o = innerOrder FIXED PANEL

    PROPERTIES (o) numberObject, seriesObject, dateInnerOrder, timeInnerOrder,
        nameStockInnerOrder, nameDestinationStockInnerOrder, noteInnerOrder,
        countInnerOrderDetailInnerOrder, quantityInnerOrderDetailInnerOrder

    OBJECTS d = innerOrderDetail

    PROPERTIES(o) TODRAW d addDetailDialogSkuStockInnerOrderDetailInnerOrder, addDetailDialogBarcodeInnerOrderDetailInnerOrder,
                           deleteInnerOrderDetailInnerOrder

    FILTERS innerOrderInnerOrderDetail(d) == o

    EDIT innerOrder OBJECT o
;

DESIGN innerOrder FROM DEFAULT {
    main {
        preferredSize = (1024, 768);
            o.box {
                childConstraints = TO THE RIGHT;
                    NEW columnHeaderPrm {
                    childConstraints = TO THE BOTTOM;
                    ADD o.documentHeaderGroup {
                        childConstraints = TO THE RIGHT;
                        ADD PROPERTY (nameStockInnerOrder);
                        ADD PROPERTY (nameDestinationStockInnerOrder);
                        ADD PROPERTY (numberObject);
                        ADD PROPERTY (seriesObject);
                        ADD PROPERTY (dateInnerOrder);
                        ADD PROPERTY (timeInnerOrder);
                    }
                    ADD o.documentPrmGroup;
                }
                NEW columnHeaderSum {
                    ADD o.documentSumGroup {
                        childConstraints = TO THE BOTTOM;
                    }
            }
        }
    }
}

FORM innerOrders 'Внутренние заказы'
    OBJECTS o = innerOrder
    PROPERTIES (o) READONLY numberObject, seriesObject, dateInnerOrder, timeInnerOrder,
                            nameStockInnerOrder, nameDestinationStockInnerOrder, noteInnerOrder,
                            countInnerOrderDetailInnerOrder, quantityInnerOrderDetailInnerOrder

    PROPERTIES (o) READONLY FORCE PANEL nameUserCreated, timeCreated, hostnameComputerCreated, nameUserClosed, timeClosed, hostnameComputerClosed

    PROPERTIES (o) ADDFORM, EDITFORM, delete FORCE PANEL

    OBJECTS d = innerOrderDetail

    FILTERS innerOrderInnerOrderDetail(d) == o
;

DESIGN innerOrders FROM DEFAULT {
    PROPERTY (delete(o)) {
        panelLocation = TOOLBAR;
        askConfirm = TRUE;
    }

    NEW documentContainer BEFORE functions.box {
        type = SPLITV;
        childConstraints = TO THE BOTTOM;

        ADD o.box;

        NEW documentDetail {
            type = TABBED;

            ADD d.box {
                title = 'Спецификация';
            }
            NEW documentHistory {
                title = 'История';

                ADD o.historyGroup;
                ADD o.postedGroup;
            }
        }
    }
}

@extendDocumentFormDetailSkuArticle(innerOrder, d, innerOrder);
@extendDocumentFormDetailSkuArticleReadonly(innerOrders, d, innerOrder);

// ---------------------------------------- Подбор товара ------------------------------------ //
CLASS orderPicking 'Подбор товара по заказу': historyObject, numberedObject;
CLASS orderPickingPosted 'Проведенный подбор товара по заказу': orderPicking, postedObject;

CLASS orderPickingDetail 'Строка подбора товара по заказу';

innerOrderOrderPicking 'Подбор товара по заказу (ИД)' (orderPicking) = DATA innerOrder (orderPicking) IN idGroup;
orderPickingInnerOrder 'Подбор заказа (ИД)' (innerOrder) = GROUP UNIQUE  orderPicking BY innerOrderOrderPicking(orderPicking);

inInnerOrderOrderPicking (innerOrder, orderPicking) = innerOrderOrderPicking(orderPicking) == innerOrder;

CONSTRAINT innerOrderOrderPicking(p1) == innerOrderOrderPicking(p2) AND p1 != p2 CHECKED BY innerOrderOrderPicking
    MESSAGE 'Заказ задествован в другом подборе';

@defineDocument(orderPicking);
@defineDocumentPosted(orderPicking);

@defineDocumentAggregationHeaderStockPrefix(innerOrder, orderPicking, stock, 'Склад-получатель', , destination);
@defineDocumentAggregationHeaderStockPrefix(innerOrder, orderPicking, stock, 'Склад-отправитель', destination, );

@defineDocumentAggregationHeaderNumber(innerOrder, orderPicking);

@defineDocumentDescriptionCustom(orderPicking, orderPickingDetail, seriesNumberObject, 'Подбор товара по заказу');

@defineDocumentDetailSku(orderPicking, sku);

@defineDocumentDetailQuantity(orderPicking);

@defineDocumentDetailSkuArticle(orderPicking);

@defineDocumentHeaderQuantity(orderPicking);
@defineDocumentHeaderSkuQuantity(orderPicking, sku);

retailPriceOrderPickingDetail 'Цена розничная' = DATA NUMERIC[14,2] (orderPickingDetail);
retailSumOrderPickingDetail 'Сумма розничная' (detail) = quantityOrderPickingDetail(detail) * retailPriceOrderPickingDetail(detail);

retailPriceOrderPickingDetail(orderPickingDetail) <- priceDiscountPriceSetDocumentArticleDateTime(articleSku(skuOrderPickingDetail(orderPickingDetail)), dateTimeOrderPickingDetail(orderPickingDetail))
                                                        WHEN CHANGED(dateTimeOrderPickingDetail(orderPickingDetail))
                                                             OR CHANGED(skuOrderPickingDetail(orderPickingDetail));

// Кнопки подбора
@defineAddDetailDialogSkuStock(orderPicking, sku, stock, dialogSku);
@defineAddDetailDialogBarcode(orderPicking, sku);

postOrderPickingInnerOrder 'Закрыть подборку' (innerOrder) = postOrderPicking(orderPickingInnerOrder(innerOrder));
isDraftOrderPickingInnerOrder (innerOrder) = isDraftOrderPicking(orderPickingInnerOrder(innerOrder));
isPostedOrderPickingInnerOrder (innerOrder) = isPostedOrderPicking(orderPickingInnerOrder(innerOrder));

quantityOrderPickingInnerOrderSku 'Количество подобрано' (sku, innerOrder) =
    quantityOrderPickingDetailSkuOrderPicking (sku, orderPickingInnerOrder(innerOrder));

quantityOrderPickingInnerOrderDetail 'Количество подобрано' (innerOrderDetail) =
    quantityOrderPickingInnerOrderSku(skuInnerOrderDetail(innerOrderDetail), innerOrderInnerOrderDetail(innerOrderDetail));

FORM orderPicking 'Подбор товара'
    OBJECTS p = orderPicking FIXED PANEL

    PROPERTIES (p) numberObject, seriesObject, dateOrderPicking, timeOrderPicking,
        nameStockOrderPicking, nameDestinationStockOrderPicking, noteOrderPicking,
        countOrderPickingDetailOrderPicking, quantityOrderPickingDetailOrderPicking

    OBJECTS od = innerOrderDetail
    PROPERTIES (od) quantityOrderPickingInnerOrderDetail
    FILTERS innerOrderInnerOrderDetail (od) == innerOrderOrderPicking (p)
    FILTERGROUP filters1
        FILTER 'Неподобранные товары' 'F10' (quantityOrderPickingInnerOrderDetail(od) (-) quantityInnerOrderDetail(od)) < 0 DEFAULT

    OBJECTS d = orderPickingDetail

    PROPERTIES(p) TODRAW d addDetailDialogSkuStockOrderPickingDetailOrderPicking, addDetailDialogBarcodeOrderPickingDetailOrderPicking,
                           deleteOrderPickingDetailOrderPicking

    FILTERS orderPickingOrderPickingDetail(d) == p

    EDIT orderPicking OBJECT p
;

@extendDocumentFormDetailSkuArticleReadonly(orderPicking, od, innerOrder);
@extendDocumentFormDetailSkuArticle(orderPicking, d, orderPicking);

EXTEND FORM orderPicking
    PROPERTIES(d) retailPriceOrderPickingDetail
;

DESIGN orderPicking FROM DEFAULT {
    main {
        preferredSize = (1024, 768);
            p.box {
                childConstraints = TO THE RIGHT;
                    NEW columnHeaderPrm {
                    childConstraints = TO THE BOTTOM;
                    ADD p.documentHeaderGroup {
                        childConstraints = TO THE RIGHT;
                        ADD PROPERTY (nameStockOrderPicking);
                        ADD PROPERTY (nameDestinationStockOrderPicking);
                        ADD PROPERTY (numberObject);
                        ADD PROPERTY (seriesObject);
                        ADD PROPERTY (dateOrderPicking);
                        ADD PROPERTY (timeOrderPicking);
                    }
                    ADD p.documentPrmGroup;
                }
                NEW columnHeaderSum {
                    ADD p.documentSumGroup {
                        childConstraints = TO THE BOTTOM;
                    }
            }
        }
        NEW details.box BEFORE functions.box {
            type = SPLITH;
            ADD od.box;
            ADD d.box;
            POSITION od.box TO THE LEFT d.box;
        }
    }
}

pickUpInnerOrder 'Подобрать' (innerOrder) = ACTION (innerOrder) NEWSESSION {
    IF orderPickingInnerOrder(innerOrder) IS orderPicking THEN {
        FOR p == orderPickingInnerOrder(innerOrder) DO {
            IF p IS orderPickingPosted THEN {
                CHANGECLASS p TO orderPicking;
            }
            FORM orderPicking OBJECTS p = p MODAL;
        }
    } ELSE {
        ADDOBJ orderPicking;
        FOR p == addedObject() DO {
            SET innerOrderOrderPicking (p) <- innerOrder AS innerOrder;
            FORM orderPicking OBJECTS p = p MODAL;
        }
    }
    IF formResult() == formResult.ok THEN EXEC apply();
};

//Свойства генерируемых документов
innerOrderInnerDocument (innerDocument) = ABSTRACT innerOrder (innerDocument);

innerOrderMoveOut (moveOut) = DATA innerOrder (moveOut);

quantityInnerDocumentInnerOrder 'Количество документов' (innerOrder) =
    GROUP SUM 1 IF innerOrderInnerDocument (innerDocument) == innerOrder BY innerOrder;
needInnerDocumentInnerOrder 'Необходимо создать документы по заказу' (innerOrder) =
    orderPickingInnerOrder(innerOrder) IS orderPickingPosted AND NOT quantityInnerDocumentInnerOrder(innerOrder);

quantityPostedInnerDocumentInnerOrder 'Количество проведенных документов' (innerOrder) =
    GROUP SUM 1 IF (innerOrderInnerDocument (innerDocument) == innerOrder AND innerDocument IS postedObject) BY innerOrder;;

quantityDraftInnerDocumentInnerOrder 'Количество непроведенных документов' (innerOrder) =
    quantityInnerDocumentInnerOrder(innerOrder) (-) quantityPostedInnerDocumentInnerOrder(innerOrder);

innerOrderInnerDocument (innerDocument) += innerOrderMoveOut (innerDocument);
stockInnerDocument (innerDocument) += stockMoveOut (innerDocument);
destinationStockInnerDocument (innerDocument) += destinationStockMoveOut (innerDocument);

countDetailInnerDocument (innerDocument) += countTransferOutDetailTransferOut (innerDocument);
countDetailInnerDocument (innerDocument) += countMoveOutDetailMoveOut (innerDocument);

quantityDetailInnerDocument (innerDocument) += quantityTransferOutDetailTransferOut (innerDocument);
quantityDetailInnerDocument (innerDocument) += quantityMoveOutDetailMoveOut (innerDocument);

isPostedInnerDocument (innerDocument) += isPostedTransferOut (innerDocument);
isPostedInnerDocument (innerDocument) += isPostedMoveOut (innerDocument);

isDraftInnerDocument (innerDocument) += isDraftTransferOut (innerDocument);
isDraftInnerDocument (innerDocument) += isDraftMoveOut (innerDocument);

createDocumentsInnerOrder 'Создать документы' (innerOrder) = ACTION (innerOrder) {
    IF isPostedOrderPickingInnerOrder (innerOrder)
    THEN {
        ADDOBJ moveOut;
        FOR m == addedObject() DO {
            SET stockMoveOut(m) <- stockInnerOrder(innerOrder);
            SET destinationStockMoveOut(m) <- destinationStockInnerOrder(innerOrder);
            SET innerOrderMoveOut(m) <- innerOrder;

            FOR innerOrderOrderPicking(orderPickingOrderPickingDetail(orderPickingDetail)) == innerOrder DO {
                ADDOBJ moveOutDetail;
                FOR d == addedObject() DO {
                     SET moveOutMoveOutDetail(d) <- m;
                     SET skuMoveOutDetail(d) <- skuOrderPickingDetail (orderPickingDetail);
                     SET quantityMoveOutDetail(d) <- quantityOrderPickingDetail (orderPickingDetail);
                }
            }
        }
        EXEC apply();
    }
} TOOLBAR CONFIRM;

editInnerDocument 'Редактировать' (innerDocument) = ACTION (innerDocument) {
    IF innerDocument IS moveOut THEN {
        FORM moveOut OBJECTS t = innerDocument MODAL;
    } ELSE {
        IF innerDocument IS transferOut THEN {
            FORM transferOut OBJECTS t = innerDocument MODAL;
        }
    }
} IMAGE 'edit.png';

postInnerDocument 'Провести' (innerDocument) = ACTION (innerDocument) {
    IF innerDocument IS moveOut THEN {
        CHANGECLASS innerDocument TO moveOutPosted;
        EXEC apply();
    } ELSE {
        IF innerDocument IS transferOut THEN {
            CHANGECLASS innerDocument TO transferOutPosted;
            EXEC apply();
        }
    }
} CONFIRM;

unpostInnerDocument 'Распровести' (innerDocument) = ACTION (innerDocument) {
    IF innerDocument IS moveOut THEN {
        CHANGECLASS innerDocument TO moveOut;
        EXEC apply();
    } ELSE {
        IF innerDocument IS transferOut THEN {
            CHANGECLASS innerDocument TO transferOut;
            EXEC apply();
        }
    }
} CONFIRM;

statusInnerOrder 'Статус' (innerOrder) =
    IF quantityInnerDocumentInnerOrder (innerOrder) AND NOT quantityDraftInnerDocumentInnerOrder (innerOrder) THEN 'Документы выверены' IF innerOrder IS innerOrder ELSE
    IF quantityPostedInnerDocumentInnerOrder (innerOrder) > 0 THEN 'Документы выверяются' IF innerOrder IS innerOrder ELSE
    IF quantityInnerDocumentInnerOrder (innerOrder)  THEN 'Документы сформированы' IF innerOrder IS innerOrder ELSE
    IF orderPickingInnerOrder (innerOrder) IS orderPickingPosted THEN 'Товары подобраны' IF innerOrder IS innerOrder ELSE
    IF orderPickingInnerOrder (innerOrder)  THEN 'Товары подобираются' IF innerOrder IS innerOrder ELSE
    'Требуется подборка' IF innerOrder IS innerOrder PREFCHARWIDTH 20 MINCHARWIDTH 20;

EXTEND FORM innerOrders
    OBJECTS pd=orderPickingDetail

    PROPERTIES (o)  statusInnerOrder, quantityInnerDocumentInnerOrder
    PROPERTIES(o) TODRAW pd FORCE PANEL pickUpInnerOrder, postOrderPickingInnerOrder SHOWIF isDraftOrderPickingInnerOrder(o)

    FILTERS orderPickingOrderPickingDetail (pd) == orderPickingInnerOrder(o)

    OBJECTS id = innerDocument

    PROPERTIES (id) READONLY isPostedInnerDocument, objectClassName, seriesObject, numberObject, dateInnerDocument,
                    nameStockInnerDocument, nameDestinationStockInnerDocument, countDetailInnerDocument, quantityDetailInnerDocument
    PROPERTIES (id) editInnerDocument SHOWIF isDraftInnerDocument(id), postInnerDocument SHOWIF isDraftInnerDocument(id),
                    unpostInnerDocument SHOWIF isPostedInnerDocument(id)
    PROPERTIES (o) TODRAW id FORCE PANEL  createDocumentsInnerOrder SHOWIF needInnerDocumentInnerOrder(o)

    FILTERS innerOrderInnerDocument(id)==o
;

@extendDocumentFormDetailSkuArticleReadonly(innerOrders, pd, orderPicking);

EXTEND DESIGN innerOrders {
    documentDetail {
        ADD pd.box {
            title = 'Подборка';
            ADD PROPERTY (pickUpInnerOrder);
            ADD PROPERTY (postOrderPickingInnerOrder);
        }
        ADD id.box {
            title = 'Документы';
        }
    }
}
