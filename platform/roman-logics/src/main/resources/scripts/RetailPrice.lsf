MODULE RetailPrice;

REQUIRE System,
        MasterData,
        RomanLogicsModule;

PRIORITY MasterData, RomanLogicsModule;


META metaCodePriceBaseDiscount(document, caption)

    priceData###document##Article caption = DATA NUMERIC[14,2](document, article) IN baseGroup;

    order###document = LIST(dateTimePriceSetDocument(document), document) PERSISTENT;

    concat###document##ArticleDateTime (article, dateTime) = GROUP MAX order###document(document) AND
                                                                       priceData###document##Article(document, article) AND
                                                                       dateTimePriceSetDocument(document) < (dateTime AS DATETIME) AND
                                                                       dateTimeToPriceSetDocument(document) > (dateTime AS DATETIME)
                                                                    BY article, dateTime;

    document##ArticleDateTime (article, dateTime) = concat###document##ArticleDateTime(article, dateTime)[2];

    price###document##ArticleDateTime(article, dateTime) = priceData###document##Article(document##ArticleDateTime(article, dateTime), article);
    priceIn###document##ArticleDateTime(article, dateTime) = priceInPriceSetDocumentArticle(document##ArticleDateTime(article, dateTime), article);
    RRP###document##ArticleDateTime(article, dateTime) = RRPPriceSetDocumentArticle(document##ArticleDateTime(article, dateTime), article);

    priceB###document##Article 'Предыдущая цена'(document, article) = price###document##ArticleDateTime(article, dateTimePriceSetDocument(document)) MINCHARWIDTH 15;
    priceInB###document##Article 'Предыдущая поставщика'(document, article) = priceIn###document##ArticleDateTime(article, dateTimePriceSetDocument(document));
    RRPB###document##Article 'Предыдущая рекомендуемая'(document, article) = RRP###document##ArticleDateTime(article, dateTimePriceSetDocument(document));

END


maxDateTime 'Максимальная дата' = DATA DATETIME();

EXTEND FORM globalParamForm
     PROPERTIES() maxDateTime
;

CLASS STATIC methodPrice 'Метод расчёта'
{
    coefficient 'С надбавкой',
    RRP 'Рекомендемая',
    previous 'Предыдущая'
};


CLASS ABSTRACT priceSetDocument 'Документ изменения цен' : transaction;
CLASS basePriceSetDocument 'Изменение базовой цены' : priceSetDocument;
CLASS discountPriceSetDocument 'Изменение цены продажи' : priceSetDocument;
CLASS mixPriceSetDocument 'Изменение базовой и продажи' : basePriceSetDocument, discountPriceSetDocument;

CLASS coefficientRetail 'Коэффициент надбавки';

//CLASS diapasonPrices 'Диапазон цен';
//priceFromDiapasonPrices 'от' = DATA NUMERIC[14,3](diapasonPrices) IN baseGroup;
//priceToDiapasonPrices 'до' = DATA NUMERIC[14,3](diapasonPrices) IN baseGroup;
//priceConversionDiapasonPrices 'Округлённая цена' = DATA NUMERIC[14,3](diapasonPrices) IN baseGroup;

TABLE priceSetDocumentArticle(priceSetDocument, article);

dateCoefficientRetail 'Дата введения' = DATA DATE(coefficientRetail) IN baseGroup;
markupCoefficientRetail 'Множитель' = DATA NUMERIC[14,3](coefficientRetail) IN baseGroup;

uniqueCoefficientRetail() = GROUP UNIQUE coefficientRetail BY dateCoefficientRetail(coefficientRetail)
                                                        WHERE coefficientRetail IS coefficientRetail;

sidPriceSetDocument 'Номер' = DATA STRING[10] (priceSetDocument) IN baseGroup;

timePriceSetDocument 'Время документа' = DATA TIME (priceSetDocument);
timePriceSetDocument (priceSetDocument) <- currentTime() WHEN ASSIGNED(priceSetDocument AS priceSetDocument);

dateTimePriceSetDocument 'Дата/время документа' (priceSetDocument) = toDateTime(date(priceSetDocument), timePriceSetDocument(priceSetDocument));

dateTimeToDataPriceSetDocument 'Дата/время окончания' = DATA DATETIME(priceSetDocument) IN baseGroup;
dateTimeToPriceSetDocument 'Дата/время окончания' (priceSetDocument) = UNION OVERRIDE maxDateTime() IF priceSetDocument IS priceSetDocument,
                                                                                            dateTimeToDataPriceSetDocument(priceSetDocument) IN baseGroup;

isDiscountPriceSetDocument 'Распродажа' = DATA BOOLEAN(priceSetDocument) IN baseGroup;
keepDiscountPriceSetDocument 'Учитывать скидки' = DATA BOOLEAN(priceSetDocument) IN baseGroup;

//связь документа и фрахта
freightPriceSetDocument 'Фрахт документа (ИД)' = DATA freight(basePriceSetDocument) IN idGroup;

quantityPriceSetDocumentFreight (freight) = GROUP SUM 1 IF freightPriceSetDocument(basePriceSetDocument) BY freightPriceSetDocument(basePriceSetDocument);
isPriceSetDocumentFreight (freight) = TRUE IF NOT quantityPriceSetDocumentFreight(freight) AND freight IS freight;

priceInPriceSetDocumentArticle 'Цена поставщика' = DATA NUMERIC[14,2](basePriceSetDocument, article) IN baseGroup;
RRPPriceSetDocumentArticle 'Рекомендуемая цена' = DATA NUMERIC[14,2](basePriceSetDocument, article) IN baseGroup;

ratePriceSetDocument 'Обменный курс' (priceSetDocument, article) = nearestRateExchange(typeExchangeRetail(),
                                                                                             currencyTypeExchange(typeExchangeSTX()),
                                                                                             priceSetDocument) AND article IS article;

rateDataPriceSetDocumentArticle 'Обменный курс' = DATA NUMERIC[14,2](priceSetDocument, article) IN baseGroup;

ratePriceSetDocumentArticle 'Обменный курс' (basePriceSetDocument, article) = UNION OVERRIDE ratePriceSetDocument(basePriceSetDocument, article),
                                                                                                   rateDataPriceSetDocumentArticle(basePriceSetDocument, article);

coefficientRetailDate(coefficientRetail, date) = coefficientRetail IF dateCoefficientRetail(coefficientRetail) <= date AND date AS DATE;
actingCoefficientRetailDate(date) = GROUP MAX dateCoefficientRetail(coefficientRetailDate(coefficientRetail, date)) BY date;

coefficientRetailPriceSetDocument 'Коэффициент документа' (basePriceSetDocument) = uniqueCoefficientRetail(actingCoefficientRetailDate(date(basePriceSetDocument))) IN idGroup;
markupCoefficientRetailPriceSetDocumentArticle 'Коэффициент документа' (basePriceSetDocument, article) = markupCoefficientRetail(coefficientRetailPriceSetDocument(basePriceSetDocument))
                                                                                                               AND article IS article IN baseGroup;

markupPriceSetDocumentArticle 'Коэффициент артикула' = DATA NUMERIC[14,2] (basePriceSetDocument, article);
markupPriceSetDocumentArticle (basePriceSetDocument, article) <- markupCoefficientRetailPriceSetDocumentArticle(basePriceSetDocument, article) WHEN ASSIGNED(basePriceSetDocument IS basePriceSetDocument);

priceOutPriceSetDocumentArticle 'Цена с надбавкой' (basePriceSetDocument, article) = round2(priceInPriceSetDocumentArticle(basePriceSetDocument, article) *
                                                                                                  markupPriceSetDocumentArticle(basePriceSetDocument, article));

@metaCodePriceBaseDiscount(basePriceSetDocument, 'Базовая цена');
@metaCodePriceBaseDiscount(discountPriceSetDocument, 'Цена с уценкой');

methodPriceSetDocumentArticle 'Метод расчёта (ИД)' = DATA methodPrice(basePriceSetDocument, article);
notMethodPriceSetDocumentArticle = TRUE IF NOT methodPriceSetDocumentArticle(basePriceSetDocument, article);

nameMethodPriceSetDocumentArticle 'Метод расчёта' (basePriceSetDocument, article) = name(methodPriceSetDocumentArticle(basePriceSetDocument, article)) MAXCHARWIDTH 20;

RRPRatePriceSetDocumentArticle 'Рекомендуемая (руб.)' (basePriceSetDocument, article) = round0(RRPPriceSetDocumentArticle(basePriceSetDocument, article) *
                                                                                                     ratePriceSetDocumentArticle(basePriceSetDocument, article)) MINCHARWIDTH 15;

priceOutRatePriceSetDocumentArticle 'С надбавкой (руб.)' (basePriceSetDocument, article) = round0(priceOutPriceSetDocumentArticle(basePriceSetDocument, article) *
                                                                                                        ratePriceSetDocumentArticle(basePriceSetDocument, article)) MINCHARWIDTH 15;


priceRetailPriceSetDocumentArticle 'Цена розничная' (basePriceSetDocument, article) =
           CASE
               WHEN methodPriceSetDocumentArticle(basePriceSetDocument, article) == methodPrice.coefficient THEN priceOutRatePriceSetDocumentArticle(basePriceSetDocument, article)
               WHEN methodPriceSetDocumentArticle(basePriceSetDocument, article) == methodPrice.RRP THEN RRPRatePriceSetDocumentArticle(basePriceSetDocument, article)
               WHEN methodPriceSetDocumentArticle(basePriceSetDocument, article) == methodPrice.previous THEN PREV(priceBBasePriceSetDocumentArticle(basePriceSetDocument, article))
               DEFAULT 0 AND basePriceSetDocument IS basePriceSetDocument AND article IS article
           END MINCHARWIDTH 15;


priceDataBasePriceSetDocumentArticle(basePriceSetDocument, article) <- priceRetailPriceSetDocumentArticle(basePriceSetDocument, article)
                            WHEN CHANGED (methodPriceSetDocumentArticle(basePriceSetDocument, article)) OR
                                 CHANGED (priceOutRatePriceSetDocumentArticle(basePriceSetDocument, article)) OR
                                 CHANGED (RRPRatePriceSetDocumentArticle(basePriceSetDocument, article));

//---------------------------- НДС розничный для товара ----------------------------------------//
TABLE articleDate(article, DATE);

@defineHistorizableCustom(retailVATArticle, 'НДС розницы', range, numberRange, article, sidArticle, baseGroup);

CONSTRAINT taxRange(dataRetailVATArticleDate(article, date)) != tax.taxVAT CHECKED BY dataRetailVATArticleDate MESSAGE 'ошибка: Шкала должна соответствовать шкале НДС';

dataValueRetailVATArticleDate 'НДС, %' (article, date) = valueRateRangeDate(dataRetailVATArticleDate(article, date), date);
valueCurrentRateRetailVATArticle 'НДС, %' (article) = valueCurrentRateRange(retailVATArticle(article));

EXTEND FORM addRetailVATArticle
    PROPERTIES READONLY FORCE GRID dataValueRetailVATArticleDate(a, d)
;
EXTEND FORM dialogRetailVATArticle
    PROPERTIES dataValueRetailVATArticleDate(a, d)
;

EXTEND FORM nomenclatureForm
    PROPERTIES numberRangeRetailVATArticle(article), dialogRetailVATArticle(article), valueCurrentRateRetailVATArticle(article)
;

percentVATPriceSetDocumentArticle 'НДС (%)' = DATA NUMERIC[14,3](basePriceSetDocument, article) IN baseGroup;
percentVATPriceSetDocumentArticle(basePriceSetDocument, article) <- valueCurrentRateRetailVATArticle(article) WHEN CHANGED (date(basePriceSetDocument));

sumVATPriceSetDocumentArticle 'НДС (руб.)' = [round0(X*Y/(Y+100))](priceDataBasePriceSetDocumentArticle(basePriceSetDocument, article),
                                                                      percentVATPriceSetDocumentArticle(basePriceSetDocument, article));

// для уценки
priceInRateBBasePriceSetDocumentArticle 'Цена поставщика (руб.)' (discountPriceSetDocument, article) = ratePriceSetDocumentArticle (discountPriceSetDocument, article) *
                                                                                                             priceInBBasePriceSetDocumentArticle(discountPriceSetDocument, article) MINCHARWIDTH 15;

percentDiscountPriceSetDocumentArticle 'Процент уценки' = DATA NUMERIC[14,2](discountPriceSetDocument, article) IN baseGroup;

priceDiscountPriceSetDocumentArticle 'Цена без процентов' (discountPriceSetDocument, article) = [roundM1(X*(100-Y)/100)]
                                                                                                        (priceBBasePriceSetDocumentArticle(discountPriceSetDocument, article),
                                                                                                         percentDiscountPriceSetDocumentArticle(discountPriceSetDocument, article)) IN baseGroup;


priceDataDiscountPriceSetDocumentArticle(discountPriceSetDocument, article) <- priceDiscountPriceSetDocumentArticle(discountPriceSetDocument, article)
                                        WHEN CHANGED (priceDiscountPriceSetDocumentArticle(discountPriceSetDocument, article));

inArticlePriceSetDocument 'Артикул в документе' = DATA BOOLEAN(priceSetDocument, article);
inFreightArticle (freight, article) = TRUE IF quantityFreightArticle(freight, article);

toSetPricesPriceSetDocument 'Взять цены поставщика' =  ACTION (basePriceSetDocument) {
    FOR p == basePriceSetDocument AND inArticlePriceSetDocument(p, article) DO {
        SET priceInPriceSetDocumentArticle(p, article) <- priceInBBasePriceSetDocumentArticle (p, article);
        SET RRPPriceSetDocumentArticle(p, article) <- RRPBBasePriceSetDocumentArticle (p, article);
    };
};


FORM coefficientRetail 'Коэффициент надбавки'

    OBJECTS c=coefficientRetail FIXED PANEL
    PROPERTIES(c) dateCoefficientRetail, markupCoefficientRetail

    EDIT coefficientRetail OBJECT c
;

FORM coefficientRetails 'История коэффициентов'

    OBJECTS c=coefficientRetail
    PROPERTIES(c) READONLY dateCoefficientRetail, markupCoefficientRetail
    PROPERTIES(c) ADDFORM, EDITFORM, delete
;


FORM priceSetDocument 'Документ базовых цен'

    OBJECTS p=basePriceSetDocument FIXED PANEL
    PROPERTIES(p) sidPriceSetDocument, date, timePriceSetDocument, toSetPricesPriceSetDocument

    TREE treeSupplierBrand v=STRING[3], s=supplier, b=brandSupplier
    PROPERTIES READONLY OBJVALUE(v), name(s), name(b)

    TREE treeCategory vv=STRING[3], c=category
    PROPERTIES READONLY OBJVALUE(vv), name(c)

    OBJECTS aa=article
    PROPERTIES (aa) READONLY sidArticle, nameCategoryArticle, nameBrandSupplierArticle
    PROPERTIES (p, aa) inArticlePriceSetDocument

    FILTERS stringEqualsAll(v), inBrandSupplier(s, b), inSupplierBrandArticle(s, b, aa), stringEqualsAll(vv), inArticleCategory(c, aa)

    OBJECTS a=article
    PROPERTIES(a) READONLY sidArticle, nameCategoryArticle, nameBrandSupplierArticle
    PROPERTIES (p, a) priceInPriceSetDocumentArticle,
                      RRPPriceSetDocumentArticle, markupPriceSetDocumentArticle, priceOutPriceSetDocumentArticle,
                      ratePriceSetDocumentArticle, RRPRatePriceSetDocumentArticle, priceOutRatePriceSetDocumentArticle,
                      priceBBasePriceSetDocumentArticle, nameMethodPriceSetDocumentArticle, priceRetailPriceSetDocumentArticle,
                      priceDataBasePriceSetDocumentArticle, percentVATPriceSetDocumentArticle, sumVATPriceSetDocumentArticle

    FILTERS inArticlePriceSetDocument(p, a)

    FILTERGROUP filtersMethod
        FILTER 'Показывать без метода' 'F9' notMethodPriceSetDocumentArticle(p, a)

    FILTERGROUP filtersCategory
        FILTER 'Показывать артикулы ном. группы' 'F10' inArticleCategory(c, a)
    FILTERGROUP filtersBrand
        FILTER 'Показывать артикулы бренда' 'F11' inArticleBrand(b, a)

    EDIT basePriceSetDocument OBJECT p
;

DESIGN priceSetDocument FROM DEFAULT {
    POSITION treeSupplierBrand.tree.box TO THE LEFT treeCategory.tree.box;
    POSITION treeCategory.tree.box TO THE LEFT aa.box;

    treeSupplierBrand.tree {
        fillHorizontal = 1.5;
    }

    aa.box {
        fillHorizontal = 1.5;
    }

}

FORM priceBaseChangeDocuments 'Документы базовых цен'

    OBJECTS p=basePriceSetDocument
    PROPERTIES(p) READONLY sidPriceSetDocument, date, timePriceSetDocument, dateTimeToPriceSetDocument
    PROPERTIES(p) ADDFORM, EDITFORM, delete

    OBJECTS a=article
    PROPERTIES(a) READONLY sidArticle, nameCategoryArticle, nameBrandSupplierArticle
    PROPERTIES (p, a) READONLY priceInPriceSetDocumentArticle,
                               RRPPriceSetDocumentArticle, markupPriceSetDocumentArticle, priceOutPriceSetDocumentArticle,
                               ratePriceSetDocumentArticle,
                               priceBBasePriceSetDocumentArticle, priceRetailPriceSetDocumentArticle,
                               priceDataBasePriceSetDocumentArticle, percentVATPriceSetDocumentArticle, sumVATPriceSetDocumentArticle

    FILTERS inArticlePriceSetDocument(p, a)
;


//уценки
FORM logPriceArticle 'История цен'

    OBJECTS a=article
    OBJECTS d=discountPriceSetDocument
    PROPERTIES(d) READONLY dateTimePriceSetDocument
    PROPERTIES (d, a) READONLY priceDataDiscountPriceSetDocumentArticle

    FILTERS inArticlePriceSetDocument(d, a)

;

showFormLogPriceArticle 'История' (article) = ACTION FORM logPriceArticle OBJECTS a NEWSESSION MODAL;

FORM discountPriceSetDocument 'Распродажа'

    OBJECTS d=discountPriceSetDocument FIXED PANEL
    PROPERTIES(d) sidPriceSetDocument, date, timePriceSetDocument, dateTimeToPriceSetDocument

    TREE treeSupplierBrand v=STRING[3], s=supplier, b=brandSupplier
    PROPERTIES READONLY OBJVALUE(v), name(s), name(b)

    TREE treeCategory vv=STRING[3], c=category
    PROPERTIES READONLY OBJVALUE(vv), name(c)

    OBJECTS aa=article
    PROPERTIES (aa) READONLY sidArticle, nameCategoryArticle, nameBrandSupplierArticle
    PROPERTIES (d, aa) inArticlePriceSetDocument

    FILTERS stringEqualsAll(v), inBrandSupplier(s, b), inSupplierBrandArticle(s, b, aa), stringEqualsAll(vv), inArticleCategory(c, aa)

    OBJECTS a=article
    PROPERTIES(a) READONLY sidArticle, nameCategoryArticle, nameBrandSupplierArticle, showFormLogPriceArticle
    PROPERTIES (d, a) ratePriceSetDocumentArticle, priceInRateBBasePriceSetDocumentArticle, priceBBasePriceSetDocumentArticle,
                      percentDiscountPriceSetDocumentArticle, priceDiscountPriceSetDocumentArticle, priceBDiscountPriceSetDocumentArticle,
                      priceDataDiscountPriceSetDocumentArticle//, priceRetailPriceSetDocumentArticle

    FILTERS inArticlePriceSetDocument(d, a)
     FILTERGROUP filtersCategory
        FILTER 'Показывать артикулы ном. группы' 'F10' inArticleCategory(c, a)
    FILTERGROUP filtersBrand
        FILTER 'Показывать артикулы бренда' 'F11' inArticleBrand(b, a)
    EDIT discountPriceSetDocument OBJECT d
;

DESIGN discountPriceSetDocument FROM DEFAULT {
    POSITION treeSupplierBrand.tree.box TO THE LEFT treeCategory.tree.box;
    POSITION treeCategory.tree.box TO THE LEFT aa.box;

    treeSupplierBrand.tree {
        fillHorizontal = 1.5;
    }

    aa.box {
        fillHorizontal = 1.5;
    }
}


FORM discountPriceSetDocuments 'Распродажи'

    OBJECTS d=discountPriceSetDocument
    PROPERTIES(d) READONLY sidPriceSetDocument, date, timePriceSetDocument, dateTimeToPriceSetDocument
    PROPERTIES(d) ADDFORM, EDITFORM, delete

    OBJECTS a=article
    PROPERTIES(a) READONLY sidArticle, nameCategoryArticle, nameBrandSupplierArticle
    PROPERTIES (d, a) READONLY ratePriceSetDocumentArticle, priceInRateBBasePriceSetDocumentArticle, priceBBasePriceSetDocumentArticle,
                               priceBDiscountPriceSetDocumentArticle, priceDataDiscountPriceSetDocumentArticle//, priceRetailPriceSetDocumentArticle

    FILTERS inArticlePriceSetDocument(d, a)
;


// розничный прайс по фрахту
toCreatePriceSetDocument 'Расценка фрахта' =  ACTION (freight) NEWSESSION {
    ADDOBJ basePriceSetDocument;
    FOR p == addedObject() DO {
        SET freightPriceSetDocument(p) <- freight AS freight;
        SET priceInPriceSetDocumentArticle(p, article) <- priceInFreightArticle(freight, article);
        SET RRPPriceSetDocumentArticle(p, article) <- RRPFreightArticle(freight, article);
        SET inArticlePriceSetDocument(p, article) <- inFreightArticle(freight, article);
        FORM priceSetDocument OBJECTS p=addedObject() MODAL;
        IF formResult() == formResult.ok THEN {
            EXEC apply();
        };
    };
} CONFIRM;

FORM freights 'Ценообразование по фрахтам'

    OBJECTS f=freight
    PROPERTIES(f) READONLY date BACKGROUND isPriceSetDocumentFreight(f), dateArrivalFreight, nameCustomStoreFreight,
                           descriptionFreight, nameRouteFreight, nameExporterFreight, freightGrossWeight
    PROPERTIES(f) FORCE PANEL toCreatePriceSetDocument SHOWIF isPriceSetDocumentFreight(f)

    FILTERGROUP filtersDocument
        FILTER 'Показывать нерасценённые фрахты' 'F11' isPriceSetDocumentFreight(f) DEFAULT
;


// Акции, распродажи
CLASS ABSTRACT action 'Акция';
CLASS saleAction 'Распродажа': action;
CLASS articleAction 'Акция по позициям': action;

dateFromAction 'Дата с' = DATA DATE(action) IN baseGroup;
dateToAction 'Дата по' = DATA DATE(action) IN baseGroup;

inActionStore 'Магазин в акции' = DATA BOOLEAN(action, store);
inActionArticle 'Артикул в акции' = DATA BOOLEAN(action, article);

minSumClientArticleAction 'Мин. накопленная сумма' = DATA NUMERIC[14,2](articleAction) IN baseGroup;
minSumCheckArticleAction 'Мин. сумма чека' = DATA NUMERIC[14,2](articleAction) IN baseGroup;