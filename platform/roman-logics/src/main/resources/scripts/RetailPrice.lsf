MODULE RetailPrice;

REQUIRE System,
        MasterData,
        POS,
        RomanStock,
        RomanLogicsModule;

PRIORITY MasterData, RomanLogicsModule;


META metaCodePriceBaseDiscount(document, caption)

    priceData###document##Article caption = DATA NUMERIC[14,2](document, article) IN baseGroup;

    order###document = LIST(dateTimePriceSetDocument(document), document) PERSISTENT;

    concat###document##ArticleDateTime (article, dateTime) = GROUP MAX order###document(document) AND
                                                                       priceData###document##Article(document, article) AND
                                                                       dateTimePriceSetDocument(document) < (dateTime AS DATETIME) AND
                                                                       dateTimeToPriceSetDocument(document) > (dateTime AS DATETIME)
                                                                    BY article, dateTime;

    document##ArticleDateTime (article, dateTime) = concat###document##ArticleDateTime(article, dateTime)[2];

    price###document##ArticleDateTime(article, dateTime) = priceData###document##Article(document##ArticleDateTime(article, dateTime), article);
    priceIn###document##ArticleDateTime(article, dateTime) = priceInPriceSetDocumentArticle(document##ArticleDateTime(article, dateTime), article);
    prevPriceIn###document##ArticleDateTime(article, dateTime) = PREV(priceInPriceSetDocumentArticle(document##ArticleDateTime(article, dateTime), article));

    RRP###document##ArticleDateTime(article, dateTime) = RRPPriceSetDocumentArticle(document##ArticleDateTime(article, dateTime), article);
    prevRRP###document##ArticleDateTime(article, dateTime) = PREV(RRPPriceSetDocumentArticle(document##ArticleDateTime(article, dateTime), article));

    priceB###document##Article 'Предыдущая цена'(document, article) = price###document##ArticleDateTime(article, dateTimePriceSetDocument(document)) MINCHARWIDTH 15;
    priceInB###document##Article 'Предыдущая поставщика'(document, article) = prevPriceIn###document##ArticleDateTime(article, dateTimePriceSetDocument(document));
    prevPriceInB###document##Article 'Предыдущая поставщика' (document, article) = prevPriceIn###document##ArticleDateTime(article, dateTimePriceSetDocument(document));

    prevRRPB###document##Article 'Предыдущая рекомендуемая'(document, article) = prevRRP###document##ArticleDateTime(article, dateTimePriceSetDocument(document));
    RRPB###document##Article 'Предыдущая рекомендуемая'(document, article) = RRP###document##ArticleDateTime(article, dateTimePriceSetDocument(document));

END


maxDateTime 'Максимальная дата' = DATA DATETIME();

EXTEND FORM globalParamForm
     PROPERTIES() maxDateTime
;

CLASS STATIC methodPrice 'Метод расчёта'
{
    coefficient 'С надбавкой',
    RRP 'Рекомендуемая',
    previous 'Предыдущая'
};


CLASS ABSTRACT priceSetDocument 'Документ изменения цен' : transaction, numeratedObject;
CLASS basePriceSetDocument 'Базовый прайс' : priceSetDocument;
CLASS discountPriceSetDocument 'Распродажа' : priceSetDocument;
CLASS mixPriceSetDocument 'Базовый прайс с распродажей' : basePriceSetDocument, discountPriceSetDocument;

CLASS coefficientRetail 'Надбавка';

//CLASS diapasonPrices 'Диапазон цен';
//priceFromDiapasonPrices 'от' = DATA NUMERIC[14,3](diapasonPrices) IN baseGroup;
//priceToDiapasonPrices 'до' = DATA NUMERIC[14,3](diapasonPrices) IN baseGroup;
//priceConversionDiapasonPrices 'Округлённая цена' = DATA NUMERIC[14,3](diapasonPrices) IN baseGroup;

TABLE priceSetDocumentArticle(priceSetDocument, article);

defaultNumeratorPriceSetDocuments = DATA numerator ();
nameDefaultNumeratorPriceSetDocuments 'Нумератор для розничных прайсов' = name(defaultNumeratorPriceSetDocuments());

initValueNumeratorObject(object) += defaultNumeratorPriceSetDocuments() IF object IS priceSetDocument;
initWhenNumeratorObject(object) += ASSIGNED(object IS priceSetDocument);

dateCoefficientRetail 'Дата введения' = DATA DATE(coefficientRetail) IN baseGroup;
markupCoefficientRetail 'Множитель' = DATA NUMERIC[14,3](coefficientRetail) IN baseGroup;

uniqueCoefficientRetail() = GROUP UNIQUE coefficientRetail BY dateCoefficientRetail(coefficientRetail)
                                                        WHERE coefficientRetail IS coefficientRetail;

sidPriceSetDocument 'Номер' = DATA STRING[10] (priceSetDocument) IN baseGroup;

timePriceSetDocument 'Время документа' = DATA TIME (priceSetDocument);
timePriceSetDocument (priceSetDocument) <- currentTime() WHEN ASSIGNED(priceSetDocument AS priceSetDocument);

dateTimePriceSetDocument 'Дата/время документа' (priceSetDocument) = toDateTime(date(priceSetDocument), timePriceSetDocument(priceSetDocument));

dateTimeToDataPriceSetDocument 'Дата/время окончания' = DATA DATETIME(priceSetDocument) IN baseGroup;
dateTimeToPriceSetDocument 'Дата/время окончания' (priceSetDocument) = UNION OVERRIDE maxDateTime() IF priceSetDocument IS priceSetDocument,
                                                                                            dateTimeToDataPriceSetDocument(priceSetDocument) IN baseGroup PERSISTENT;

CONSTRAINT dateTimeToPriceSetDocument(document) < dateTimePriceSetDocument(document) MESSAGE 'Дата/время окончания действия документа меньше даты/времени его начала';

isDiscountPriceSetDocument 'Распродажа' = DATA BOOLEAN(priceSetDocument) IN baseGroup;
keepDiscountPriceSetDocument 'Учитывать скидки' = DATA BOOLEAN(priceSetDocument) IN baseGroup;

//связь документа и фрахта
freightPriceSetDocument 'Фрахт документа (ИД)' = DATA freight(basePriceSetDocument) IN idGroup;

quantityPriceSetDocumentFreight (freight) = GROUP SUM 1 IF freightPriceSetDocument(basePriceSetDocument) BY freightPriceSetDocument(basePriceSetDocument);
isPriceSetDocumentFreight (freight) = TRUE IF NOT quantityPriceSetDocumentFreight(freight) AND freight IS freight;

isPriceSetFreight 'Статус' (freight) = IF isPriceSetDocumentFreight(freight)
                                     THEN 'Не расценен' AND freight IS freight
                                     ELSE 'Расценен' AND freight IS freight;

backgroundPriceSetDocument 'Цвет' (freight) = RGB(255, 128, 128) IF isPriceSetFreight(freight) == 'Не расценен';

priceInPriceSetDocumentArticle 'Цена поставщика' = DATA NUMERIC[14,2](basePriceSetDocument, article) IN baseGroup;

RRPPriceSetDocumentArticle 'Рекомендуемая цена' = DATA NUMERIC[14,2](basePriceSetDocument, article) IN baseGroup;

isRRPPriceSetDocumentArticle 'Есть рекомендуемая цена' (basePriceSetDocument, article) =
    TRUE IF RRPPriceSetDocumentArticle(basePriceSetDocument, article);

ratePriceSetDocument 'Обменный курс' (priceSetDocument, article) = nearestRateExchange(typeExchangeRetail(),
                                                                                             currencyTypeExchange(typeExchangeSTX()),
                                                                                             priceSetDocument) AND article IS article;

rateDataPriceSetDocumentArticle 'Обменный курс' = DATA NUMERIC[14,2](priceSetDocument, article) IN baseGroup;

ratePriceSetDocumentArticle 'Обменный курс' (basePriceSetDocument, article) = UNION OVERRIDE ratePriceSetDocument(basePriceSetDocument, article),
                                                                                                   rateDataPriceSetDocumentArticle(basePriceSetDocument, article);

coefficientRetailDate(coefficientRetail, date) = coefficientRetail IF dateCoefficientRetail(coefficientRetail) <= date AND date AS DATE;
actingCoefficientRetailDate(date) = GROUP MAX dateCoefficientRetail(coefficientRetailDate(coefficientRetail, date)) BY date;

coefficientRetailPriceSetDocument 'Коэффициент документа' (basePriceSetDocument) = uniqueCoefficientRetail(actingCoefficientRetailDate(date(basePriceSetDocument))) IN idGroup;
markupCoefficientRetailPriceSetDocumentArticle 'Коэффициент документа' (basePriceSetDocument, article) = markupCoefficientRetail(coefficientRetailPriceSetDocument(basePriceSetDocument))
                                                                                                               AND article IS article IN baseGroup;

markupPriceSetDocumentArticle 'Коэффициент артикула' = DATA NUMERIC[14,2] (basePriceSetDocument, article);
markupPriceSetDocumentArticle (basePriceSetDocument, article) <- markupCoefficientRetailPriceSetDocumentArticle(basePriceSetDocument, article) WHEN ASSIGNED(basePriceSetDocument IS basePriceSetDocument);

priceOutPriceSetDocumentArticle 'Цена с надбавкой' (basePriceSetDocument, article) = round2(priceInPriceSetDocumentArticle(basePriceSetDocument, article) *
                                                                                                  markupPriceSetDocumentArticle(basePriceSetDocument, article));

@metaCodePriceBaseDiscount(basePriceSetDocument, 'Базовая цена');
@metaCodePriceBaseDiscount(discountPriceSetDocument, 'Цена с уценкой');

methodPriceSetDocumentArticle 'Метод расчёта (ИД)' = DATA methodPrice(basePriceSetDocument, article);
notMethodPriceSetDocumentArticle = TRUE IF NOT methodPriceSetDocumentArticle(basePriceSetDocument, article);

nameMethodPriceSetDocumentArticle 'Метод расчёта' (basePriceSetDocument, article) = name(methodPriceSetDocumentArticle(basePriceSetDocument, article)) MAXCHARWIDTH 20;

RRPRatePriceSetDocumentArticle 'Рекомендуемая (руб.)' (basePriceSetDocument, article) = round0(RRPPriceSetDocumentArticle(basePriceSetDocument, article) *
                                                                                                     ratePriceSetDocumentArticle(basePriceSetDocument, article)) MINCHARWIDTH 15;

priceOutRatePriceSetDocumentArticle 'С надбавкой (руб.)' (basePriceSetDocument, article) = round0(priceOutPriceSetDocumentArticle(basePriceSetDocument, article) *
                                                                                                        ratePriceSetDocumentArticle(basePriceSetDocument, article)) MINCHARWIDTH 15;


priceRetailPriceSetDocumentArticle 'Цена розничная' (basePriceSetDocument, article) =
           IF methodPriceSetDocumentArticle(basePriceSetDocument, article) == methodPrice.coefficient THEN priceOutRatePriceSetDocumentArticle(basePriceSetDocument, article) ELSE
             IF methodPriceSetDocumentArticle(basePriceSetDocument, article) == methodPrice.RRP THEN RRPRatePriceSetDocumentArticle(basePriceSetDocument, article) ELSE
                PREV(priceBBasePriceSetDocumentArticle(basePriceSetDocument, article)) IF methodPriceSetDocumentArticle(basePriceSetDocument, article) == methodPrice.previous;

priceDataBasePriceSetDocumentArticle(basePriceSetDocument, article) <- priceRetailPriceSetDocumentArticle(basePriceSetDocument, article)
                            WHEN CHANGED (methodPriceSetDocumentArticle(basePriceSetDocument, article)) OR
                                 CHANGED (priceOutRatePriceSetDocumentArticle(basePriceSetDocument, article)) OR
                                 CHANGED (RRPRatePriceSetDocumentArticle(basePriceSetDocument, article));

// для уценки
priceInRateBBasePriceSetDocumentArticle 'Цена поставщика (руб.)' (discountPriceSetDocument, article) = ratePriceSetDocumentArticle (discountPriceSetDocument, article) *
                                                                                                             priceInBBasePriceSetDocumentArticle(discountPriceSetDocument, article) MINCHARWIDTH 15;

percentDiscountPriceSetDocumentArticle 'Процент уценки' = DATA NUMERIC[14,2](discountPriceSetDocument, article) IN baseGroup;

priceDiscountPriceSetDocumentArticle 'Цена без процентов' (discountPriceSetDocument, article) = [roundM1(X*(100-Y)/100)]
                                                                                                        (priceBBasePriceSetDocumentArticle(discountPriceSetDocument, article),
                                                                                                         percentDiscountPriceSetDocumentArticle(discountPriceSetDocument, article)) IN baseGroup;


priceDataDiscountPriceSetDocumentArticle(discountPriceSetDocument, article) <- priceDiscountPriceSetDocumentArticle(discountPriceSetDocument, article)
                                        WHEN CHANGED (priceDiscountPriceSetDocumentArticle(discountPriceSetDocument, article));

inArticlePriceSetDocument 'Артикул в документе' = DATA BOOLEAN(priceSetDocument, article);
inFreightArticle (freight, article) = TRUE IF quantityFreightArticle(freight, article);


//проставление текущих значений при расценке
priceInPriceSetDocumentArticle(basePriceSetDocument, article) <- prevPriceInBBasePriceSetDocumentArticle (basePriceSetDocument, article)
    WHEN ASSIGNED(inArticlePriceSetDocument(basePriceSetDocument, article));

RRPPriceSetDocumentArticle(basePriceSetDocument, article) <- prevRRPBBasePriceSetDocumentArticle (basePriceSetDocument, article)
    WHEN ASSIGNED(inArticlePriceSetDocument(basePriceSetDocument, article));

toSetPricesPriceSetDocument 'Взять цены поставщика' =  ACTION (basePriceSetDocument) {
    FOR p == basePriceSetDocument AND inArticlePriceSetDocument(p, article) DO {
        SET priceInPriceSetDocumentArticle(p, article) <- priceInBBasePriceSetDocumentArticle (p, article);
        SET RRPPriceSetDocumentArticle(p, article) <- RRPBBasePriceSetDocumentArticle (p, article);
    };
};

pricePriceSetDocumentArticleDateTime(article, dateTime) = priceBasePriceSetDocumentArticleDateTime(article, dateTime) OR priceDiscountPriceSetDocumentArticleDateTime(article, dateTime);

POSPriceSkuDepartmentStoreDateTime(sku, departmentStore, dateTime) += pricePriceSetDocumentArticleDateTime(articleSku(sku), dateTime) IF departmentStore IS departmentStore;

FORM coefficientRetail 'Надбавка'

    OBJECTS c=coefficientRetail FIXED PANEL
    PROPERTIES(c) dateCoefficientRetail, markupCoefficientRetail

    EDIT coefficientRetail OBJECT c
;

FORM coefficientRetails 'Надбавки'

    OBJECTS c=coefficientRetail
    PROPERTIES(c) READONLY dateCoefficientRetail, markupCoefficientRetail
    PROPERTIES(c) ADDFORM, EDITFORM, delete
;


FORM priceSetDocument 'Базовый прайс'

    OBJECTS p=basePriceSetDocument FIXED PANEL
    PROPERTIES(p) nameNumeratorObject, numberObject, seriesObject, date, timePriceSetDocument, dateTimeToPriceSetDocument, toSetPricesPriceSetDocument

    TREE treeSupplierBrand v=STRING[3], s=supplier, b=brandSupplier
    PROPERTIES READONLY OBJVALUE(v), name(s), name(b)

    TREE treeCategory vv=STRING[3], c=category
    PROPERTIES READONLY OBJVALUE(vv), name(c)

    OBJECTS aa=article
    PROPERTIES (aa) READONLY sidArticle, nameCategoryArticle, nameBrandSupplierArticle, currentBalanceArticle
    PROPERTIES (p, aa) inArticlePriceSetDocument

    FILTERS stringEqualsAll(v), inBrandSupplier(s, b), inSupplierBrandArticle(s, b, aa), stringEqualsAll(vv),
            inArticleCategory(c, aa)

    OBJECTS a=article
    PROPERTIES(a) READONLY sidArticle, nameCategoryArticle, nameBrandSupplierArticle
    PROPERTIES (p, a) priceInPriceSetDocumentArticle,
                      RRPPriceSetDocumentArticle, markupPriceSetDocumentArticle, priceOutPriceSetDocumentArticle,
                      ratePriceSetDocumentArticle, RRPRatePriceSetDocumentArticle, priceOutRatePriceSetDocumentArticle,
                      priceBBasePriceSetDocumentArticle, nameMethodPriceSetDocumentArticle, priceRetailPriceSetDocumentArticle,
                      priceDataBasePriceSetDocumentArticle

    FILTERS inArticlePriceSetDocument(p, a), inSupplierBrandArticle(s, b, a), inArticleCategory(c, a)

    FILTERGROUP filters
        FILTER 'Есть рекомендуемая цена' 'F7' isRRPPriceSetDocumentArticle(p, a)

    FILTERGROUP filtersBalance
        FILTER 'Ненулевые остатки' 'F8' currentBalanceArticle(aa) DEFAULT

    FILTERGROUP filtersMethod
        FILTER 'Показывать без метода' 'F9' notMethodPriceSetDocumentArticle(p, a)

    FILTERGROUP filtersCategory
        FILTER 'Показывать артикулы ном. группы' 'F10' inArticleCategory(c, a)
    FILTERGROUP filtersBrand
        FILTER 'Показывать артикулы бренда' 'F11' inArticleBrand(b, a)

    EDIT basePriceSetDocument OBJECT p
;

DESIGN priceSetDocument FROM DEFAULT {
    main {

        ADD p.box{
            childConstraints = TO THE RIGHT;
            ADD PROPERTY(nameNumeratorObject);
            ADD PROPERTY(numberObject);
            ADD PROPERTY(seriesObject);
            ADD PROPERTY(date);
            ADD PROPERTY(timePriceSetDocument);
            ADD PROPERTY(dateTimeToPriceSetDocument);
            ADD PROPERTY(toSetPricesPriceSetDocument);
        }

        NEW allContainer {
            childConstraints = TO THE BOTTOM;
            type = SPLITV;

            NEW topContainer {

                childConstraints = TO THE RIGHT;
                type = SPLITH;

                NEW treeContainer {

                    childConstraints = TO THE RIGHT;
                    type = SPLITH;

                    ADD treeSupplierBrand.tree.box {
                        fillHorizontal = 1.5;
                    }

                    ADD treeCategory.tree.box {
                        fillHorizontal = 1.5;
                    }
                }

                ADD aa.box {
                    fillHorizontal = 1.5;
                }
            }

            ADD a.box {
                fillVertical = 1.5;
            }
        }
    }

    ADD functions.box;
}

FORM priceBaseChangeDocuments 'Базовые прайсы'

    OBJECTS p=basePriceSetDocument
    PROPERTIES(p) READONLY numberObject, seriesObject, date, timePriceSetDocument, dateTimeToPriceSetDocument
    PROPERTIES(p) ADDFORM, EDITFORM, delete

    OBJECTS a=article
    PROPERTIES(a) READONLY sidArticle, nameCategoryArticle, nameBrandSupplierArticle
    PROPERTIES (p, a) READONLY priceInPriceSetDocumentArticle,
                               RRPPriceSetDocumentArticle, markupPriceSetDocumentArticle, priceOutPriceSetDocumentArticle,
                               ratePriceSetDocumentArticle,
                               priceBBasePriceSetDocumentArticle, priceRetailPriceSetDocumentArticle,
                               priceDataBasePriceSetDocumentArticle

    FILTERS inArticlePriceSetDocument(p, a)
;


//уценки
FORM logPriceArticle 'История цен'

    OBJECTS a=article
    OBJECTS d=discountPriceSetDocument
    PROPERTIES(d) READONLY dateTimePriceSetDocument
    PROPERTIES (d, a) READONLY priceDataDiscountPriceSetDocumentArticle

    FILTERS inArticlePriceSetDocument(d, a)

;

showFormLogPriceArticle 'История' (article) = ACTION FORM logPriceArticle OBJECTS a NEWSESSION MODAL;

FORM discountPriceSetDocument 'Распродажа'

    OBJECTS d=discountPriceSetDocument FIXED PANEL
    PROPERTIES(d) nameNumeratorObject, numberObject, seriesObject, date, timePriceSetDocument, dateTimeToPriceSetDocument

    TREE treeSupplierBrand v=STRING[3], s=supplier, b=brandSupplier
    PROPERTIES READONLY OBJVALUE(v), name(s), name(b)

    TREE treeCategory vv=STRING[3], c=category
    PROPERTIES READONLY OBJVALUE(vv), name(c)

    OBJECTS aa=article
    PROPERTIES (aa) READONLY sidArticle, nameCategoryArticle, nameBrandSupplierArticle
    PROPERTIES (d, aa) inArticlePriceSetDocument

    FILTERS stringEqualsAll(v), inBrandSupplier(s, b), inSupplierBrandArticle(s, b, aa), stringEqualsAll(vv), inArticleCategory(c, aa)

    OBJECTS a=article
    PROPERTIES(a) READONLY sidArticle, nameCategoryArticle, nameBrandSupplierArticle, showFormLogPriceArticle
    PROPERTIES (d, a) ratePriceSetDocumentArticle, priceInRateBBasePriceSetDocumentArticle, priceBBasePriceSetDocumentArticle,
                      percentDiscountPriceSetDocumentArticle, priceDiscountPriceSetDocumentArticle, priceBDiscountPriceSetDocumentArticle,
                      priceDataDiscountPriceSetDocumentArticle//, priceRetailPriceSetDocumentArticle

    FILTERS inArticlePriceSetDocument(d, a)
     FILTERGROUP filtersCategory
        FILTER 'Показывать артикулы ном. группы' 'F10' inArticleCategory(c, a)
    FILTERGROUP filtersBrand
        FILTER 'Показывать артикулы бренда' 'F11' inArticleBrand(b, a)
    EDIT discountPriceSetDocument OBJECT d
;

DESIGN discountPriceSetDocument FROM DEFAULT {
    main {

        NEW allContainer {
            childConstraints = TO THE BOTTOM;
            type = SPLITV;

            NEW topContainer {

                childConstraints = TO THE RIGHT;
                type = SPLITH;

                NEW treeContainer {

                    childConstraints = TO THE RIGHT;
                    type = SPLITH;

                    ADD treeSupplierBrand.tree.box {
                        fillHorizontal = 1.5;
                    }

                    ADD treeCategory.tree.box {
                        fillHorizontal = 1.5;
                    }
                }

                ADD aa.box {
                    fillHorizontal = 1.5;
                }
            }

            ADD a.box {
                fillVertical = 1.5;
            }
        }
    }

    ADD functions.box;
}

FORM discountPriceSetDocuments 'Распродажи'

    OBJECTS d=discountPriceSetDocument
    PROPERTIES(d) READONLY sidPriceSetDocument, date, timePriceSetDocument, dateTimeToPriceSetDocument
    PROPERTIES(d) ADDFORM, EDITFORM, delete

    OBJECTS a=article
    PROPERTIES(a) READONLY sidArticle, nameCategoryArticle, nameBrandSupplierArticle
    PROPERTIES (d, a) READONLY ratePriceSetDocumentArticle, priceInRateBBasePriceSetDocumentArticle, priceBBasePriceSetDocumentArticle,
                               priceBDiscountPriceSetDocumentArticle, priceDataDiscountPriceSetDocumentArticle//, priceRetailPriceSetDocumentArticle

    FILTERS inArticlePriceSetDocument(d, a)
;


// розничный прайс по фрахту
toCreatePriceSetDocument 'Расценить' =  ACTION (freight) NEWSESSION {
    ADDOBJ basePriceSetDocument;
    FOR p == addedObject() DO {
        SET freightPriceSetDocument(p) <- freight AS freight;
        SET priceInPriceSetDocumentArticle(p, article) <- priceInFreightArticle(freight, article);
        SET RRPPriceSetDocumentArticle(p, article) <- RRPFreightArticle(freight, article);
        SET inArticlePriceSetDocument(p, article) <- inFreightArticle(freight, article);
        FORM priceSetDocument OBJECTS p=addedObject() MODAL;
        IF formResult() == formResult.ok THEN {
            EXEC apply();
        };
    };
} TOOLBAR CONFIRM;

FORM freights 'Расценка фрахтов'

    OBJECTS f = freightPriced
    PROPERTIES(f) READONLY isPriceSetFreight BACKGROUND backgroundPriceSetDocument(f), date, dateArrivalFreight,
                           descriptionFreight, nameRouteFreight, nameExporterFreight, freightGrossWeight
    PROPERTIES(f) FORCE PANEL toCreatePriceSetDocument SHOWIF isPriceSetDocumentFreight(f)

    FILTERGROUP filtersDocument
        FILTER 'Показывать нерасценённые фрахты' 'F11' isPriceSetDocumentFreight(f) DEFAULT
;

