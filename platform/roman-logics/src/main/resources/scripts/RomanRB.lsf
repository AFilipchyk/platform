MODULE RB;

IMPORT BaseLogicsModule;
IMPORT RomanLogicsModule;

//--------------------------------- Сертификаты --------------------------------------------------------------------//
CLASS certificate 'Сертификат';

sidCertificate 'Номер' = DATA STRING[20] (certificate) IN baseGroup;
dateIssueCertificate 'Дата выдачи' = DATA DATE (certificate) IN baseGroup;
dateValidityCertificate 'Действует до' = DATA DATE (certificate) IN baseGroup;

FORM certificate 'Сертификат'
    OBJECTS c=certificate FIXED PANEL
    PROPERTIES(c) sidCertificate, dateIssueCertificate, dateValidityCertificate
    EDIT certificate OBJECT c
;

FORM certificates 'Сертификаты'
    OBJECTS c=certificate
    PROPERTIES(c) READONLY sidCertificate, dateIssueCertificate, dateValidityCertificate
    PROPERTIES(c) ADDFORM, EDITFORM, delete
;

//--------------------------------- Инвойсы -------------------------------------------------------------------------//
CLASS ABSTRACT innerInvoice 'Внутренний инвойс';
CLASS formedInvoice 'Инвойс от STX' : innerInvoice;

freightFormedInvoice 'Фрахт инвойса (ИД)' = DATA freight(formedInvoice) IN idGroup;
importerFormedInvoice 'Импортер инвойса (ИД)' = DATA importer(formedInvoice) IN idGroup;
dateFreightFormedInvoice 'Фрахт инвойса' (formedInvoice) = dateArrivalFreight(freightFormedInvoice(formedInvoice)) IN baseGroup;
nameImporterFormedInvoice 'Импортер инвойса' (formedInvoice) = name(importerFormedInvoice(formedInvoice)) IN baseGroup;

sidFormedInvoice 'Номер инвойса' (formedInvoice) = sidImporterFreight(importerFormedInvoice(formedInvoice), freightFormedInvoice(formedInvoice)) IN baseGroup;

uniqueFormedInvoiceImporterFreight (importer, freight) = GROUP UNIQUE formedInvoice
                                                                   BY importerFormedInvoice(formedInvoice),
                                                                      freightFormedInvoice(formedInvoice)
                                                                WHERE formedInvoice IS formedInvoice;

includeImporterFreight(importer, freight) = quantityProxyImporterFreight(importer, freight) AND freight IS freightArrived;
includeImporterFreight(importer, freight) => uniqueFormedInvoiceImporterFreight(importer, freight) RESOLVE ALL;

quantityFormedInvoiceSku 'Кол-во в инвойсе' (formedInvoice, sku) = quantityProxyImporterFreightSku(importerFormedInvoice(formedInvoice),
                                                                                                   freightFormedInvoice(formedInvoice),
                                                                                                   sku);
quantityFormedInvoice 'Кол-во в инвойсе' (formedInvoice) = GROUP SUM quantityFormedInvoiceSku(formedInvoice, sku)
                                                                  BY formedInvoice IN baseGroup;


//--------------------------------- Декларации ----------------------------------------------------------------------//
CLASS declaration 'Таможенная декларация' : transaction;
CLASS declarationDetail 'Позиция декларации';

sidDeclaration 'Номер' = DATA STRING[10] (declaration) IN baseGroup;
importerDeclaration 'Импортер (ИД)' = DATA importer (declaration) IN idGroup;
nameImporterDeclaration 'Импортёр' = name(importerDeclaration(declaration)) IN baseGroup;

dateCorrectionDeclaration 'Дата оплаты КТС' = DATA DATE (declaration) IN baseGroup;

declarationInnerInvoice 'Декларация инвойса (ИД)' = DATA declaration(innerInvoice) IN idGroup;
sidDeclarationInnerInvoice 'Декларация инвойса' (innerInvoice) = sidDeclaration(declarationInnerInvoice(innerInvoice)) IN baseGroup;

CONSTRAINT CHECKED importerDeclaration(declarationInnerInvoice(innerInvoice)) != importerFormedInvoice(innerInvoice)
    MESSAGE 'Инвойс для другого импортёра';


innerInvoiceDeclarationSku 'Инвойс для декларации' (declaration, sku) = GROUP MAX innerInvoice IF quantityFormedInvoiceSku(innerInvoice, sku)
                                                                               BY declarationInnerInvoice(innerInvoice), sku;

quantityFormedDeclarationSku 'Кол-во в декларации (форм.)' (declaration, sku) = GROUP SUM quantityFormedInvoiceSku(formedInvoice, sku)
                                                                                       BY declarationInnerInvoice(formedInvoice), sku IN baseGroup;

//quantityDirectDeclarationSku 'Кол-во в декларации (напр.)' (declaration, sku) = GROUP SUM quantityDocumentSku(innerInvoice, sku)
//                                                                                       BY declarationInnerInvoice(innerInvoice), sku IN baseGroup;

//quantityDeclarationSku 'Кол-во в декларации' (declaration, sku) = quantityFormedDeclarationSku(declaration, sku) +
//                                                                  quantityDirectDeclarationSku(declaration, sku) IN baseGroup;

declarationDeclarationDetail 'Декларация позиции' = DATA declaration(declarationDetail) IN idGroup;
dateDeclarationDetail 'Дата декларации' (declarationDetail) = date(declarationDeclarationDetail(declarationDetail)) IN baseGroup;
skuDeclarationDetail 'Товар позиции (ИД)' = DATA sku(declarationDetail) IN idGroup;
barcodeSkuDeclarationDetail 'Штрих-код' = barcode(skuDeclarationDetail(declarationDetail)) IN baseGroup;

inDeclarationDeclarationDetail (declaration, declarationDetail) = declarationDeclarationDetail(declarationDetail)==declaration;

uniqueDeclarationDetailDeclarationSku (declaration, sku) = GROUP UNIQUE declarationDetail
                                                                     BY declarationDeclarationDetail(declarationDetail),
                                                                        skuDeclarationDetail(declarationDetail)
                                                                  WHERE declarationDetail IS declarationDetail;

quantityFormedDeclarationSku(declaration, sku) => uniqueDeclarationDetailDeclarationSku(declaration, sku) RESOLVE ALL;
//uniqueDeclarationDetailDeclarationSku(declaration, sku) => quantityFormedDeclarationSku(declaration, sku) RESOLVE ALL;

quantityDeclarationDetail 'Кол-во' (declarationDetail) = quantityFormedDeclarationSku(declarationDeclarationDetail(declarationDetail),
                                                                                      skuDeclarationDetail(declarationDetail)
                                                                                     ) IN baseGroup;

freightDeclarationDetail 'Фрахт позиции (ИД)' (declarationDetail) = freightFormedInvoice(innerInvoiceDeclarationSku(
                                                                                declarationDeclarationDetail(declarationDetail),
                                                                                skuDeclarationDetail(declarationDetail))) IN idGroup;

importerDeclarationDetail 'Импортёр позиции (ИД)' (declarationDetail) = importerFormedInvoice(innerInvoiceDeclarationSku(
                                                                                declarationDeclarationDetail(declarationDetail),
                                                                                skuDeclarationDetail(declarationDetail))) IN idGroup;

articleSkuDeclarationDetail 'Артикул товара (ИД)' (declarationDetail) = articleSku(skuDeclarationDetail(declarationDetail)) IN idGroup;
sidArticleSkuDeclarationDetail 'Артикул товара' (declarationDetail) = sidArticle(articleSkuDeclarationDetail(declarationDetail));

netWeightDeclarationDetail 'Вес товара' (declarationDetail) = netWeightFreightSku(freightDeclarationDetail(declarationDetail),
                                                                                  skuDeclarationDetail(declarationDetail));

mainCompositionDeclarationDetail 'Состав товара' (declarationDetail) = mainCompositionFreightSku(freightDeclarationDetail(declarationDetail),
                                                                                                 skuDeclarationDetail(declarationDetail));

// Для таможенного оформления
countryDeclarationDetail 'Страна товара (ИД)' (declarationDetail) = countryOfOriginFreightSku(freightDeclarationDetail(declarationDetail),
                                                                                              skuDeclarationDetail(declarationDetail)) IN idGroup;

nameCountryDeclarationDetail 'Страна товара' (declarationDetail) = name(countryDeclarationDetail(declarationDetail));

customCategory10DeclarationDetail 'ТН ВЭД товара (ИД)' (declarationDetail) = customCategory10FreightSku(freightDeclarationDetail(declarationDetail),
                                                                                                        skuDeclarationDetail(declarationDetail)) IN idGroup;

sidCustomCategory10DeclarationDetail 'ТН ВЭД товара' (declarationDetail) = sidCustomCategory10(customCategory10DeclarationDetail(declarationDetail));

certificatedDeclarationDetail 'Необходимость сертификации' (declarationDetail) = certificatedCustomCategory10(customCategory10DeclarationDetail(declarationDetail)) IN baseGroup;

certificateDeclarationDetail 'Сертификат партии (ИД)' = DATA certificate(declarationDetail) IN idGroup;
sidCertificateDeclarationDetail 'Сертификат партии' (declarationDetail) = sidCertificate(certificateDeclarationDetail(declarationDetail)) IN baseGroup;

// Для таможенных платежей
rateExchangeDeclaration 'Курс обмена' (declaration) = nearestRateExchange(typeExchangePayCustom(),
                                                                          currencyTypeExchange(typeExchangeSTX()),
                                                                          declaration);

rateExchangeDeclarationDetail 'Курс обмена' (declarationDetail) = rateExchangeDeclaration(declarationDeclarationDetail(declarationDetail)) IN baseGroup;

priceDeclarationDetail 'Цена товара' (declarationDetail) = priceFullImporterFreightSku(importerDeclarationDetail(declarationDetail),
                                                                                       freightDeclarationDetail(declarationDetail),
                                                                                       skuDeclarationDetail(declarationDetail));

priceRateDeclarationDetail 'Цена товара (конверт.)' (declarationDetail) = round0(priceDeclarationDetail(declarationDetail) *
                                                                                 rateExchangeDeclarationDetail(declarationDetail)) IN baseGroup;

// пошлины
dutyDeclarationDetail 'Пошлина товара (расч.)' (declarationDetail) = dutyImporterFreightSku(importerDeclarationDetail(declarationDetail),
                                                                                            freightDeclarationDetail(declarationDetail),
                                                                                            skuDeclarationDetail(declarationDetail));

dutyDataDeclarationDetail 'Пошлина товара' = DATA DOUBLE(declarationDetail) IN baseGroup;
dutyDataDeclarationDetail (declarationDetail) <- dutyDeclarationDetail(declarationDetail) ON CHANGE dateDeclarationDetail(declarationDetail);

rateDutyDeclarationDetail 'Пошлина товара (конверт.)' (declarationDetail) = round0(dutyDataDeclarationDetail(declarationDetail) *
                                                                                   rateExchangeDeclarationDetail(declarationDetail)) IN baseGroup;

dutyDeclaration 'Сумма пошлин' (declaration) = GROUP SUM rateDutyDeclarationDetail(declarationDetail) * quantityDeclarationDetail(declarationDetail)
                                                      BY declarationDeclarationDetail(declarationDetail) IN baseGroup;

// НДС
NDSDeclarationDetail 'НДС товара (расч.)' (declarationDetail) = NDSImporterFreightSku(importerDeclarationDetail(declarationDetail),
                                                                                      freightDeclarationDetail(declarationDetail),
                                                                                      skuDeclarationDetail(declarationDetail));

NDSDataDeclarationDetail 'НДС товара' = DATA DOUBLE(declarationDetail) IN baseGroup;
NDSDataDeclarationDetail (declarationDetail) <- NDSDeclarationDetail(declarationDetail) ON CHANGE dateDeclarationDetail(declarationDetail);

rateNDSDeclarationDetail 'НДС товара (конверт.)' (declarationDetail) = round0(NDSDataDeclarationDetail(declarationDetail) *
                                                                              rateExchangeDeclarationDetail(declarationDetail)) IN baseGroup;

NDSDeclaration 'НДС декларации' (declaration) = GROUP SUM rateNDSDeclarationDetail(declarationDetail) * quantityDeclarationDetail(declarationDetail)
                                                       BY declarationDeclarationDetail(declarationDetail) IN baseGroup;

// за оформление
sumRegistrationDeclarationDetail 'За оформление' (declarationDetail) = sumRegistrationFreightSku(freightDeclarationDetail(declarationDetail),
                                                                                                 skuDeclarationDetail(declarationDetail)) IN baseGroup;

sumRegistrationDeclaration 'За оформление (расч.)' (declaration) = GROUP MAX sumRegistrationDeclarationDetail(declarationDetail)
                                                                          BY declarationDeclarationDetail(declarationDetail) IN baseGroup;

sumRegistrationDataDeclaration 'За оформление' = DATA DOUBLE(declaration) IN baseGroup;
sumRegistrationDataDeclaration (declaration) <- sumRegistrationDeclaration(declaration) ON CHANGE date(declaration);

rateSumRegistrationDeclaration 'За оформление' (declaration) = round0(sumRegistrationDataDeclaration(declaration) *
                                                                      rateExchangeDeclaration(declaration)) IN baseGroup;

totalCustomSum 'Сумма платежей' (declaration) = dutyDeclaration(declaration) + NDSDeclaration(declaration) + sumRegistrationDeclaration(declaration) IN baseGroup;

correctionPriceDeclarationDetail 'Скорректированная стоимость' = DATA DOUBLE(declarationDetail) IN baseGroup;

correctionDutyDeclarationDetail 'Скорректированная пошлина (расч.)' (declarationDetail) = UNION MAX
                                            (netWeightDeclarationDetail(declarationDetail) * dutySumCustomCategory10TypeDuty(customCategory10DeclarationDetail(declarationDetail), typeDutyDuty())),
                                            (correctionPriceDeclarationDetail(declarationDetail) * (dutyPercentCustomCategory10TypeDuty(customCategory10DeclarationDetail(declarationDetail), typeDutyDuty())/100));

correctionDutyDataDeclarationDetail 'Скорректированная пошлина' = DATA DOUBLE(declarationDetail) IN baseGroup;
correctionDutyDataDeclarationDetail(declarationDetail) <- correctionDutyDeclarationDetail(declarationDetail) ON CHANGE dateDeclarationDetail(declarationDetail);

diffDutyDeclarationDetail 'Разница пошлин' (declarationDetail) = correctionDutyDataDeclarationDetail(declarationDetail) - dutyDataDeclarationDetail(declarationDetail)
                                                                 IF correctionPriceDeclarationDetail(declarationDetail);

diffDutyDeclararion 'Разница пошлин' (declaration) = GROUP SUM diffDutyDeclarationDetail(declarationDetail) *
                                                               quantityDeclarationDetail(declarationDetail) *
                                                               rateExchangeDeclarationDetail(declarationDetail)
                                                            BY declarationDeclarationDetail(declarationDetail);

FORM declaration 'Декларация'
    OBJECTS d=declaration FIXED PANEL
    PROPERTIES(d) sidDeclaration, date, nameImporterDeclaration, dateCorrectionDeclaration, sumRegistrationDataDeclaration,
                  rateSumRegistrationDeclaration, dutyDeclaration, NDSDeclaration, totalCustomSum, diffDutyDeclararion

    OBJECTS dd=declarationDetail
    PROPERTIES (dd) barcodeSkuDeclarationDetail, sidArticleSkuDeclarationDetail, mainCompositionDeclarationDetail,
                    nameCountryDeclarationDetail, sidCustomCategory10DeclarationDetail, netWeightDeclarationDetail,
                    quantityDeclarationDetail, priceDeclarationDetail, dutyDeclarationDetail, dutyDataDeclarationDetail,
                    rateDutyDeclarationDetail, NDSDeclarationDetail, NDSDataDeclarationDetail, rateNDSDeclarationDetail,
                    certificatedDeclarationDetail, sidCertificateDeclarationDetail, correctionPriceDeclarationDetail,
                    correctionDutyDeclarationDetail, correctionDutyDataDeclarationDetail, diffDutyDeclarationDetail, ADDOBJ, delete

    FILTERS inDeclarationDeclarationDetail(d, dd)
    EDIT declaration OBJECT d
;

FORM declarations 'Декларации'
    OBJECTS d=declaration
    PROPERTIES(d) READONLY sidDeclaration, date, nameImporterDeclaration, dateCorrectionDeclaration, sumRegistrationDataDeclaration,
                           rateSumRegistrationDeclaration, dutyDeclaration, NDSDeclaration, totalCustomSum, diffDutyDeclararion
    PROPERTIES(d) ADDFORM, EDITFORM, delete

    OBJECTS dd=declarationDetail
    PROPERTIES (dd) barcodeSkuDeclarationDetail, sidArticleSkuDeclarationDetail, mainCompositionDeclarationDetail,
                    nameCountryDeclarationDetail, sidCustomCategory10DeclarationDetail, netWeightDeclarationDetail,
                    quantityDeclarationDetail, priceDeclarationDetail, dutyDeclarationDetail, dutyDataDeclarationDetail,
                    rateDutyDeclarationDetail, NDSDeclarationDetail, NDSDataDeclarationDetail, rateNDSDeclarationDetail,
                    certificatedDeclarationDetail, sidCertificateDeclarationDetail, correctionPriceDeclarationDetail,
                    correctionDutyDeclarationDetail, correctionDutyDataDeclarationDetail, diffDutyDeclarationDetail
    FILTERS inDeclarationDeclarationDetail(d, dd)
;

FORM formedInvoices 'Инвойсы'
    OBJECTS f=formedInvoice
    PROPERTIES(f) READONLY sidFormedInvoice, nameImporterFormedInvoice, dateFreightFormedInvoice
    PROPERTIES(f) sidDeclarationInnerInvoice, delete

    OBJECTS s=sku
    PROPERTIES(s) READONLY barcode, sidArticleSku
    PROPERTIES (f, s) quantityFormedInvoiceSku
    FILTERS quantityFormedInvoiceSku(f, s)
;


NAVIGATOR {

    customs 'Для таможни' {
        ADD certificate;
        ADD certificates;
        ADD declaration;
        ADD declarations;
        ADD formedInvoices;

     }
}