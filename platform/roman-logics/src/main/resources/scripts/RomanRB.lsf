MODULE RB;

REQUIRE System,

        Utils,
        ByStock,
        Barcode,
        Numerator,
        Document,
        Historizable,
        Consignment,
        Declaration,
        WHfromCS,
        WHfromRF,
        Contract,
        Transfer,
        Sale,
        Return,
        Move,
        WholesalePrice,
        RetailPrice,
        RetailCRM,
        POS,
        PriceChange,
        Terminal,
        UserPriceChange,
        WHtoLegalEntity,
        InnerOrder,
        PriceInterval,
        WriteOff,
        RomanWriteOff,
        ByCustomer,
        Inventory,
        Surplus,
        Particulars,
        DisparityBatch,
        RomanTransfer,
        RomanContractLedger,
        PriceChangeDiscount,
        ReturnCertification,
        Defect,
        CustomCategory,
        RomanPOS,
        RomanSales,
        RomanCashOperation,
        RomanLogicsModule;

PRIORITY RomanLogicsModule, Utils, Stock, Store;

EXTEND FORM stores

    PROPERTIES(s) READONLY sidDestination FORCE GRID

    OBJECTS su=supplier
    PROPERTIES(su)    READONLY name
    PROPERTIES(s, su) READONLY sidDestinationSupplier, relationStoreSupplier
    FILTERGROUP filtersDocument
        FILTER 'Связь маг./пост.' 'F11' relationStoreSupplier(s, su) DEFAULT
;

EXTEND DESIGN stores {
    main {
        preferredSize = (1024, 768);

        firstCase {
            NEW supDep {
                type = TABBED;
                ADD d.box;
                ADD su.box;
            }
        }
    }
}

EXTEND FORM store

    PROPERTIES(s) sidDestination

    OBJECTS su=supplier
    PROPERTIES(su)    READONLY name
    PROPERTIES(s, su) sidDestinationSupplier, relationStoreSupplier
    FILTERGROUP filtersDocument
        FILTER 'Связь маг./пост.' 'F11' relationStoreSupplier(s, su) DEFAULT
;

DESIGN store FROM DEFAULT {
    main {
        preferredSize = (1024, 768);
        childConstraints = TO THE BOTTOM;
        ADD s.box {
            childConstraints = TO THE RIGHTBOTTOM;
        }
        NEW row1 {
            childConstraints = TO THE RIGHT;
            ADD d.box;
            ADD su.box;
        }
        ADD functions.box;
    }
}

skipAReceiptSaleDetailPriceChangeZReportDetail (priceChangeZReportDetail) =
    skipAReceiptSaleDetail(receiptSaleDetailPriceChangeZReportDetail(priceChangeZReportDetail));

skipASkuLedger (ledger) += skipAReceiptSaleDetailPriceChangeZReportDetail (ledger);

NAVIGATOR {
    itemClassifier {
        ADD categories;
        ADD seasonYears;
        ADD UOMs;
    }

    contragentClassifier {
        ADD companies;
        ADD banks;
    }

    taxClassifier {
        ADD taxes;
    }

    classifier {
        NEW translations 'Переводы'{
            ADD languages;
            ADD dictionaries;
        }
        ADD currencyElement;
    }
    purchaseClassifier {
        ADD contractSkus;
    }

    customs {
        customClassifier {
            ADD customStores;
            ADD certificates;
            ADD customsZones;
            ADD customCategoryZones;
            ADD customCategoryOrigins;
        }

        NEW customDocument 'Документы' TO leftToolbar {
            ADD declarations;
            ADD CStoWHs;
        }

        NEW customReport 'Сводная информация' TO leftToolbar {
            ADD innerInvoices;
        }
    }

    prices {
        NEW pricesDocument 'Документы' {
            NEW retailPriceBase 'Розничное ценообразование'{
                ADD coefficientRetails;
                ADD priceIntervals;
                ADD priceSetDocuments;
                ADD freights;
            }

            NEW wholesalePrice 'Оптовое ценообразование' {
                ADD wholesalePriceDocuments;
                ADD priceDeclaration;
            }

        }
    }

    stock {
        stockClassifier {
            ADD warehouses;
        }
        ADD inventoryNavigator;
        ADD writeOffNavigator;
        NEW defectDocuments 'Брак' {
            ADD defectStocks;
            NEW repair  'Ремонт'{
                ADD repairShops;
                ADD repairs;
                ADD returnRepairs;
            }
            NEW dry  'Химчистка'{
                ADD cleaningStocks;
                ADD dryCleanings;
                ADD returnDryCleanings;
            }
        }
        NEW disparityDocument 'Пересорт' {
            ADD disparityBatches;
            ADD disparityBatchAs;
            ADD surplusOuts;
        }
        ADD stockCost;
        ADD stockBalance;
    }

    logistics {
        NEW transfersDocument 'Трансферы' {
            ADD transferTables;
            ADD innerOrders;
            ADD orderPickings;
            ADD innerOrderRecs;
        }

        NEW logisticsIncome 'Приходы' {
            ADD WHfromCSIs;
            ADD WHfromRFs;
            ADD transferIns;
            ADD saleIns;
            ADD returnIns;
            ADD moveIns;
            ADD returnCertifications;
        }

        NEW logisticsOutcome 'Расходы' {
            ADD transferOuts;
            ADD saleOuts;
            ADD returnOuts;
            ADD moveOuts;
            ADD invoiceWHOuts;
        }
    }

    retailClassifier {
        ADD gendersDialog;
        ADD stores;
        ADD typeLabels;
    }

    retail {
        NEW retailPriceDocument 'Документы расценки' {
            ADD userPriceChanges;
            ADD inputListRegisters;
            ADD priceChangeDocuments;
        }
        ADD POSNavigator;
        ADD retailCRMNavigator;
        NEW retailAggregations 'Сводная информация' {
            ADD salesNavigator;
            ADD sumAccountDocumentLedger;
        }
    }
    wholesaleTrade {
        NEW tradeClassifier  'Справочники' TO leftToolbar {
            ADD customers;
        }
        NEW tradeDocument 'Отгрузки' TO leftToolbar {
            ADD invoiceWHOuts;
        }
    }

    ADD machineryNavigator AFTER wholesaleTrade TO leftToolbar;

    NEW finance 'Финансы' AFTER machineryNavigator TO leftToolbar {
        ADD contractNavigator;
    }

    NEW hr 'Кадры' AFTER machineryNavigator TO leftToolbar {
        ADD employees;
    }
}
