//From WareHouse to Store (between different companies)
MODULE WHtoSTransit;

REQUIRE System,

        Stock,
        Numerator,
        Document,
        RomanDocument,
        Consignment,
        Declaration,
        WholesalePrice,
        MasterData,
        RomanLogicsModule;

PRIORITY RomanLogicsModule, Stock;

CLASS WHtoSTr 'Расход на магазин др.юрлица' : historyObject, numberedObject, consignment;
CLASS WHtoSTrDetail 'Строка расхода на магазин др.юрлица' : outAutoSkuLedger, consignmentDetail;
CLASS WHtoSTrPosted 'Закрытый расход на магазин др.юрлица' : WHtoSTr, postedObject, consignment;


skuWHtoSTrDetail 'Товар (ИД)' (WHtoSTrDetail) = DATA sku (WHtoSTrDetail)IN idGroup;
nameSkuWHtoSTrDetail 'Наименование товара' (WHtoSTrDetail) = nameSku(skuWHtoSTrDetail(WHtoSTrDetail));

@defineRBCorrespondingDocument(WHtoSTr, warehouse, 'Оптовый склад', sku, 'Расход на магазин', store, 'Магазин');

transitWarehouseWHtoSTr 'Промежуточный склад (ИД)' (WHtoSTr) = DATA warehouse (WHtoSTr) IN idGroup;
nameTransitWarehouseWHtoSTr 'Промежуточный склад' (WHtoSTr) = name(transitWarehouseWHtoSTr(WHtoSTr)) IN documentHeaderGroup;
//nameImporterWHtoSTr 'Компания' (WHtoSTr) = name(importerWarehouse(warehouseWHtoSTr(WHtoSTr)));

CONSTRAINT companyWarehouse(warehouseWHtoSTr(WHtoSTr)) == companyStore(storeWHtoSTr(WHtoSTr))
    CHECKED BY storeWHtoSTr MESSAGE 'Перемещение в рамках одного юрлица';

CONSTRAINT WHtoSTr IS WHtoSTr AND NOT companyWarehouse (transitWarehouseWHtoSTr(WHtoSTr)) == companyStore(storeWHtoSTr(WHtoSTr))
    CHECKED BY transitWarehouseWHtoSTr MESSAGE 'Склад не относится к юрлицу магазина-получателя';

quantityOutAutoSkuLedger (ledger) += quantityWHtoSTrDetail (ledger);

UOMWHtoSTrDetail 'Единица измерения (ИД)' (WHtoSTrDetail) = DATA UOM (WHtoSTrDetail) IN idGroup;
shortNameUOMWHtoSTrDetail 'Единица измерения' (WHtoSTrDetail) = shortName(UOMWHtoSTrDetail(WHtoSTrDetail));

importerPriceWHtoSTrDetail 'Цена без НДС (ед.)' (WHtoSTrDetail) = DATA NUMERIC[14,3] (WHtoSTrDetail);

wholesalePriceWHtoSTrDetail 'Оптовая цена' (WHtoSTrDetail) =  priceWholesaleArticleDateTime(articleSku(skuWHtoSTrDetail(WHtoSTrDetail)), dateTimeWHtoSTrDetail(WHtoSTrDetail));
importerPriceWHtoSTrDetail (WHtoSTrDetail) <- wholesalePriceWHtoSTrDetail(WHtoSTrDetail) WHEN CHANGED(skuWHtoSTrDetail(WHtoSTrDetail)) OR CHANGED (dateTimeWHtoSTrDetail(WHtoSTrDetail));

importerSumWHtoSTrDetail 'Стоимость без НДС' (WHtoSTrDetail) = importerPriceWHtoSTrDetail(WHtoSTrDetail) * quantityWHtoSTrDetail(WHtoSTrDetail);

importerSumWHtoSTrDetailWHtoSTr 'Стоимость без НДС' (WHtoSTr)= GROUP SUM importerSumWHtoSTrDetail(WHtoSTrDetail) BY WHtoSTrWHtoSTrDetail(WHtoSTrDetail) IN documentSumGroup;


supplierVATWHtoSTrDetail(WHtoSTrDetail) = DATA range (WHtoSTrDetail);
numberSupplierVATWHtoSTrDetail 'НДС, номер' (WHtoSTrDetail) = numberRange(supplierVATWHtoSTrDetail(WHtoSTrDetail));
valueSupplierVATWHtoSTrDetail 'НДС, %' (WHtoSTrDetail) = valueRateRangeDate
    (supplierVATWHtoSTrDetail(WHtoSTrDetail), dateWHtoSTrDetail(WHtoSTrDetail));

CONSTRAINT taxRange(supplierVATWHtoSTrDetail(WHtoSTrDetail)) != tax.taxVAT CHECKED BY supplierVATWHtoSTrDetail MESSAGE 'ошибка: Шкала должна соответствовать шкале НДС';


//VATWHtoSTrDetail 'НДС, %' (WHtoSTrDetail) = DATA NUMERIC[10,5] (WHtoSTrDetail);

sumSupplierVATWHtoSTrDetail 'Сумма НДС' (WHtoSTrDetail) = [X*Y/100](
    importerSumWHtoSTrDetail(WHtoSTrDetail), valueSupplierVATWHtoSTrDetail(WHtoSTrDetail));

sumSupplierVATWHtoSTrDetailWHtoSTr 'Сумма НДС' (WHtoSTr) = GROUP SUM sumSupplierVATWHtoSTrDetail(WHtoSTrDetail) BY WHtoSTrWHtoSTrDetail(WHtoSTrDetail) IN documentSumGroup;

sumInvoiceWHtoSTrDetail 'Стоимость с НДС' (WHtoSTrDetail) = importerSumWHtoSTrDetail(WHtoSTrDetail) (+) sumSupplierVATWHtoSTrDetail(WHtoSTrDetail);

sumInvoiceWHtoSTrDetailWHtoSTr 'Стоимость с НДС' (WHtoSTr)= GROUP SUM sumInvoiceWHtoSTrDetail(WHtoSTrDetail) BY WHtoSTrWHtoSTrDetail(WHtoSTrDetail) IN documentSumGroup;

netWeightWHtoSTrDetail 'Вес (ед.)' (WHtoSTrDetail) = netWeightSku(skuWHtoSTrDetail(WHtoSTrDetail));

sumNetWeightWHtoSTrDetail 'Общая масса груза, кг.' (WHtoSTrDetail) = netWeightWHtoSTrDetail(WHtoSTrDetail)*quantityWHtoSTrDetail(WHtoSTrDetail);

sumNetWeightWHtoSTr 'Общая масса груза, кг.' (WHtoSTr) = GROUP SUM sumNetWeightWHtoSTrDetail(WHtoSTrDetail) BY WHtoSTrWHtoSTrDetail(WHtoSTrDetail) IN documentSumGroup;

packQuantityWHtoSTrDetail 'Количество грузовых мест' (WHtoSTrDetail) = round0(quantityWHtoSTrDetail(WHtoSTrDetail)/
    UNION OVERRIDE 1 IF WHtoSTrDetail IS WHtoSTrDetail, quantityPackSku(skuWHtoSTrDetail(WHtoSTrDetail)));

packQuantityWHtoSTrDetailWHtoSTr 'Общее количество грузовых мест' (WHtoSTr) = GROUP SUM packQuantityWHtoSTrDetail(WHtoSTrDetail) BY WHtoSTrWHtoSTrDetail(WHtoSTrDetail) IN documentSumGroup;

balanceBSkuWHtoSTrDetail 'Остаток до' (WHtoSTrDetail) = balanceBSkuStockDateTime(skuWHtoSTrDetail(WHtoSTrDetail), warehouseWHtoSTrDetail(WHtoSTrDetail), dateTimeWHtoSTrDetail(WHtoSTrDetail));


quantityWHtoSTrSku (WHtoSTr, sku) = GROUP SUM quantityWHtoSTrDetail(WHtoSTrDetail)
                                          BY WHtoSTrWHtoSTrDetail(WHtoSTrDetail), skuWHtoSTrDetail(WHtoSTrDetail);

@defineAddDetailDialogBarcode(WHtoSTr, sku);

FORM WHtoSTr 'Расход на магазин др.юрлица'
    OBJECTS w = WHtoSTr FIXED PANEL
    PROPERTIES (w) numberObject, seriesObject, dateWHtoSTr, timeWHtoSTr, nameWarehouseWHtoSTr, nameTransitWarehouseWHtoSTr, nameStoreWHtoSTr,
                   quantityWHtoSTrDetailWHtoSTr, importerSumWHtoSTrDetailWHtoSTr, sumSupplierVATWHtoSTrDetailWHtoSTr,
                   sumInvoiceWHtoSTrDetailWHtoSTr, sumNetWeightWHtoSTr, packQuantityWHtoSTrDetailWHtoSTr, noteWHtoSTr

    OBJECTS d = WHtoSTrDetail
    PROPERTIES(d) indexWHtoSTrDetail, barcodeWHtoSTrDetail, nameSkuWHtoSTrDetail, nameBrandWHtoSTrDetail, sidArticleWHtoSTrDetail,
                  nameCategoryWHtoSTrDetail, sidColorWHtoSTrDetail, nameColorWHtoSTrDetail, shortNameUOMWHtoSTrDetail, balanceBSkuWHtoSTrDetail,
                  quantityWHtoSTrDetail, importerPriceWHtoSTrDetail, importerSumWHtoSTrDetail, numberSupplierVATWHtoSTrDetail, valueSupplierVATWHtoSTrDetail,
                  sumSupplierVATWHtoSTrDetail, sumInvoiceWHtoSTrDetail

    PROPERTIES(w) TODRAW d addDetailDialogSkuWHtoSTrDetailWHtoSTr, addDetailDialogBarcodeWHtoSTrDetailWHtoSTr,
                  deleteWHtoSTrDetailWHtoSTr


    PROPERTIES(d) ADDOBJ, delete
//    PROPERTIES(w) TODRAW(d) addDetailDialogTerminalWHtoSTrDetailWHtoSTr

    FILTERS inWHtoSTrWHtoSTrDetail(w, d)

    EDIT WHtoSTr OBJECT w
;

DESIGN WHtoSTr FROM DEFAULT {
    main {
        preferredSize = (1024, 768);
        ADD w.box {
            childConstraints = TO THE RIGHT;
            NEW row1 {
                childConstraints = TO THE BOTTOM;
                ADD w.documentHeaderGroup {
                    childConstraints = TO THE RIGHT;
                    ADD PROPERTY (nameWarehouseWHtoSTr);
                    ADD PROPERTY (numberObject);
                    ADD PROPERTY (seriesObject);
                    ADD PROPERTY (dateWHtoSTr);
                    ADD PROPERTY (timeWHtoSTr);
                }
                NEW case {
                childConstraints = TO THE BOTTOM;
                    title = 'Контрагент';
                    ADD PROPERTY (nameStoreWHtoSTr);
                    ADD PROPERTY (nameTransitWarehouseWHtoSTr);
                }
                ADD w.documentPrmGroup;
            }
            NEW row2 {
                ADD w.documentSumGroup {
                    childConstraints = TO THE BOTTOM;
                }
            }
        };
        ADD d.box;
        ADD functions.box;
    }
}

FORM WHtoSTrs 'Расходы на магазин др.юрлица'
    OBJECTS w = WHtoSTr
    PROPERTIES (w) READONLY objectClassName, numberObject, seriesObject, dateWHtoSTr, timeWHtoSTr, nameWarehouseWHtoSTr, nameTransitWarehouseWHtoSTr, nameStoreWHtoSTr,
                   countWHtoSTrDetailWHtoSTr, quantityWHtoSTrDetailWHtoSTr, importerSumWHtoSTrDetailWHtoSTr, sumSupplierVATWHtoSTrDetailWHtoSTr,
                   sumInvoiceWHtoSTrDetailWHtoSTr, packQuantityWHtoSTrDetailWHtoSTr, sumNetWeightWHtoSTr

    PROPERTIES (w) READONLY FORCE PANEL nameUserCreated, timeCreated, hostnameComputerCreated, nameUserClosed, timeClosed, hostnameComputerClosed


    PROPERTIES (w) ADDFORM, EDITFORM SHOWIF isDraftWHtoSTr(w), delete FORCE PANEL SHOWIF isDraftWHtoSTr(w),
                   postWHtoSTr SHOWIF isDraftWHtoSTr(w), unpostWHtoSTr SHOWIF isPostedWHtoSTr(w)

    PROPERTIES (w ) FORCE PANEL printConsignmentVerticalA, printConsignmentHorizontalA,
                   printConsignmentVerticalB, printConsignmentHorizontalB,
                   printConsignmentAttach, printConsignmentSimpleHorizontal, editConsignment,
                   printConsignmentSimpleVertical, printConsignmentSimpleAttach

    OBJECTS d = WHtoSTrDetail
    PROPERTIES(d) READONLY indexWHtoSTrDetail, barcodeWHtoSTrDetail, nameSkuWHtoSTrDetail, shortNameUOMWHtoSTrDetail,
                  quantityWHtoSTrDetail, importerPriceWHtoSTrDetail, importerSumWHtoSTrDetail, numberSupplierVATWHtoSTrDetail, valueSupplierVATWHtoSTrDetail,
                  sumSupplierVATWHtoSTrDetail, sumInvoiceWHtoSTrDetail

    FILTERS inWHtoSTrWHtoSTrDetail(w, d)
;

DESIGN WHtoSTrs FROM DEFAULT {
    ADD w.box{
        PROPERTY (delete(w)) {
            panelLocation = TOOLBAR;
            askConfirm = TRUE;
        PROPERTY (objectClassName(w)) {
            preferredCharWidth = 15;
        }
        }
    }
    ADD d.box;

    NEW footer.container {
        childConstraints = TO THE BOTTOM;

        NEW cont3 {
            childConstraints = TO THE RIGHT;
            ADD w.historyGroup {
                childConstraints = TO THE BOTTOM;
            }

            ADD w.postedGroup {
                childConstraints = TO THE BOTTOM;
            }
        }

        ADD w.printGroup {
            childConstraints = TO THE BOTTOM;
            NEW case55{
                childConstraints = TO THE RIGHT;

                NEW contOne {
                    title = 'Накладная';
                    ADD PROPERTY(editConsignment);
                }
                NEW tn{
                    childConstraints = TO THE RIGHT;
                    title = 'ТН-2';
                    ADD PROPERTY(printConsignmentSimpleVertical);
                    ADD PROPERTY(printConsignmentSimpleHorizontal);
                    ADD PROPERTY(printConsignmentSimpleAttach);
                }
            }
            NEW ttn1{
                childConstraints = TO THE RIGHT;
                title = 'ТТН-1';
                ADD PROPERTY(printConsignmentVerticalA);
                ADD PROPERTY(printConsignmentHorizontalA);
                ADD PROPERTY(printConsignmentVerticalB);
                ADD PROPERTY(printConsignmentHorizontalB);
                ADD PROPERTY(printConsignmentAttach);
            }

        }

    }
    ADD functions.box;
}

FORM WHtoSTrsDialog 'Расход на магазин др.юрлица'
    OBJECTS w = WHtoSTrPosted
    PROPERTIES (w) READONLY objectClassName, numberObject, seriesObject, dateWHtoSTr, nameWarehouseWHtoSTr, nameStoreWHtoSTr,
                   countWHtoSTrDetailWHtoSTr, quantityWHtoSTrDetailWHtoSTr, importerSumWHtoSTrDetailWHtoSTr, sumSupplierVATWHtoSTrDetailWHtoSTr,
                   sumInvoiceWHtoSTrDetailWHtoSTr
    DIALOG WHtoSTrPosted OBJECT w
;

@defineConsignment(WHtoSTr);
@implementConsignmentHeader(WHtoSTr, warehouse);

senderConsignment (consignment) += companyWarehouse(warehouseWHtoSTr(consignment));
recipientConsignment (consignment) += companyStore(storeWHtoSTr(consignment));

consignmentConsignmentDetail (consignmentDetail) += WHtoSTrWHtoSTrDetail (consignmentDetail);
skuConsignmentDetail (consignmentDetail) += skuWHtoSTrDetail (consignmentDetail);
shortNameUOMConsignmentDetail (consignmentDetail) += shortNameUOMWHtoSTrDetail (consignmentDetail);
quantityConsignmentDetail (consignmentDetail) += quantityWHtoSTrDetail (consignmentDetail);
priceConsignmentDetail (consignmentDetail) += importerPriceWHtoSTrDetail (consignmentDetail);
vatConsignmentDetail (consignmentDetail) += valueSupplierVATWHtoSTrDetail (consignmentDetail);
sumVATConsignmentDetail (consignmentDetail) += sumSupplierVATWHtoSTrDetail (consignmentDetail);
sumConsignmentDetail (consignmentDetail) += importerSumWHtoSTrDetail (consignmentDetail);
sumInvoiceConsignmentDetail (consignmentDetail) += sumInvoiceWHtoSTrDetail (consignmentDetail);
grossWeightConsignmentDetail (consignmentDetail) += sumNetWeightWHtoSTrDetail (consignmentDetail);
packQuantityConsignmentDetail (consignmentDetail) += packQuantityWHtoSTrDetail(consignmentDetail);
//currencyConsignment(consignment) += currencyWHtoSTr(consignment);
//isCustomsFlowConsignment (consignment) += consignment IS WHtoSTr;
noteConsignment(consignment) += noteWHtoSTr(consignment);

//noteConsignmentDetail

//todo: Надо наполнить свойствами накладную. (УНП...)