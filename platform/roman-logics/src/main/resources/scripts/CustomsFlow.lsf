//From CustomStote to WareHouse
MODULE CStoWH;

REQUIRE System,

        Stock,
        Numerator,
        Document,
        RomanDocument,
        Consignment,
        Declaration,
        MasterData,
        RomanLogicsModule;

CLASS CStoWH 'Расход с СВХ' : historyObject, numberedObject, consignment;
CLASS CStoWHDetail 'Строка расхода с СВХ' : outUserBalanceSkuLedger, consignmentDetail;
CLASS CStoWHPosted 'Закрытый расход с СВХ' : CStoWH, postedObject, consignment;

declarationDetailCStoWHDetail 'Партия (ИД)' = DATA declarationDetail (CStoWHDetail);
declarationCStoWHDetail 'Декларация (ИД)' (CStoWHDetail) = declarationDeclarationDetail(declarationDetailCStoWHDetail(CStoWHDetail));
batchOutUserBalanceSkuLedger (outUserBalanceSkuLedger) += declarationDetailCStoWHDetail (outUserBalanceSkuLedger);

skuCStoWHDetail 'Товар (ИД)' (CStoWHDetail) = skuDeclarationDetail (declarationDetailCStoWHDetail(CStoWHDetail));

@defineRBCorrespondingDocument(CStoWH, customStore, 'СВХ', sku, 'Расход с СВХ', warehouse, 'Оптовый склад');

quantityOutUserBalanceSkuLedger (outUserBalanceSkuLedger) += quantityCStoWHDetail (outUserBalanceSkuLedger);

netWeightCStoWHDetail 'Вес нетто (ед.)' (CStoWHDetail) = netWeightDeclarationDetail(declarationDetailCStoWHDetail(CStoWHDetail));
sumNetWeightCStoWHDetail 'Вес нетто' (CStoWHDetail) = netWeightCStoWHDetail(CStoWHDetail)*quantityCStoWHDetail(CStoWHDetail);
sumGrossWeightCStoWHDetail 'Вес брутто' (CStoWHDetail) =
    grossWeightDeclarationDetail(declarationDetailCStoWHDetail(CStoWHDetail)) * quantityCStoWHDetail(CStoWHDetail);

priceCStoWHDetail 'Цена' (CStoWHDetail) = supplierPriceDeclarationDetail (declarationDetailCStoWHDetail(CStoWHDetail));
sumCStoWHDetail 'Стоимость' (CStoWHDetail) = priceCStoWHDetail(CStoWHDetail) * quantityCStoWHDetail(CStoWHDetail);
totalSumCStoWHDetail 'Общая стоимость' (CStoWH) =
    GROUP SUM sumCStoWHDetail(CStoWHDetail) BY CStoWHCStoWHDetail(CStoWH) IN documentSumGroup PERSISTENT  MINCHARWIDTH 15 PREFCHARWIDTH 15;

quantityCStoWHBatch (customFlow, batch) = GROUP SUM quantityCStoWHDetail(CStoWHDetail)
                                                      BY CStoWHCStoWHDetail(CStoWHDetail), declarationDetailCStoWHDetail(CStoWHDetail);

// подбор строк для расхода
currentBalanceDeclarationDetail 'Текущий остаток' (declarationDetail) =
    currentBalanceBatchLedger(declarationDetail AS declarationDetail, customStoreDeclarationDetail(declarationDetail));

currentBalanceBDeclaration 'Текущий остаток по декларации' (declaration) = GROUP SUM currentBalanceDeclarationDetail (declarationDetail)
    IF declarationDeclarationDetail(declarationDetail) == declaration BY declaration;

isAvailableDeclarationCStoWH 'Декларация доступна для расхода' (declaration, CStoWH) =
    currentBalanceBDeclaration (declaration)>0 AND
    dateTimeCStoWH(CStoWH)>=dateTimeDeclaration(declaration) AND
    customStoreCStoWH(CStoWH)==customStoreDeclaration(declaration);

isCustomsDeclarationCStoWH 'Отгрузка с СВХ декларации' (declaration, CStoWH) =
    customStoreDeclaration (declaration) == customStoreCStoWH (CStoWH);

inCStoWHDeclaration (CStoWH, declaration) = GROUP SUM 1
    IF declarationCStoWHDetail(CStoWHDetail) == declaration AS declaration
        AND CStoWHCStoWHDetail (CStoWHDetail) == CStoWH AS CStoWH
    BY CStoWHCStoWHDetail(CStoWHDetail), declarationCStoWHDetail(CStoWHDetail);

declarationsCStoWH 'Декларации' (CStoWH) = GROUP CONCAT castToString255(sidDeclaration(declaration))
    IF inCStoWHDeclaration (CStoWH, declaration), ', ' BY CStoWH MINCHARWIDTH 10 PREFCHARWIDTH 10;

quantityInputDeclarationDetail 'Кол-во' = SESSION DATA NUMERIC[14,3] (declarationDetail);
isInputDeclarationDetail 'Вкл' = SESSION DATA BOOLEAN (declarationDetail);

toFillQuantityInputDeclarationDetail 'Проставить количество' (declarationDetail) = ACTION (declarationDetail) {
    SET quantityInputDeclarationDetail (declarationDetail) <- currentBalanceDeclarationDetail (declarationDetail);
}

toFillQuantityInputAllDeclarationDetails 'Проставить количество' (declaration) = ACTION (declaration) {
    FOR declarationDeclarationDetail(declarationDetail AS declarationDetail) == declaration
    DO {
        SET quantityInputDeclarationDetail (declarationDetail) <- currentBalanceDeclarationDetail (declarationDetail);
    }
}

inCStoWHInnerInvoice (CStoWH, innerInvoice) = GROUP SUM inDeclarationDetailInnerInvoice (declarationDetailCStoWHDetail(CStoWHDetail), innerInvoice)
    BY CStoWHCStoWHDetail(CStoWHDetail), innerInvoice;

stringInnerInvoice (innerInvoice) =
    [FORMULA STRING[30] 'CAST($1 AS TEXT) ||  \' от \' || CAST($2 AS TEXT) '] (
    sidInnerInvoice(innerInvoice), dateInnerInvoice(innerInvoice));

innerInvoicesCStoWH 'Инвойсы' (CStoWH) = GROUP CONCAT stringInnerInvoice(innerInvoice)
    IF inCStoWHInnerInvoice (CStoWH, innerInvoice), ', ' BY CStoWH MINCHARWIDTH 10 PREFCHARWIDTH 10;

currencyCStoWH 'Валюта (ИД)' (CStoWH) = DATA currency (CStoWH);
shortNameCurrencyCStoWH 'Валюта документа' (CStoWH) = shortNameCurrency(currencyCStoWH(CStoWH));
currencyConsignment(consignment) += currencyCStoWH(consignment);

FORM declarationDetailCStoWHInput 'Подбор строк декларации'
    OBJECTS c=CStoWH FIXED PANEL
    PROPERTIES (c) numberObject, seriesObject

    OBJECTS d=declaration
    PROPERTIES(d) READONLY objectClassName, nameCustomStoreDeclaration, sidDeclaration, currentBalanceBDeclaration
    PROPERTIES(d) toFillQuantityInputAllDeclarationDetails

    OBJECTS dd=declarationDetail
    PROPERTIES (dd) READONLY barcodeSkuDeclarationDetail, sidArticleDeclarationDetail, currentBalanceDeclarationDetail
    PROPERTIES (dd) quantityInputDeclarationDetail, toFillQuantityInputDeclarationDetail

    FILTERS isAvailableDeclarationCStoWH (d, c)

    FILTERGROUP filters1
        FILTER 'Сроки текущей декларации' 'F10' inDeclarationDeclarationDetail(d, dd) DEFAULT
    FILTERGROUP filters2
        FILTER 'Выбранные' 'F9' quantityInputDeclarationDetail(dd)
;

inputDeclarationDetailCStoWH 'Подбор строк декларации' = ACTION (CStoWH) {
    FORM declarationDetailCStoWHInput MODAL;
        IF formResult() == formResult.ok THEN {
            FOR quantityInputDeclarationDetail(declarationDetail) DO {
                ADDOBJ CStoWHDetail;
                FOR cd == addedObject() DO {
                SET CStoWHCStoWHDetail(cd) <- CStoWH AS CStoWH;
                SET declarationDetailCStoWHDetail(cd) <- declarationDetail AS declarationDetail;
                SET quantityCStoWHDetail(cd) <- quantityInputDeclarationDetail(declarationDetail);
                }
               }
            }
        SET quantityInputDeclarationDetail(declarationDetail) <- NULL;
} TOOLBAR;


FORM CStoWH 'Расход с СВХ'
    OBJECTS c = CStoWH FIXED PANEL
    PROPERTIES (c) numberObject, seriesObject, dateCStoWH, timeCStoWH, nameCustomStoreCStoWH, nameWarehouseCStoWH,
                   quantityCStoWHDetailCStoWH, totalSumCStoWHDetail,
                   inputDeclarationDetailCStoWH, deleteCStoWHDetailCStoWH, declarationsCStoWH,
                   innerInvoicesCStoWH, shortNameCurrencyCStoWH

    OBJECTS d = CStoWHDetail
    PROPERTIES(d) indexCStoWHDetail, barcodeCStoWHDetail, nameBrandCStoWHDetail, sidArticleCStoWHDetail,
                  nameCategoryCStoWHDetail, sidColorCStoWHDetail, nameColorCStoWHDetail, sumNetWeightCStoWHDetail, sumGrossWeightCStoWHDetail,
                  priceCStoWHDetail, quantityCStoWHDetail, sumCStoWHDetail
    PROPERTIES(d) ADDOBJ, delete

    FILTERS inCStoWHCStoWHDetail(c, d)

    EDIT CStoWH OBJECT c
;

DESIGN CStoWH FROM DEFAULT {
    main {
        preferredSize = (1024, 768);
    }
}

FORM CStoWHs 'Расходы с СВХ'
    OBJECTS c = CStoWH
    PROPERTIES (c) READONLY numberObject, seriesObject, dateCStoWH, timeCStoWH, nameCustomStoreCStoWH,
                            nameWarehouseCStoWH, declarationsCStoWH, innerInvoicesCStoWH, totalSumCStoWHDetail

    PROPERTIES (c) ADDFORM, EDITFORM SHOWIF isDraftCStoWH(c), delete FORCE PANEL SHOWIF isDraftCStoWH(c),
                   postCStoWH SHOWIF isDraftCStoWH(c), unpostCStoWH SHOWIF isPostedCStoWH(c)

    PROPERTIES (c)  FORCE PANEL printConsignmentVerticalA, printConsignmentHorizontalA,
                     printConsignmentVerticalB, printConsignmentHorizontalB,
                     printConsignmentSimpleHorizontal, editConsignment,
                     printConsignmentSimpleVertical//, printConsignmentSimpleAttach,  printConsignmentAttach

    OBJECTS d = CStoWHDetail
    PROPERTIES(d) READONLY indexCStoWHDetail, barcodeCStoWHDetail, nameBrandCStoWHDetail, sidArticleCStoWHDetail,
                  nameCategoryCStoWHDetail, sidColorCStoWHDetail, nameColorCStoWHDetail,sumNetWeightCStoWHDetail, sumGrossWeightCStoWHDetail,
                  priceCStoWHDetail, quantityCStoWHDetail, sumCStoWHDetail

    FILTERS inCStoWHCStoWHDetail(c, d)
;

DESIGN CStoWHs FROM DEFAULT {
    ADD c.box{
        PROPERTY (delete(c)) {
            panelLocation = TOOLBAR;
            askConfirm = TRUE;
        }
    }
    ADD d.box;
    ADD c.panel;
    ADD functions.box;
}

@defineConsignment(CStoWH);
@implementConsignmentHeader(CStoWH, customStore);

senderConsignment (consignment) += customStoreCStoWH(consignment);

consignmentConsignmentDetail (consignmentDetail) += CStoWHCStoWHDetail (consignmentDetail);
skuConsignmentDetail (consignmentDetail) += skuCStoWHDetail (consignmentDetail);
quantityConsignmentDetail (consignmentDetail) += quantityCStoWHDetail (consignmentDetail);
priceConsignmentDetail (consignmentDetail) += priceCStoWHDetail (consignmentDetail);
sumConsignmentDetail (consignmentDetail) += sumCStoWHDetail (consignmentDetail);
grossWeightConsignmentDetail (consignmentDetail) += sumGrossWeightCStoWHDetail (consignmentDetail);
