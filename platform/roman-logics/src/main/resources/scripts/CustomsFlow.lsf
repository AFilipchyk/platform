MODULE CStoWH;

REQUIRE System,

        Stock,
        Numerator,
        Document,
        RomanDocument,
        Consignment,
        Declaration,
        MasterData,
        RomanStock,
        RomanLogicsModule;

PRIORITY RomanLogicsModule, Utils, Stock, Store;

CLASS CStoWH 'Расход с СВХ' : historyObject, numberedObject, consignment;
CLASS CStoWHDetail 'Строка расхода с СВХ' : outFIFOSkuLedger, consignmentDetail;
CLASS CStoWHPosted 'Закрытый расход с СВХ' : CStoWH, postedObject, consignment;

@defineDocument(CStoWH);

@defineDocumentStock(CStoWH, customStore, 'СВХ');
@defineDocumentStock(CStoWH, warehouse, 'Оптовый склад');

@defineDocumentPosted(CStoWH);
@defineDocumentDescription (CStoWH, 'Расход с СВХ');

@defineDocumentDetailNumbered(CStoWH);

declarationDetailCStoWHDetail = DATA declarationDetail (CStoWHDetail);
skuCStoWHDetail (CStoWHDetail) = skuDeclarationDetail (declarationDetailCStoWHDetail(CStoWHDetail));
declarationCStoWHDetail (CStoWHDetail) = declarationDeclarationDetail(declarationDetailCStoWHDetail(CStoWHDetail));

@defineDocumentDetailSkuArticle (CStoWH);

@defineDocumentQuantity(CStoWH);

@defineAddDetailDialogSkuStock(CStoWH, sku, customStore, dialogSku);
@defineAddDetailDialogBarcode(CStoWH, sku);

@defineDocumentHeaderSkuQuantity(CStoWH, sku);

freightUnitCStoWHDetail (CStoWHDetail) = DATA freightUnit(CStoWHDetail) IN idGroup;
barcodeFreightUnitCStoWHDetail 'Штрих-код короба' (CStoWHDetail) = barcode(freightUnitCStoWHDetail(CStoWHDetail));
nameDestinationCStoWHDetail 'Пункт назначения' (CStoWHDetail) = nameDestinationFreightBox(freightUnitCStoWHDetail(CStoWHDetail));

netWeightCStoWHDetail 'Вес нетто (ед.)' (CStoWHDetail) = netWeightDeclarationDetail(declarationDetailCStoWHDetail(CStoWHDetail));
sumNetWeightCStoWHDetail 'Вес нетто' (CStoWHDetail) = netWeightCStoWHDetail(CStoWHDetail)*quantityCStoWHDetail(CStoWHDetail);
sumGrossWeightCStoWHDetail 'Вес брутто' (CStoWHDetail) =
    grossWeightDeclarationDetail(declarationDetailCStoWHDetail(CStoWHDetail)) * quantityCStoWHDetail(CStoWHDetail);

priceCStoWHDetail 'Цена' (CStoWHDetail) = supplierPriceDeclarationDetail (declarationDetailCStoWHDetail(CStoWHDetail));
sumCStoWHDetail 'Стоимость' (CStoWHDetail) = priceCStoWHDetail(CStoWHDetail) * quantityCStoWHDetail(CStoWHDetail);
sumCStoWHDetailCStoWH 'Общая стоимость' (CStoWH) =
    GROUP SUM sumCStoWHDetail(CStoWHDetail) BY CStoWHCStoWHDetail(CStoWHDetail) IN documentSumGroup PERSISTENT  MINCHARWIDTH 15 PREFCHARWIDTH 15;

@implementSkuLedger (CStoWH, sku, customStore);
quantityOutFIFOSkuLedger(outUserSkuLedger) += quantityCStoWHDetail (outUserSkuLedger);
limitOutFIFOSkuLedgerBatch(outUserSkuLedger, batch) += quantityCStoWHDetail(outUserSkuLedger) AND batch == declarationDetailCStoWHDetail (outUserSkuLedger);
sumOutSkuLedger(outUserSkuLedger) += sumCStoWHDetail(outUserSkuLedger);

quantityCStoWHBatch (CStoWH, batch) =
    GROUP SUM quantityCStoWHDetail(CStoWHDetail)
    BY CStoWHCStoWHDetail(CStoWHDetail), declarationDetailCStoWHDetail(CStoWHDetail);

quantitySkuCStoWH (sku, CStoWH) =
    GROUP SUM quantityCStoWHDetail (CStoWHDetail)
    BY skuCStoWHDetail(CStoWHDetail), CStoWHCStoWHDetail(CStoWHDetail);

quantitySkuFreightUnitCStoWH (sku, freightUnit, CStoWH) =
    GROUP SUM quantityCStoWHDetail (CStoWHDetail)
    BY skuCStoWHDetail(CStoWHDetail), freightUnitCStoWHDetail(CStoWHDetail), CStoWHCStoWHDetail(CStoWHDetail);


// подбор строк для расхода

expenseFreightUnitDeclarationDetail 'Расход' (freightUnit, declarationDetail) = GROUP SUM quantityCStoWHDetail(CStoWHDetail) IF isPostedCStoWHDetail(CStoWHDetail)
    BY freightUnitCStoWHDetail(CStoWHDetail), declarationDetailCStoWHDetail(CStoWHDetail);

currentBalanceFreightUnitDeclarationDetail 'Текущий остаток' (freightUnit, declarationDetail) =
    inFreightUnitDeclarationDetail(freightUnit, declarationDetail) (-)                   // приход
    quantityCertificatedFreightUnitDeclarationDetail(freightUnit, declarationDetail) (-) // на сертификацию
    expenseFreightUnitDeclarationDetail(freightUnit, declarationDetail);                 // отгрузка

currentBalanceDeclarationFreightUnit 'Текущий остаток' (declaration, freightUnit) = GROUP SUM currentBalanceFreightUnitDeclarationDetail(freightUnit, declarationDetail)
                                                                      BY declarationDeclarationDetail(declarationDetail), freightUnit;

currentBalanceDeclaration 'Текущий остаток' (declaration) = GROUP SUM currentBalanceDeclarationFreightUnit(declaration, freightUnit)
                                                                      BY declaration;


isAvailableDeclarationCStoWH 'Декларация доступна для расхода' (declaration, CStoWH) =
    declaration IS registeredDeclaration AND
    currentBalanceDeclaration (declaration)>0 AND
    dateTimeCStoWH(CStoWH)>=dateTimeRegistrationDeclaration(declaration) AND
    customStoreCStoWH(CStoWH)==customStoreDeclaration(declaration) AND
    companyWarehouse(warehouseCStoWH(CStoWH))==importerDeclaration(declaration);

isCustomsDeclarationCStoWH 'Отгрузка с СВХ декларации' (declaration, CStoWH) =
    customStoreDeclaration (declaration) == customStoreCStoWH (CStoWH);

inCStoWHDeclaration (CStoWH, declaration) = GROUP SUM 1
    IF declarationCStoWHDetail(CStoWHDetail) == declaration AS declaration
        AND CStoWHCStoWHDetail (CStoWHDetail) == CStoWH AS CStoWH
    BY CStoWHCStoWHDetail(CStoWHDetail), declarationCStoWHDetail(CStoWHDetail);

declarationsCStoWH 'Декларации' (CStoWH) = GROUP CONCAT castToString255(sidDeclaration(declaration))
    IF inCStoWHDeclaration (CStoWH, declaration), ', ' BY CStoWH MINCHARWIDTH 10 PREFCHARWIDTH 10;

quantityInputFreightUnitDeclarationDetail 'Кол-во подобрано' = SESSION DATA NUMERIC[14,3] (freightUnit, declarationDetail);

quantityInputDeclarationFreightUnit 'Кол-во подобрано' (declaration, freightUnit) = GROUP SUM quantityInputFreightUnitDeclarationDetail(freightUnit, declarationDetail)
    BY declarationDeclarationDetail(declarationDetail), freightUnit;

quantityInputDeclaration 'Кол-во подобрано' (declaration) =  GROUP SUM quantityInputDeclarationFreightUnit(declaration, freightUnit)
    BY declaration;


isInputDeclarationDetail 'Вкл' = SESSION DATA BOOLEAN (declarationDetail);

toFillQuantityInputAllDeclarationDetails 'Проставить количество' (declaration) = ACTION (declaration) {
    FOR currentBalanceDeclarationFreightUnit(declaration, freightUnit) AND currentBalanceFreightUnitDeclarationDetail(freightUnit, declarationDetail) DO {
            SET quantityInputFreightUnitDeclarationDetail (freightUnit, declarationDetail) <- currentBalanceFreightUnitDeclarationDetail (freightUnit, declarationDetail);
    }
}

toFillQuantityInputDetailDeclarationFreightUnit 'Проставить количество' (declaration, freightUnit) = ACTION (declaration, freightUnit) {
    IF currentBalanceDeclarationFreightUnit(declaration, freightUnit) THEN {
        FOR currentBalanceFreightUnitDeclarationDetail(freightUnit, declarationDetail) DO {
            SET quantityInputFreightUnitDeclarationDetail (freightUnit, declarationDetail) <- currentBalanceFreightUnitDeclarationDetail (freightUnit, declarationDetail);
        }
    }
}

inCStoWHInnerInvoice (CStoWH, innerInvoice) = GROUP SUM inDeclarationDetailInnerInvoice (declarationDetailCStoWHDetail(CStoWHDetail), innerInvoice)
    BY CStoWHCStoWHDetail(CStoWHDetail), innerInvoice;

stringInnerInvoice (innerInvoice) =
    [FORMULA STRING[30] 'CAST($1 AS TEXT) ||  \' от \' || CAST($2 AS TEXT) '] (
    sidInnerInvoice(innerInvoice), dateInnerInvoice(innerInvoice));

innerInvoicesCStoWH 'Инвойсы' (CStoWH) = GROUP CONCAT stringInnerInvoice(innerInvoice)
    IF inCStoWHInnerInvoice (CStoWH, innerInvoice), ', ' BY CStoWH MINCHARWIDTH 10 PREFCHARWIDTH 10;

currencyCStoWH 'Валюта (ИД)' (CStoWH) = DATA currency (CStoWH);
shortNameCurrencyCStoWH 'Валюта документа' (CStoWH) = shortNameCurrency(currencyCStoWH(CStoWH));

// кол-во отгруженного товара по коробам и sku
quantityCStoWHFreightUnitSku(CStoWH, freightUnit, sku) = GROUP SUM quantityCStoWHDetail(CStoWHDetail)
    BY CStoWHCStoWHDetail(CStoWHDetail), freightUnitCStoWHDetail(CStoWHDetail), skuCStoWHDetail(CStoWHDetail);

FORM declarationDetailCStoWHInput 'Подбор строк декларации'
    OBJECTS c=CStoWH FIXED PANEL
    PROPERTIES (c) numberObject, seriesObject

    OBJECTS d=declaration
    PROPERTIES(d) READONLY objectClassName, nameCustomStoreDeclaration, sidDeclaration, currentBalanceDeclaration, quantityInputDeclaration
    PROPERTIES(d) toFillQuantityInputAllDeclarationDetails

    OBJECTS f=freightUnit
    PROPERTIES READONLY barcodeFreightUnit = barcode(f), nameDestinationFreightBox(f) FORCE GRID, currentBalanceDeclarationFreightUnit(d, f)
    PROPERTIES(d, f)    quantityInputDeclarationFreightUnit READONLY, toFillQuantityInputDetailDeclarationFreightUnit

    OBJECTS dd=declarationDetail
    PROPERTIES (dd) READONLY barcodeDeclarationDetail, nameBrandDeclarationDetail, sidArticleDeclarationDetail,
                             sidColorDeclarationDetail, nameCategoryDeclarationDetail, mainCompositionDeclarationDetail,
                             nameCountryDeclarationDetail, sidCustomCategory10DeclarationDetail
    PROPERTIES (f, dd) currentBalanceFreightUnitDeclarationDetail, quantityInputFreightUnitDeclarationDetail

    FILTERS isAvailableDeclarationCStoWH (d, c),
            currentBalanceDeclarationFreightUnit(d, f),
            currentBalanceFreightUnitDeclarationDetail(f, dd)
;

DESIGN declarationDetailCStoWHInput FROM DEFAULT {
    main {
        f.box {
            title = 'Короба';
        }
    }
}

inputDeclarationDetailCStoWH 'Подбор строк декларации' = ACTION (CStoWH) {
    FORM declarationDetailCStoWHInput MODAL;
        IF formResult() == formResult.ok THEN {
            FOR quantityInputFreightUnitDeclarationDetail (freightUnit, declarationDetail) DO {
                ADDOBJ CStoWHDetail;
                FOR cd == addedObject() DO {
                SET CStoWHCStoWHDetail(cd) <- CStoWH AS CStoWH;
                SET declarationDetailCStoWHDetail(cd) <- declarationDetail AS declarationDetail;
                SET quantityCStoWHDetail(cd) <- quantityInputFreightUnitDeclarationDetail(freightUnit, declarationDetail);
                SET freightUnitCStoWHDetail(cd) <- freightUnit AS freightUnit;
                }
               }
            }
        SET quantityInputFreightUnitDeclarationDetail(freightUnit, declarationDetail) <- NULL;
} TOOLBAR;

//@defineAddDetailDialogBarcode(CStoWH, sku);
//@defineAddDetailDialogTerminal(WHtoS);

FORM CStoWH 'Расход с СВХ'
    OBJECTS c = CStoWH FIXED PANEL
    PROPERTIES (c) numberObject, seriesObject, dateCStoWH, timeCStoWH, nameCustomStoreCStoWH, nameWarehouseCStoWH,
                   quantityCStoWHDetailCStoWH, sumCStoWHDetailCStoWH,
                   inputDeclarationDetailCStoWH, deleteCStoWHDetailCStoWH, declarationsCStoWH,
                   innerInvoicesCStoWH, shortNameCurrencyCStoWH

    OBJECTS d = CStoWHDetail
    PROPERTIES(d) indexCStoWHDetail, barcodeCStoWHDetail, nameCategoryCStoWHDetail, nameBrandCStoWHDetail, sidArticleCStoWHDetail,
                  sidSizeCStoWHDetail, sidColorCStoWHDetail, nameColorCStoWHDetail, barcodeFreightUnitCStoWHDetail, nameDestinationCStoWHDetail,
                  sumNetWeightCStoWHDetail, sumGrossWeightCStoWHDetail, quantityCStoWHDetail, priceCStoWHDetail, sumCStoWHDetail
    PROPERTIES(d) delete
    PROPERTIES(c) TODRAW d deleteCStoWHDetailCStoWH

    FILTERS inCStoWHCStoWHDetail(c, d)

    EDIT CStoWH OBJECT c
;

DESIGN CStoWH FROM DEFAULT {
    main {
        preferredSize = (1024, 768);
    }
}

FORM CStoWHs 'Расходы с СВХ'
    OBJECTS c = CStoWH
    PROPERTIES (c) READONLY objectClassName, numberObject, seriesObject, dateCStoWH, timeCStoWH, nameCustomStoreCStoWH,
                            nameWarehouseCStoWH, declarationsCStoWH, innerInvoicesCStoWH, quantityCStoWHDetailCStoWH, sumCStoWHDetailCStoWH

    PROPERTIES (c) READONLY FORCE PANEL nameUserCreated, timeCreated, hostnameComputerCreated, nameUserClosed, timeClosed, hostnameComputerClosed

    PROPERTIES (c) ADDFORM, EDITFORM SHOWIF isDraftCStoWH(c), delete FORCE PANEL SHOWIF isDraftCStoWH(c),
                   postCStoWH SHOWIF isDraftCStoWH(c), unpostCStoWH SHOWIF isPostedCStoWH(c)

    PROPERTIES (c)  FORCE PANEL printConsignmentVerticalA, printConsignmentHorizontalA,
                     printConsignmentVerticalB, printConsignmentHorizontalB,
                     printConsignmentSimpleHorizontal, editConsignment,
                     printConsignmentSimpleVertical

    OBJECTS d = CStoWHDetail
    PROPERTIES(d) READONLY indexCStoWHDetail, barcodeCStoWHDetail, nameCategoryCStoWHDetail, nameBrandCStoWHDetail, sidArticleCStoWHDetail,
                  sidSizeCStoWHDetail, sidColorCStoWHDetail, nameColorCStoWHDetail, barcodeFreightUnitCStoWHDetail, nameDestinationCStoWHDetail,
                  sumNetWeightCStoWHDetail, sumGrossWeightCStoWHDetail, quantityCStoWHDetail, priceCStoWHDetail, sumCStoWHDetail

    FILTERS inCStoWHCStoWHDetail(c, d)
;

DESIGN CStoWHs FROM DEFAULT {
    ADD c.box{
        PROPERTY (delete(c)) {
            panelLocation = TOOLBAR;
            askConfirm = TRUE;
        }
    }
    ADD d.box;
    NEW footer.container {
        childConstraints = TO THE BOTTOM;

        NEW cont3 {
            childConstraints = TO THE RIGHT;
            ADD c.historyGroup {
                childConstraints = TO THE BOTTOM;
            }

            ADD c.postedGroup {
                childConstraints = TO THE BOTTOM;
            }
        }

        ADD c.printGroup {
            childConstraints = TO THE BOTTOM;
            NEW case55{
                childConstraints = TO THE RIGHT;

                NEW contOne {
                    title = 'Накладная';
                    ADD PROPERTY(editConsignment);
                }
                NEW tn{
                    childConstraints = TO THE RIGHT;
                    title = 'ТН-2';
                    ADD PROPERTY(printConsignmentSimpleVertical);
                    ADD PROPERTY(printConsignmentSimpleHorizontal);
                }
            }
            NEW ttn1{
                childConstraints = TO THE RIGHT;
                title = 'ТТН-1';
                ADD PROPERTY(printConsignmentVerticalA);
                ADD PROPERTY(printConsignmentHorizontalA);
                ADD PROPERTY(printConsignmentVerticalB);
                ADD PROPERTY(printConsignmentHorizontalB);
            }
        }
    }
    ADD functions.box;
}

@defineConsignment(CStoWH);
@implementConsignmentHeader(CStoWH, customStore);

senderConsignment (consignment) += customStoreCStoWH(consignment);
recipientConsignment (consignment) += companyWarehouse(warehouseCStoWH(consignment));

consignmentConsignmentDetail (consignmentDetail) += CStoWHCStoWHDetail (consignmentDetail);
skuConsignmentDetail (consignmentDetail) += skuCStoWHDetail (consignmentDetail);
quantityConsignmentDetail (consignmentDetail) += quantityCStoWHDetail (consignmentDetail);
priceConsignmentDetail (consignmentDetail) += priceCStoWHDetail (consignmentDetail);
sumInvoiceConsignmentDetail (consignmentDetail) += sumCStoWHDetail (consignmentDetail);
sumConsignmentDetail (consignmentDetail) += sumCStoWHDetail (consignmentDetail);
grossWeightConsignmentDetail (consignmentDetail) += sumGrossWeightCStoWHDetail (consignmentDetail);

currencyConsignment(consignment) += currencyCStoWH(consignment);
isCustomsFlowConsignment (consignment) += consignment IS CStoWH;
noteConsignment(consignment) += innerInvoicesCStoWH(consignment);

