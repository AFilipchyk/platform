MODULE RomanWriteOff;

REQUIRE System,
        Document,
        RomanDocument,
        Stock,
        RomanStock,
        RetailPrice,
        Employee,
        StorePriceTransfer,
        ConsignmentBy,
        WholesalePrice,
        WriteOff,
        StockDocument,
        MasterData,
        RomanLogicsModule;

PRIORITY Stock, RomanLogicsModule;

//----------------------------------------------- Списание товара ---------------------------------------------------//

@defineDocumentSkipSkuLedgerCustom(writeOff, writeOffDetail);
@extendFormDocumentSkipSkuLedgerCustom(userWriteOff, w, writeOff);
@extendFormDocumentSkipSkuLedgerCustomReadonly(writeOffs, w, writeOff);

// Проводим по регистру

limitOutFIFOSkuLedgerBatch(ledger, batch) += IF batchWriteOffDetail(ledger) THEN
                                                quantityWriteOffDetail(ledger) AND batch == batchWriteOffDetail(ledger)
                                             ELSE
                                                IF skipSkuLedgerWriteOffDetail(ledger) THEN
                                                    currentBalanceBatchStock(batch, stockWriteOffDetail(ledger)) AND batch IS batchB
                                                ELSE
                                                    currentBalanceABatchStock(batch, stockWriteOffDetail(ledger)) AND batch IS batchA ;

changedDataSkuLedger(ledger) += CHANGED(batchWriteOffDetail(ledger));
skipASkuLedger (ledger) += skipSkuLedgerWriteOffDetail(ledger);

//---------------------------------------- Товарный отчет ------------------------- //

sumItemOutStockDocumentLedger (ledger) += sumWriteOffDetailWriteOff(ledger);
sumContainerOutStockDocumentLedger (ledger) += 0.0 IF ledger IS writeOff;