//From Store to Store  (the same company)
MODULE SfromSDirect;

REQUIRE System,

        Stock,
        Numerator,
        Document,
        RomanDocument,
        Consignment,
        AccountDocument,
        PriceChange,
        StorePrice,
        Declaration,
        RetailPrice,
        WholesalePrice,
        MasterData,
        StoSDirect,
        RomanLogicsModule;

PRIORITY RomanLogicsModule, Stock;

CLASS SfromSDir 'Перемещение (приход) на магазин (одно юрлицо)' : historyObject, numberedObject;
CLASS SfromSDirDetail 'Строка перемещения (приход) на магазин (одно юрлицо)' : inTransferSkuLedger, priceChangeDocumentDetail, importerPriceLedger, supplierPriceLedger, retailPriceLedger, retailVATLedger, warePriceLedger;
CLASS SfromSDirPosted 'Закрытое перемещение (приход) на магазин (одно юрлицо)' : SfromSDir, postedObject;


skuSfromSDirDetail 'Товар (ИД)' (SfromSDirDetail) = DATA sku (SfromSDirDetail)IN idGroup;
nameSkuSfromSDirDetail 'Наименование товара' (SfromSDirDetail) = nameSku(skuSfromSDirDetail(SfromSDirDetail));


@defineRBCorrespondingDocumentWithRetailPrices(SfromSDir, departmentStore, 'Отдел документа', sku, 'Перемещение (приход) на магазин (одно юрлицо)', store, 'Магазин-отправитлеь');
@defineDocumentDetailPackWeightSku(SfromSDir);
@defineDocumentHeaderSkuQuantity(SfromSDir);
@defineUniqueDocumentComingByExpense(SfromSDir, StoSDir);
@defineDocumentHeaderOriginSkuQuantity (SfromSDir, StoSDir);

recipientStoreSfromSDir 'Магазин документа (ИД)' (SfromSDir) = storeDepartmentStore(departmentStoreSfromSDir(SfromSDir));
nameRecipientStoreSfromSDir 'Магазин документа' (SfromSDir)  = name(recipientStoreSfromSDir(SfromSDir)) MINCHARWIDTH 20 PREFCHARWIDTH 20;

CONSTRAINT SfromSDir IS SfromSDir AND NOT companyStore(recipientStoreSfromSDir(SfromSDir)) == companyStore(storeSfromSDir(SfromSDir))
    CHECKED BY storeSfromSDir  MESSAGE 'Перемещение (расход) не в рамках одного юрлица';


senderDepartmentStoreSfromSDir 'Отдел-отправитель(ИД)' (SfromSDir) = departmentStoreStoSDir(StoSDirSfromSDir(SfromSDir));
nameSenderDepartmentStoreSfromSDir 'Отдел-отправитель' (SfromSDir) = name(senderDepartmentStoreSfromSDir(SfromSDir));

senderStoreSfromSDir 'Магазин-отправитель (ИД)' (SfromSDir) = storeStoSDir(StoSDirSfromSDir(SfromSDir));
nameSenderStoreSfromSDir 'Магазин-отправитель' (SfromSDir)= name(senderStoreSfromSDir(SfromSDir));


CONSTRAINT SfromSDir IS SfromSDir AND NOT storeSfromSDir(SfromSDir) == senderStoreSfromSDir(SfromSDir)
    CHECKED BY senderStoreSfromSDir  MESSAGE  'ошибка: Магазин из расхода должен совпадать с магазином из прихода';


retailPriceChangeSfromSDirDetail(SfromSDirDetail) = UNION OVERRIDE priceBasePriceSetDocumentArticleDateTime(articleSku(skuSfromSDirDetail(SfromSDirDetail)), dateTimeSfromSDirDetail(SfromSDirDetail)),
                                                               priceDiscountPriceSetDocumentArticleDateTime(articleSku(skuSfromSDirDetail(SfromSDirDetail)), dateTimeSfromSDirDetail(SfromSDirDetail));

retailPriceSfromSDirDetail(SfromSDirDetail) <- retailPriceChangeSfromSDirDetail(SfromSDirDetail) WHEN CHANGED (dateTimeSfromSDirDetail(SfromSDirDetail))
                                                                                           OR CHANGED (skuSfromSDirDetail(SfromSDirDetail));

toFillSfromSDirDetailsSfromSDir 'Заполнить документ из расхода' =  ACTION (SfromSDir) {
    FOR SfromSDirStoSDir(StoSDirStoSDirDetail(StoSDirDetail)) == SfromSDir DO {
        ADDOBJ SfromSDirDetail;
        FOR d == addedObject() DO {
            SET SfromSDirSfromSDirDetail(d) <- SfromSDir AS SfromSDir;
            SET quantitySfromSDirDetail (d) <- quantityStoSDirDetail(StoSDirDetail);
            SET skuSfromSDirDetail (d) <- skuStoSDirDetail(StoSDirDetail);
            SET UOMSfromSDirDetail (d) <- UOMStoSDirDetail(StoSDirDetail);
        };
    };
} CONFIRM;


FORM SfromSDir 'Перемещение (приход) на магазин (одно юрлицо)'
    OBJECTS s = SfromSDir FIXED PANEL
    PROPERTIES (s) numberObject, seriesObject, dateSfromSDir, timeSfromSDir, nameDepartmentStoreSfromSDir, nameSenderDepartmentStoreSfromSDir, nameSenderStoreSfromSDir,
                   quantitySfromSDirDetailSfromSDir, invoiceVATSumSfromSDirDetailSfromSDir, invoiceSumSfromSDirDetailSfromSDir, retailSumSfromSDirDetailSfromSDir, noteSfromSDir,
                   toFillSfromSDirDetailsSfromSDir

    OBJECTS d = SfromSDirDetail
    PROPERTIES(d) indexSfromSDirDetail, barcodeSfromSDirDetail, nameSkuSfromSDirDetail, nameBrandSfromSDirDetail, sidArticleSfromSDirDetail,
                  nameCategorySfromSDirDetail, sidColorSfromSDirDetail, nameColorSfromSDirDetail, shortNameUOMSfromSDirDetail, balanceBSkuSfromSDirDetail,
                  quantitySfromSDirDetail, importerPriceSfromSDirDetail, supplierPriceSfromSDirDetail,
                  numberSupplierVATSfromSDirDetail, valueSupplierVATSfromSDirDetail,
                  supplierVATISumSfromSDirDetail, invoiceISumSfromSDirDetail,
                  numberRetailVATSfromSDirDetail, valueRetailVATSfromSDirDetail,
                  retailPriceSfromSDirDetail

    PROPERTIES(s) TODRAW d addDetailDialogBarcodeSfromSDirDetailSfromSDir, addDetailDialogSkuSfromSDirDetailSfromSDir, deleteSfromSDirDetailSfromSDir

    PROPERTIES(d) ADDOBJ, delete

    OBJECTS i=sku
    PROPERTIES(i) nameSku
    PROPERTIES(i,s) quantitySfromSDirDetailSkuSfromSDir, quantityOriginSfromSDirDetailSkuSfromSDir, diffQuantitySfromSDirDetailSkuSfromSDir
    FILTERS inSfromSDirSfromSDirDetail(s, d)

    FILTERS quantityOriginSfromSDirDetailSkuSfromSDir(i,s) OR quantitySfromSDirDetailSkuSfromSDir(i, s)

    FILTERGROUP filtersDiff
        FILTER 'Показать отличающиеся' 'F10' diffQuantitySfromSDirDetailSkuSfromSDir(i,s) !=0

    EDIT SfromSDir OBJECT s
;

DESIGN SfromSDir FROM DEFAULT {
    main {
        preferredSize = (1024, 768);
        ADD s.box {
            childConstraints = TO THE RIGHT;
            NEW row1 {
                childConstraints = TO THE BOTTOM;
                ADD s.documentHeaderGroup {
                    childConstraints = TO THE RIGHT;
                    ADD PROPERTY (nameDepartmentStoreSfromSDir);
                    ADD PROPERTY (numberObject);
                    ADD PROPERTY (seriesObject);
                    ADD PROPERTY (dateSfromSDir);
                    ADD PROPERTY (timeSfromSDir);
                }
                NEW row11 {
                    childConstraints = TO THE RIGHT;
                    title = 'Контрагент';
                    ADD PROPERTY (nameSenderDepartmentStoreSfromSDir);
                    ADD PROPERTY (nameSenderStoreSfromSDir);
                }

                NEW row12 {
                    childConstraints = TO THE RIGHT;
                    ADD s.documentPrmGroup;
                    NEW row121{
                        childConstraints = TO THE RIGHT;
                        title = 'Расход';
                        ADD PROPERTY (toFillSfromSDirDetailsSfromSDir);
                    }
                }
            }
            NEW row2 {
                ADD s.documentSumGroup {
                    childConstraints = TO THE BOTTOM;
                }
            }
        };
        NEW row3{
            type = TABBED;
            ADD d.box;
            ADD i.box;
        }
        ADD functions.box;
    }
}

FORM SfromSDirs 'Перемещения (приход) на магазин (одно юрлицо)'
    OBJECTS s = SfromSDir
    PROPERTIES (s) READONLY objectClassName, numberObject, seriesObject, dateSfromSDir, timeSfromSDir, nameDepartmentStoreSfromSDir, nameSenderStoreSfromSDir,
                   countSfromSDirDetailSfromSDir, quantitySfromSDirDetailSfromSDir, invoiceVATSumSfromSDirDetailSfromSDir, invoiceSumSfromSDirDetailSfromSDir,
                   retailSumSfromSDirDetailSfromSDir

    PROPERTIES (s) READONLY FORCE PANEL nameUserCreated, timeCreated, hostnameComputerCreated, nameUserClosed, timeClosed, hostnameComputerClosed

    PROPERTIES (s) ADDFORM, EDITFORM SHOWIF isDraftSfromSDir(s), delete FORCE PANEL SHOWIF isDraftSfromSDir(s),
                   postSfromSDir SHOWIF isDraftSfromSDir(s), unpostSfromSDir SHOWIF isPostedSfromSDir(s)

    OBJECTS d = SfromSDirDetail
    PROPERTIES(d) READONLY  indexSfromSDirDetail, barcodeSfromSDirDetail, nameSkuSfromSDirDetail, shortNameUOMSfromSDirDetail, balanceBSkuSfromSDirDetail,
                  quantitySfromSDirDetail, importerPriceSfromSDirDetail, supplierPriceSfromSDirDetail,
                  numberSupplierVATSfromSDirDetail, valueSupplierVATSfromSDirDetail,
                  supplierVATISumSfromSDirDetail, invoiceISumSfromSDirDetail,
                  numberRetailVATSfromSDirDetail, valueRetailVATSfromSDirDetail,
                  retailPriceSfromSDirDetail

    FILTERS inSfromSDirSfromSDirDetail(s, d)
;

DESIGN SfromSDirs FROM DEFAULT {
    ADD s.box{
        PROPERTY (delete(s)) {
            panelLocation = TOOLBAR;
            askConfirm = TRUE;
        PROPERTY (objectClassName(s)) {
            preferredCharWidth = 15;
        }
        }
    }
    ADD d.box;

    NEW footer.container {
        childConstraints = TO THE BOTTOM;

        NEW cont3 {
            childConstraints = TO THE RIGHT;
            ADD s.historyGroup {
                childConstraints = TO THE BOTTOM;
            }

            ADD s.postedGroup {
                childConstraints = TO THE BOTTOM;
            }
        }
    }
    ADD functions.box;
}
