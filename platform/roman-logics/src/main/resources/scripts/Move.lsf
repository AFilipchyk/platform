MODULE Move;

REQUIRE System,
        Document,
        RomanDocument,
        Stock,
        RomanStock,
        DocumentTransfer,
        ListRegister,
        RetailPrice,
        RomanLogicsModule;

PRIORITY Stock, RomanLogicsModule;

// ---------------------------------------- Перемещение ------------------------------------ //

CLASS moveOut 'Перемещение товаров' : historizable, numeratedObject, innerDocument;
CLASS moveOutPosted 'Проведенное перемещение товаров' : moveOut, postedObject;
CLASS moveOutDetail 'Строка перемещения товаров';

@defineNumeratedObjectDefault(moveOut, 'Нумератор для перемещения товаров', 'ПБ');

@defineDocumentTransferOut(move, 'Перемещение товаров', sku, stock);
@defineDocumentFormTransferOut(move, 'Перемещение товаров');

@defineDocumentCurrency(moveOut);
@deriveDocumentCurrency(moveOut, stock);

@defineDocumentDetailSkuArticle(moveOut);
@extendFormDocumentDetailSkuArticle(moveOut, d, moveOut);
@extendFormDocumentDetailSkuArticleReadonly(moveOuts, d, moveOut);

EXTEND FORM moveOut
    PROPERTIES (t) nameNumeratorObject
;
EXTEND DESIGN moveOut {
    t.documentHeaderGroup {
        ADD PROPERTY (nameNumeratorObject) BEFORE PROPERTY(numberObject);
    }
}

// Проводим по регистру
@implementSkuLedgerOutFIFO(moveOutDetail, sku, stock);
quantityOutFIFOSkuLedger (ledger) += quantityMoveOutDetail (ledger);
@implementSkuLedgerOutFIFOBalanceB(moveOutDetail, sku, stock);
sumOutSkuLedger(ledger) += costSumSkuLedger(ledger) IF ledger IS moveOutDetail;
skipASkuLedger (ledger) += ledger IS moveOutDetail;


EXTEND FORM moveOut
    PROPERTIES(t) nameCurrencyMoveOut
;
EXTEND FORM moveOuts
    PROPERTIES(t) READONLY nameCurrencyMoveOut
;
// ---------------------------------------- Поступление ------------------------------------ //

CLASS moveIn 'Поступление товаров' : historizable;
CLASS moveInDetail 'Строка поступления товаров';

@defineDocumentTransferIn(move, 'Поступление товаров', sku, stock);
@defineDocumentFormTransferIn(move, 'Поступление товаров');

@defineDocumentDetailSkuArticle(moveIn);
@extendFormDocumentDetailSkuArticleReadonly(moveIns, d, moveIn);

costMoveInBatch(moveIn, batch) = GROUP SUM costSkuLedgerBatch(ledger, batch) BY moveInMoveInDetail(ledger), batch PERSISTENT;

@implementSkuLedgerInLIFO(moveInDetail, sku, stock);
quantityInLIFOSkuLedger (ledger) += quantityMoveInDetail(ledger);
limitInLIFOSkuLedgerBatch (ledger, batch) += costSkuLedgerBatch(moveOutDetailMoveInDetail(ledger), batch);
sumInSkuLedger(ledger) += costSumSkuLedger(ledger) IF ledger IS moveInDetail;
skipASkuLedger (ledger) += ledger IS moveInDetail;

nameCurrencyMoveIn 'Валюта' (moveIn) = nameCurrencyMoveOut(moveOutMoveIn(moveIn)) MINCHARWIDTH 10 PREFCHARWIDTH 10 MAXCHARWIDTH 15;

// ---------------------------------------- Приемка ------------------------------------ //

CLASS moveRec 'Приемка товаров (перемещение)' : historizable;
CLASS moveRecPosted 'Проведенная приемка товаров (перемещение)' : moveRec, postedObject;

CLASS moveRecDetail 'Строка приемки товаров (перемещение)';

@defineDocumentTransferRec(move, 'Приемка товаров (перемещение)', sku, stock);
@defineDocumentFormTransferRec(move, 'Приемка товаров (перемещение)');

@defineDocumentDetailSkuArticle(moveRec);
@extendFormDocumentDetailSkuArticle(moveRec, d, moveRec);

@extendFormDocumentDetailSkuArticleReadonly(moveIns, r, moveRec);

// ---------------------------------------- Акт расхождений ------------------------------------ //
CLASS moveDiff 'Акт расхождений приемки товаров (перемещение)' : historizable;

CLASS ABSTRACT moveDiffDetail 'Строка расхождений акта приемки товаров (перемещение)';
CLASS moveDiffEDetail 'Строка расхождений акта приемки товаров (перемещение, излишек)' : moveDiffDetail;
CLASS moveDiffSDetail 'Строка расхождений акта приемки товаров (перемещение, недостача)' : moveDiffDetail;

@defineDocumentTransferDiff(move, 'Акт расхождений приемки товаров (перемещение)', sku, stock);
@defineDocumentFormTransferDiff(move);

@defineDocumentDetailSkuArticle(moveDiff);
@extendFormDocumentDetailSkuArticleReadonlyQuantity(moveIns, f, moveDiff, signedQuantityMoveDiffDetail);

costMoveDiffEDetail(detail) = 0.0 IF detail IS moveDiffEDetail;

EXTEND CLASS moveDiffEDetail : batchB;
@implementBatchCustom(moveDiffEDetail, sku, stock, cost);
quantityBatch (batch) += quantityMoveDiffEDetail(batch);
skipASkuLedger (ledger) += ledger IS moveDiffEDetail;

@implementSkuLedgerOutFIFO(moveDiffSDetail, sku, stock);
quantityOutFIFOSkuLedger (ledger) += quantityMoveDiffSDetail(ledger);
limitOutFIFOSkuLedgerBatch (ledger, batch) += costMoveInBatch(moveInMoveDiffSDetail(ledger), batch);
orderOutFIFOSkuLedgerBatch (ledger, batch) += orderBBatch(batch) IF ledger IS moveDiffSDetail;
sumOutSkuLedger(ledger) += costSumSkuLedger(ledger) IF ledger IS moveDiffSDetail;
skipASkuLedger (ledger) += ledger IS moveDiffSDetail;

EXTEND FORM moveIns
    PROPERTIES(t) READONLY nameCurrencyMoveIn
;