//From Store to Store  
MODULE SfromS;

REQUIRE System,

        Stock,
        Numerator,
        Document,
        RomanDocument,
        Consignment,
        AccountDocument,
        PriceChange,
        StorePrice,
        Declaration,
        RetailPrice,
        WholesalePrice,
        MasterData,
        StoS,
        RomanLogicsModule;

PRIORITY RomanLogicsModule, Stock;

CLASS SfromS 'Приход на магазин из магазина' : historyObject, numberedObject;
CLASS SfromSDetail 'Строка прихода на магазин из магазина' : inTransferSkuLedger, priceChangeDocumentDetail, importerPriceLedger, supplierPriceLedger, retailPriceLedger, retailVATLedger, warePriceLedger;
CLASS SfromSPosted 'Закрытый приход на магазин из магазина' : SfromS, postedObject;


skuSfromSDetail 'Товар (ИД)' (SfromSDetail) = DATA sku (SfromSDetail)IN idGroup;
nameSkuSfromSDetail 'Наименование товара' (SfromSDetail) = nameSku(skuSfromSDetail(SfromSDetail));


@defineRBCorrespondingDocumentWithRetailPrices(SfromS, departmentStore, 'Отдел документа', sku, 'Приход на магазин из магазина', store, 'Магазин-отправитлеь');
@defineDocumentDetailPackWeightSku(SfromS);
@defineDocumentHeaderSkuQuantity(SfromS);
@defineUniqueDocumentComingByExpense(SfromS, StoS);
@defineDocumentHeaderOriginSkuQuantity (SfromS, StoS);

recipientStoreSfromS 'Магазин документа (ИД)' (SfromS) = storeDepartmentStore(departmentStoreSfromS(SfromS));
nameRecipientStoreSfromS 'Магазин документа' (SfromS)  = name(recipientStoreSfromS(SfromS)) MINCHARWIDTH 20 PREFCHARWIDTH 20;

CONSTRAINT SfromS IS SfromS AND NOT companyStore(recipientStoreSfromS(SfromS)) == companyStore(corrStoreSfromS(SfromS))
    CHECKED BY corrStoreSfromS  MESSAGE 'Перемещение (расход) не в рамках одного юрлица';

initValueNumberObject (SfromS) += [PREV(numberObject(StoS))](StoSSfromS(SfromS));
initValueSeriesObject (SfromS) += [PREV(seriesObject(StoS))](StoSSfromS(SfromS));

initWhenNumberedObject(SfromS) += CHANGED(StoSSfromS(SfromS));


senderDepartmentStoreSfromS 'Отдел-отправитель(ИД)' (SfromS) = departmentStoreStoS(StoSSfromS(SfromS));
nameSenderDepartmentStoreSfromS 'Отдел-отправитель' (SfromS) = name(senderDepartmentStoreSfromS(SfromS));

senderStoreSfromS 'Магазин-отправитель (ИД)' (SfromS) = senderStoreStoS(StoSSfromS(SfromS));
nameSenderStoreSfromS 'Магазин-отправитель' (SfromS)= name(senderStoreSfromS(SfromS));


CONSTRAINT SfromS IS SfromS AND NOT corrStoreSfromS(SfromS) == senderStoreSfromS(SfromS)
    CHECKED BY senderStoreSfromS  MESSAGE  'ошибка: Магазин из расхода должен совпадать с магазином из прихода';


retailPriceChangeSfromSDetail(SfromSDetail) = UNION OVERRIDE priceBasePriceSetDocumentArticleDateTime(articleSku(skuSfromSDetail(SfromSDetail)), dateTimeSfromSDetail(SfromSDetail)),
                                                               priceDiscountPriceSetDocumentArticleDateTime(articleSku(skuSfromSDetail(SfromSDetail)), dateTimeSfromSDetail(SfromSDetail));

retailPriceSfromSDetail(SfromSDetail) <- retailPriceChangeSfromSDetail(SfromSDetail) WHEN CHANGED (dateTimeSfromSDetail(SfromSDetail))
                                                                                           OR CHANGED (skuSfromSDetail(SfromSDetail));

toFillSfromSDetailsSfromS 'Заполнить документ из расхода' =  ACTION (SfromS) {
    FOR SfromSStoS(StoSStoSDetail(StoSDetail)) == SfromS DO {
        ADDOBJ SfromSDetail;
        FOR d == addedObject() DO {
            SET SfromSSfromSDetail(d) <- SfromS AS SfromS;
            SET quantitySfromSDetail (d) <- quantityStoSDetail(StoSDetail);
            SET skuSfromSDetail (d) <- skuStoSDetail(StoSDetail);
            SET UOMSfromSDetail (d) <- UOMStoSDetail(StoSDetail);
        };
    };
} CONFIRM;


FORM SfromS 'Приход на магазин из магазина'
    OBJECTS s = SfromS FIXED PANEL
    PROPERTIES (s) numberObject, seriesObject, dateSfromS, timeSfromS, nameDepartmentStoreSfromS, nameSenderDepartmentStoreSfromS, nameSenderStoreSfromS,
                   quantitySfromSDetailSfromS, invoiceVATSumSfromSDetailSfromS, invoiceSumSfromSDetailSfromS, retailSumSfromSDetailSfromS, noteSfromS,
                   toFillSfromSDetailsSfromS

    OBJECTS d = SfromSDetail
    PROPERTIES(d) indexSfromSDetail, barcodeSfromSDetail, nameSkuSfromSDetail, nameBrandSfromSDetail, sidArticleSfromSDetail,
                  nameCategorySfromSDetail, sidColorSfromSDetail, nameColorSfromSDetail, shortNameUOMSfromSDetail, balanceBSkuSfromSDetail,
                  quantitySfromSDetail, importerPriceSfromSDetail, supplierPriceSfromSDetail,
                  numberSupplierVATSfromSDetail, valueSupplierVATSfromSDetail,
                  supplierVATISumSfromSDetail, invoiceISumSfromSDetail,
                  numberRetailVATSfromSDetail, valueRetailVATSfromSDetail,
                  retailPriceSfromSDetail

    PROPERTIES(s) TODRAW d addDetailDialogBarcodeSfromSDetailSfromS, addDetailDialogSkuSfromSDetailSfromS, deleteSfromSDetailSfromS

    PROPERTIES(d) ADDOBJ, delete

    OBJECTS i=sku
    PROPERTIES(i) nameSku
    PROPERTIES(i,s) quantitySfromSDetailSkuSfromS, quantityOriginSfromSDetailSkuSfromS, diffQuantitySfromSDetailSkuSfromS
    FILTERS inSfromSSfromSDetail(s, d)

    FILTERS quantityOriginSfromSDetailSkuSfromS(i,s) OR quantitySfromSDetailSkuSfromS(i, s)

    FILTERGROUP filtersDiff
        FILTER 'Показать отличающиеся' 'F10' diffQuantitySfromSDetailSkuSfromS(i,s) !=0

    EDIT SfromS OBJECT s
;

DESIGN SfromS FROM DEFAULT {
    main {
        preferredSize = (1024, 768);
        ADD s.box {
            childConstraints = TO THE RIGHT;
            NEW row1 {
                childConstraints = TO THE BOTTOM;
                ADD s.documentHeaderGroup {
                    childConstraints = TO THE RIGHT;
                    ADD PROPERTY (nameDepartmentStoreSfromS);
                    ADD PROPERTY (numberObject);
                    ADD PROPERTY (seriesObject);
                    ADD PROPERTY (dateSfromS);
                    ADD PROPERTY (timeSfromS);
                }
                NEW row11 {
                    childConstraints = TO THE RIGHT;
                    title = 'Контрагент';
                    ADD PROPERTY (nameSenderDepartmentStoreSfromS);
                    ADD PROPERTY (nameSenderStoreSfromS);
                }

                NEW row12 {
                    childConstraints = TO THE RIGHT;
                    ADD s.documentPrmGroup;
                    NEW row121{
                        childConstraints = TO THE RIGHT;
                        title = 'Расход';
                        ADD PROPERTY (toFillSfromSDetailsSfromS);
                    }
                }
            }
            NEW row2 {
                ADD s.documentSumGroup {
                    childConstraints = TO THE BOTTOM;
                }
            }
        };
        NEW row3{
            type = TABBED;
            ADD d.box;
            ADD i.box;
        }
        ADD functions.box;
    }
}

FORM SfromSs 'Приходы на магазин из магазина'
    OBJECTS s = SfromS
    PROPERTIES (s) READONLY objectClassName, numberObject, seriesObject, dateSfromS, timeSfromS, nameDepartmentStoreSfromS, nameSenderStoreSfromS,
                   countSfromSDetailSfromS, quantitySfromSDetailSfromS, invoiceVATSumSfromSDetailSfromS, invoiceSumSfromSDetailSfromS,
                   retailSumSfromSDetailSfromS

    PROPERTIES (s) READONLY FORCE PANEL nameUserCreated, timeCreated, hostnameComputerCreated, nameUserClosed, timeClosed, hostnameComputerClosed

    PROPERTIES (s) ADDFORM, EDITFORM SHOWIF isDraftSfromS(s), delete FORCE PANEL SHOWIF isDraftSfromS(s),
                   postSfromS SHOWIF isDraftSfromS(s), unpostSfromS SHOWIF isPostedSfromS(s)

    OBJECTS d = SfromSDetail
    PROPERTIES(d) READONLY  indexSfromSDetail, barcodeSfromSDetail, nameSkuSfromSDetail, shortNameUOMSfromSDetail, balanceBSkuSfromSDetail,
                  quantitySfromSDetail, importerPriceSfromSDetail, supplierPriceSfromSDetail,
                  numberSupplierVATSfromSDetail, valueSupplierVATSfromSDetail,
                  supplierVATISumSfromSDetail, invoiceISumSfromSDetail,
                  numberRetailVATSfromSDetail, valueRetailVATSfromSDetail,
                  retailPriceSfromSDetail

    FILTERS inSfromSSfromSDetail(s, d)
;

DESIGN SfromSs FROM DEFAULT {
    ADD s.box{
        PROPERTY (delete(s)) {
            panelLocation = TOOLBAR;
            askConfirm = TRUE;
        PROPERTY (objectClassName(s)) {
            preferredCharWidth = 15;
        }
        }
    }
    ADD d.box;

    NEW footer.container {
        childConstraints = TO THE BOTTOM;

        NEW cont3 {
            childConstraints = TO THE RIGHT;
            ADD s.historyGroup {
                childConstraints = TO THE BOTTOM;
            }

            ADD s.postedGroup {
                childConstraints = TO THE BOTTOM;
            }
        }
    }
    ADD functions.box;
}
