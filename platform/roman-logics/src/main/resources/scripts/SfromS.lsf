//From Store to Store  
MODULE SfromS;

REQUIRE System,

        Stock,
        Numerator,
        Document,
        RomanDocument,
        Consignment,
        AccountDocument,
        PriceChange,
        StorePrice,
        Declaration,
        RetailPrice,
        WholesalePrice,
        MasterData,
        StoS,
        RomanLogicsModule;

PRIORITY RomanLogicsModule, Stock;

CLASS SfromS 'Приход на магазин из магазина' : historyObject, numberedObject;
CLASS SfromSDetail 'Строка прихода на магазин из магазина' : inTransferSkuLedger, priceChangeDocumentDetail, importerPriceLedger, supplierPriceLedger, retailPriceLedger, retailVATLedger, warePriceLedger;
CLASS SfromSPosted 'Закрытый приход на магазин из магазина' : SfromS, postedObject;


skuSfromSDetail 'Товар (ИД)' (SfromSDetail) = DATA sku (SfromSDetail)IN idGroup;
nameSkuSfromSDetail 'Наименование товара' (SfromSDetail) = nameSku(skuSfromSDetail(SfromSDetail));

@defineRBCorrespondingDocumentWithRetailPrices(SfromS, departmentStore, 'Отдел документа', sku, 'Приход на магазин из магазина', store, 'Магазин-отправитлеь');
//@implementBaseSkuDepartmentStoreLedger(SfromS, sku);
@defineDocumentDetailPackWeightSku(SfromS);
@defineDocumentHeaderSkuQuantity(SfromS);
@defineUniqueDocumentComingByExpense(SfromS, StoS);
@defineDocumentHeaderOriginSkuQuantity (SfromS, StoS);

identitySfromS (SfromS) = storeDepartmentStore(departmentStoreSfromS(SfromS)) == corrStoreStoS(StoSSfromS(SfromS)) AND corrStoreSfromS(SfromS) == storeDepartmentStore(departmentStoreStoS(StoSSfromS(SfromS)));

CONSTRAINT SfromS IS SfromS AND NOT identitySfromS(SfromS) CHECKED BY StoSSfromS MESSAGE  'Магазин-отправитель и Магазин-получатель из расхода и приход должны совпадать';

initValueNumberObject (SfromS) += [PREV(numberObject(StoS))](StoSSfromS(SfromS));
initValueSeriesObject (SfromS) += [PREV(seriesObject(StoS))](StoSSfromS(SfromS));

initWhenNumberedObject(SfromS) += CHANGED(StoSSfromS(SfromS));

numberSfromS 'Номер док-та расхода' (SfromS) = numberObject(StoSSfromS(SfromS));

documentFlowSfromS 'Документ расхода' (SfromS) =
    [FORMULA STRING[500] 'CAST($1 AS TEXT) ||  \' от \' || CAST($2 AS TEXT) || \', \' || CAST($3 AS TEXT)'] (
    seriesNumberObject(StoSSfromS(SfromS)), dateStoS(StoSSfromS(SfromS)), name(departmentStoreStoS(StoSSfromS(SfromS)))) MINCHARWIDTH 30 PREFCHARWIDTH 30;

toFillSfromSDetailsSfromS 'Заполнить документ из расхода' =  ACTION (SfromS) {
    FOR SfromSStoS(StoSStoSDetail(StoSDetail)) == SfromS DO {
        ADDOBJ SfromSDetail;
        FOR d == addedObject() DO {
            SET SfromSSfromSDetail(d) <- SfromS AS SfromS;
            SET quantitySfromSDetail (d) <- quantityStoSDetail(StoSDetail);
            SET skuSfromSDetail (d) <- skuStoSDetail(StoSDetail);
            SET UOMSfromSDetail (d) <- UOMStoSDetail(StoSDetail);
            SET importerPriceSfromSDetail (d) <- importerPriceStoSDetail(StoSDetail);
            SET supplierPriceSfromSDetail (d) <- supplierPriceStoSDetail(StoSDetail);
            SET supplierVATSfromSDetail (d) <- supplierVATStoSDetail(StoSDetail);
        };
    };
} CONFIRM;


retailPriceChangeSfromSDetail(SfromSDetail) = UNION OVERRIDE priceBasePriceSetDocumentArticleDateTime(articleSku(skuSfromSDetail(SfromSDetail)), dateTimeSfromSDetail(SfromSDetail)),
                                                               priceDiscountPriceSetDocumentArticleDateTime(articleSku(skuSfromSDetail(SfromSDetail)), dateTimeSfromSDetail(SfromSDetail));

retailPriceSfromSDetail(SfromSDetail) <- retailPriceChangeSfromSDetail(SfromSDetail) WHEN CHANGED (dateTimeSfromSDetail(SfromSDetail))
                                                                                           OR CHANGED (skuSfromSDetail(SfromSDetail));


FORM SfromS 'Приход на магазин из магазина'
    OBJECTS s = SfromS FIXED PANEL
    PROPERTIES (s) numberObject, seriesObject, dateSfromS, timeSfromS, numberSfromS, nameDepartmentStoreSfromS, nameCorrStoreSfromS,
                   quantitySfromSDetailSfromS, supplierSumSfromSDetailSfromS, invoiceVATSumSfromSDetailSfromS,
                   invoiceSumSfromSDetailSfromS, retailSumSfromSDetailSfromS, noteSfromS, toFillSfromSDetailsSfromS

    OBJECTS d = SfromSDetail
    PROPERTIES(d) indexSfromSDetail, barcodeSfromSDetail, nameSkuSfromSDetail, shortNameUOMSfromSDetail, sidSizeSfromSDetail, nameBrandSfromSDetail,
                  sidArticleSfromSDetail, nameCategorySfromSDetail, sidColorSfromSDetail, nameColorSfromSDetail, balanceBSkuSfromSDetail,
                  quantitySfromSDetail, importerPriceSfromSDetail, supplierPriceSfromSDetail, supplierSumSfromSDetail, numberSupplierVATSfromSDetail,
                  valueSupplierVATSfromSDetail, supplierVATISumSfromSDetail, invoiceSumSfromSDetail, numberRetailVATSfromSDetail,
                  valueRetailVATSfromSDetail, retailPriceSfromSDetail, retailSumSfromSDetail, calcRetailMarkupSfromSDetail

    PROPERTIES(s) TODRAW d addDetailDialogBarcodeSfromSDetailSfromS, addDetailDialogSkuSfromSDetailSfromS, deleteSfromSDetailSfromS

    PROPERTIES(d) ADDOBJ, delete

    OBJECTS i=sku
    PROPERTIES(i) nameSku
    PROPERTIES(i,s) quantitySfromSDetailSkuSfromS, quantityOriginSfromSDetailSkuSfromS, diffQuantitySfromSDetailSkuSfromS
    FILTERS inSfromSSfromSDetail(s, d)

    FILTERS quantityOriginSfromSDetailSkuSfromS(i,s) OR quantitySfromSDetailSkuSfromS(i, s)

    FILTERGROUP filtersDiff
        FILTER 'Показать отличающиеся' 'F10' diffQuantitySfromSDetailSkuSfromS(i,s) !=0

    EDIT SfromS OBJECT s
;


DESIGN SfromS FROM DEFAULT {
    main {
        preferredSize = (1024, 768);
        ADD s.box {
            childConstraints = TO THE RIGHT;
            NEW row1 {
                childConstraints = TO THE BOTTOM;
                ADD s.documentHeaderGroup {
                    childConstraints = TO THE RIGHT;
                    ADD PROPERTY (nameDepartmentStoreSfromS);
                    ADD PROPERTY (numberObject);
                    ADD PROPERTY (seriesObject);
                    ADD PROPERTY (dateSfromS);
                    ADD PROPERTY (timeSfromS);
                }
                NEW row11 {
                childConstraints = TO THE RIGHT;
                    NEW row111 {
                        title = 'Контрагент-поставщик';
                        ADD PROPERTY (nameCorrStoreSfromS);
                    }
                    NEW row112{
                        title = 'Расход';
                        ADD PROPERTY (numberSfromS);
                        ADD PROPERTY (toFillSfromSDetailsSfromS);
                    }
                }
                ADD s.documentPrmGroup;
            }
            NEW row2 {
                ADD s.documentSumGroup {
                    childConstraints = TO THE BOTTOM;
                }
            }
        }
        NEW row3 {
            type = TABBED;
            ADD d.box;
            ADD i.box;
        }
        ADD functions.box;
    }
}

FORM SfromSs 'Приходы на магазин из магазина'
    OBJECTS s = SfromS

    PROPERTIES (s) READONLY objectClassName, numberObject, seriesObject, dateSfromS, timeSfromS, nameDepartmentStoreSfromS, nameCorrStoreSfromS,
                   documentFlowSfromS, countSfromSDetailSfromS, quantitySfromSDetailSfromS, supplierSumSfromSDetailSfromS,
                   invoiceVATSumSfromSDetailSfromS, invoiceSumSfromSDetailSfromS, retailSumSfromSDetailSfromS, noteSfromS

    PROPERTIES (s) READONLY FORCE PANEL nameUserCreated, timeCreated, hostnameComputerCreated, nameUserClosed, timeClosed, hostnameComputerClosed

    PROPERTIES (s) ADDFORM, EDITFORM SHOWIF isDraftSfromS(s), delete FORCE PANEL SHOWIF isDraftSfromS(s),
                   postSfromS SHOWIF isDraftSfromS(s), unpostSfromS SHOWIF isPostedSfromS(s)

    OBJECTS d = SfromSDetail
    PROPERTIES(d) READONLY indexSfromSDetail, barcodeSfromSDetail, nameSkuSfromSDetail, shortNameUOMSfromSDetail, sidSizeSfromSDetail, nameBrandSfromSDetail,
                  sidArticleSfromSDetail, nameCategorySfromSDetail, sidColorSfromSDetail, nameColorSfromSDetail, balanceBSkuSfromSDetail,
                  quantitySfromSDetail, importerPriceSfromSDetail, supplierPriceSfromSDetail, supplierSumSfromSDetail, numberSupplierVATSfromSDetail,
                  valueSupplierVATSfromSDetail, supplierVATISumSfromSDetail, invoiceSumSfromSDetail, numberRetailVATSfromSDetail,
                  valueRetailVATSfromSDetail, retailPriceSfromSDetail, retailSumSfromSDetail, calcRetailMarkupSfromSDetail

    FILTERS inSfromSSfromSDetail(s, d)
;

DESIGN SfromSs FROM DEFAULT {
    ADD s.box{
        PROPERTY (delete(s)) {
            panelLocation = TOOLBAR;
            askConfirm = TRUE;
        PROPERTY (objectClassName(s)) {
            preferredCharWidth = 15;
        }
        }
    }
    ADD d.box;

    NEW footer.container {
        childConstraints = TO THE BOTTOM;

        NEW cont3 {
            childConstraints = TO THE RIGHT;
            ADD s.historyGroup {
                childConstraints = TO THE BOTTOM;
            }

            ADD s.postedGroup {
                childConstraints = TO THE BOTTOM;
            }
        }
    }
    ADD functions.box;
}