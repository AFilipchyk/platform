MODULE RomanDocument;

REQUIRE Document, Stock, Barcode, StorePrice, Supplier;

META defineRBDocument (object, stock, stockCaption, skuProp, caption)

    @defineDocument(object);

    @defineDocumentPosted(object);

    @defineDocumentStock(object, stock, stockCaption);

    @defineDocumentDetailQuantity(object);

    @defineDocumentDetailNumbered(object);

    @defineDocumentHeaderQuantity(object);

    @defineDocumentDescription (object, caption);

    @implementSkuLedger (object, skuProp, stock);

    @defineDocumentDetailSkuArticle (object);

    @defineAddDetailDialogSkuStock(object, sku, stock, dialogSku);

    @defineAddDetailDialogBarcode(object, sku);
END

META defineRBCorrespondingDocument (object, stock, stockCaption, skuProp, caption, corresponder, corresponderCaption)

    @defineRBDocument (object, stock, stockCaption, skuProp, caption);

    corr###corresponder###object (object) = DATA corresponder (object) IN idGroup;
    nameCorr###corresponder###object corresponderCaption (object) = name (corr###corresponder###object(object)) IN documentHeaderGroup;

    balanceBSku###object##Detail 'Остаток до' (object##Detail) = balanceBSkuStockDateTime(
        sku###object##Detail(object##Detail), stock###object##Detail(object##Detail), dateTime###object##Detail(object##Detail));


END

META defineRBCorrespondingDocumentWithRetailPrices (object, stock, stockCaption, skuProp, caption, corresponder, corresponderCaption)

    @defineRBCorrespondingDocument (object, stock, stockCaption, skuProp, caption, corresponder, corresponderCaption);

    @defineDocumentDetailBasePrice(object);
    @defineDocumentDetailBaseSum(object);

    @defineDocumentDetailInvoicePrice(object);
    @defineDocumentDetailInvoiceSum(object);

    @defineDocumentHeaderBaseSum(object);
    @defineDocumentHeaderInvoiceSum(object);

//    @implementBaseSkuDepartmentStoreLedger(object, sku);
END

META defineUniqueDocumentComingByExpense (objectIn, objectOut)
    objectOut###objectIn 'Расход прихода (ИД)' (objectIn) = DATA objectOut##Posted (objectIn) IN idGroup;
    objectIn###objectOut (objectOut) = GROUP UNIQUE objectIn BY objectOut###objectIn (objectIn);

    in###objectOut###objectIn (objectOut, objectIn) = objectOut###objectIn(objectIn) == objectOut;

    CONSTRAINT objectOut###objectIn(p1) == objectOut###objectIn(p2) AND p1 != p2 CHECKED BY objectOut###objectIn MESSAGE 'Расход задействован в другом приходе';

END


META defineDocumentHeaderOriginSkuQuantity (object, objectFrom)
    quantityOrigin###object##DetailSku###object 'Кол-во ожидаемое' (sku, object) = quantity###objectFrom##DetailSku###objectFrom(sku, objectFrom##object(object));

    diffQuantity###object##DetailSku###object 'Разница' (sku, object) = quantity###object##DetailSku###object(sku, object) (-) quantityOrigin###object##DetailSku###object(sku, object);
END


// ----------------------------- количество упаковок и вес товаров ----------------------- //
META defineDocumentDetailPackWeightSku (object)
    packQuantity###object##Detail 'Количество грузовых мест' (idetail) = round0(quantity###object##Detail(idetail)/
        UNION OVERRIDE 1 IF idetail IS object##Detail, quantityPackSku(sku###object##Detail(idetail)));

    grossWeight###object##Detail 'Масса груза, т.' (idetail) = round3(
        netWeightSku(sku###object##Detail(idetail))*quantity###object##Detail(idetail)/1000);
END

// для использования метакода должно быть определено свойство sku###object##Detail
META defineDocumentDetailSkuArticle (object)

    barcode###object##Detail 'Штрих-код' (object##Detail) = barcode(sku###object##Detail(object##Detail));

    sidSize###object##Detail 'Размер' (object##Detail) = sidSizeSupplierItem(sku###object##Detail(object##Detail));
    sidColor###object##Detail 'Цвет (код)' (object##Detail) = sidColorSupplierItem(sku###object##Detail(object##Detail));
    nameColor###object##Detail 'Цвет' (object##Detail) = nameColorSupplierItem(sku###object##Detail(object##Detail));

    article###object##Detail 'Артикул (ИД)' (object##Detail) = articleSku(sku###object##Detail(object##Detail)) IN idGroup;
    sidArticle###object##Detail 'Артикул' (object##Detail) = sidArticle(article###object##Detail(object##Detail));
    brand###object##Detail 'Бренд (ИД)' (object##Detail) = brandSupplierArticle(article###object##Detail(object##Detail)) IN idGroup;
    nameBrand###object##Detail 'Бренд' (object##Detail) = name(brand###object##Detail(object##Detail)) MINCHARWIDTH 15;
    category###object##Detail 'Номенклатурная группа (ИД)' (object##Detail) = categoryArticle(article###object##Detail(object##Detail)) IN idGroup;
    nameCategory###object##Detail 'Номенклатурная группа' (object##Detail) = name(category###object##Detail(object##Detail)) MINCHARWIDTH 15;

    UOM###object##Detail 'Единица измерения (ИД)' (object##Detail) = DATA UOM (object##Detail) IN idGroup;
    shortNameUOM###object##Detail 'Единица измерения' (object##Detail) = shortName(UOM###object##Detail(object##Detail));
END