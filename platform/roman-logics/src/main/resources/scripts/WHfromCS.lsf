MODULE WHfromCS;

REQUIRE System,

        Stock,
        Numerator,
        Document,
        RomanDocument,
        Consignment,
        CStoWH,
        Barcode,
        MasterData,
        RomanLogicsModule;

PRIORITY Stock, RomanLogicsModule;

// Приход на склад
CLASS WHfromCS 'Приход на склад' : historyObject;
CLASS WHfromCSPosted 'Закрытый приход с СВХ' : WHfromCS, postedObject;

CLASS WHfromCSDetail 'Строка прихода на склад' : inTransferSkuLedger;

CLASS inWarehouseScan 'Сканирование';


@defineDocumentBasePosted(WHfromCS);

@defineDocumentStock(WHfromCS, warehouse, 'Оптовый склад');

@defineDocumentDetailQuantity(WHfromCS);


CStoWHWHfromCS 'Расход прихода (ИД)' = DATA CStoWHPosted(WHfromCS) IN idGroup;
WHfromCSCStoWH (CStoWH) = GROUP UNIQUE WHfromCS BY CStoWHWHfromCS (WHfromCS);
//CONSTRAINT CStoWHWHfromCS(p1) == CStoWHWHfromCS(p2) AND p1 != p2 CHECKED BY CStoWHWHfromCS MESSAGE 'Расход задействован в другом приходе';


numberCStoWHWHfromCS 'Номер' (WHfromCS) = numberObject(CStoWHWHfromCS(WHfromCS)) IN baseGroup PERSISTENT;
seriesCStoWHWHfromCS 'Серия' (WHfromCS) = seriesObject(CStoWHWHfromCS(WHfromCS)) IN baseGroup PERSISTENT;
seriesNumberWHfromCS 'Серия/Номер' (WHfromCS) = seriesNumberObject(CStoWHWHfromCS(WHfromCS)) PERSISTENT;

inCStoWHWHfromCS (WHfromCS, CStoWH) = CStoWHWHfromCS(WHfromCS) == CStoWH;


skuWHfromCSDetail 'Товар (ИД)' (WHfromCSDetail) = DATA sku(WHfromCSDetail) IN idGroup;
@defineDocumentDetailProps (WHfromCS);

descriptionWHfromCSDetail 'Описание' (WHfromCSDetail) = DATA STRING[100](WHfromCSDetail);

quantityWHfromCSBatch (WHfromCS, batch) = quantityCStoWHBatch(CStoWHWHfromCS(WHfromCS), batch);
quantityWHfromCSDetailBatch (WHfromCSDetail, batch) = quantityWHfromCSBatch(WHfromCSWHfromCSDetail(WHfromCSDetail), batch);

limitInTransferSkuLedgerBatch (WHfromCSDetail, batch) += quantityWHfromCSDetailBatch (WHfromCSDetail, batch);

quantityDCStoWHSku (CStoWH, sku) = GROUP SUM quantityCStoWHDetail(CStoWHDetail)
                                          BY CStoWHCStoWHDetail(CStoWHDetail), skuCStoWHDetail(CStoWHDetail);

quantityOriginWHfromCSDetail 'Кол-во плановое' (WHfromCSDetail) = DATA NUMERIC[14,2](WHfromCSDetail) IN baseGroup;

diffQuantityWHfromCSDetail (WHfromCSDetail) = quantityOriginWHfromCSDetail(WHfromCSDetail)!= quantityWHfromCSDetail(WHfromCSDetail);

@implementSkuLedger (WHfromCS, sku, warehouse);

currentBalanceDeclaration 'Остаток по декларации' (declaration) = GROUP SUM currentBalanceBatch(declarationDetail)
    BY declarationDeclarationDetail (declarationDetail);

toFillInWarehouseDetailsWHfromCS 'Заполнить приход по расходу' =  ACTION (WHfromCS) {
    FOR quantityDCStoWHSku (CStoWHWHfromCS(WHfromCS), sku) DO {
        ADDOBJ WHfromCSDetail;
        FOR w == addedObject() DO {
            SET skuWHfromCSDetail(w) <- sku AS sku;
            SET WHfromCSWHfromCSDetail(w) <- WHfromCS AS WHfromCS;
            SET quantityOriginWHfromCSDetail(w) <- quantityDCStoWHSku(CStoWHWHfromCS(WHfromCSWHfromCSDetail(w)), sku);
        };
    };
} CONFIRM;


idBarcodeInWarehouseScan 'Штрих-код' = DATA STRING[13] (inWarehouseScan);
WHfromCSInWarehouseScan 'Приход (ИД)' = DATA WHfromCS(inWarehouseScan) IN idGroup;
skuInWarehouseScan 'Товар (ИД)' = DATA sku(inWarehouseScan) IN idGroup;


@defineAddDetailDialogBarcode(WHfromCS, sku);

FORM declarationsCStoWH 'Декларации'
    OBJECTS c=CStoWH FIXED PANEL
    PROPERTIES (c) READONLY numberObject, seriesObject, dateCStoWH, nameCustomStoreCStoWH//, nameStoreCustomsFlow

    OBJECTS de=declaration

    PROPERTIES (c, de) inCStoWHDeclaration
    PROPERTIES (de) READONLY sidDeclaration, date, nameImporterDeclaration, currentBalanceDeclaration
    FILTERS isCustomsDeclarationCStoWH (de, c)
;


FORM WHfromCS 'Приход на оптовый склад'

    OBJECTS w = WHfromCS FIXED PANEL
    PROPERTIES (w) numberObject, seriesObject, dateWHfromCS, timeWHfromCS, nameWarehouseWHfromCS,
                   numberCStoWHWHfromCS, seriesCStoWHWHfromCS, toFillInWarehouseDetailsWHfromCS

    OBJECTS d = WHfromCSDetail
    PROPERTIES (d) READONLY indexWHfromCSDetail, barcodeWHfromCSDetail, nameBrandWHfromCSDetail, sidArticleWHfromCSDetail,
                            sidColorWHfromCSDetail, nameColorWHfromCSDetail, sidSizeWHfromCSDetail

    PROPERTIES(d) quantityOriginWHfromCSDetail, quantityWHfromCSDetail
    PROPERTIES(d) ADDOBJ, delete

    PROPERTIES(w) TODRAW d addDetailDialogBarcodeWHfromCSDetailWHfromCS

    FILTERS inWHfromCSWHfromCSDetail(w, d)

    FILTERGROUP filtersQuantity
        FILTER 'Показывать принятые' 'F9' quantityWHfromCSDetail(d) DEFAULT

    FILTERGROUP filtersDiff
        FILTER 'Показывать отличающиеся' 'F10' diffQuantityWHfromCSDetail(d)

    EDIT WHfromCS OBJECT w
;

FORM WHfromCSs 'Приходы на оптовый склад'
    OBJECTS w = WHfromCS
    PROPERTIES (w) READONLY numberObject, seriesObject, dateWHfromCS, timeWHfromCS, nameWarehouseWHfromCS

    PROPERTIES (w) ADDFORM, EDITFORM SHOWIF isDraftWHfromCS(w), delete FORCE PANEL SHOWIF isDraftWHfromCS(w),
                   postWHfromCS SHOWIF isDraftWHfromCS(w), unpostWHfromCS SHOWIF isPostedWHfromCS(w)

    OBJECTS d = WHfromCSDetail
    PROPERTIES(d) READONLY isPostedSkuLedger, indexWHfromCSDetail, barcodeWHfromCSDetail,
                           nameBrandWHfromCSDetail, sidArticleWHfromCSDetail, sidColorWHfromCSDetail, nameColorWHfromCSDetail, sidSizeWHfromCSDetail,
                           quantityOriginWHfromCSDetail, quantityWHfromCSDetail

    FILTERS inWHfromCSWHfromCSDetail(w, d)
;

DESIGN WHfromCSs FROM DEFAULT {
    PROPERTY (delete(w)) {
        panelLocation = TOOLBAR;
        askConfirm = TRUE;
    }
}