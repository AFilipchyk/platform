MODULE WHfromCS;

REQUIRE System,

        Utils,
        Stock,
        Numerator,
        Document,
        RomanDocument,
        Consignment,
        CStoWH,
        Barcode,
        MasterData,
        RomanLogicsModule;

PRIORITY RomanLogicsModule, Stock;

// Приход на склад (по схеме документ расхода - акт приемки - акт расхождений)
CLASS WHfromCSI 'Приход на склад с СВХ' : historyObject, numberedObject;
CLASS WHfromCSIPosted 'Закрытый приход с СВХ' : WHfromCSI, postedObject;
CLASS WHfromCSIDetail 'Строка прихода на склад' : inLIFOSkuLedger;

@defineDocumentTables(WHfromCSI);

@defineDocumentAggregation(CStoWH, WHfromCSI, isPostedCStoWH);

@defineDocumentAggregationStock(CStoWH, WHfromCSI, customStore, 'СВХ');
@defineDocumentAggregationStock(CStoWH, WHfromCSI, warehouse, 'Оптовый склад');

@defineDocumentAggregationPosted(CStoWH, WHfromCSI);

@defineDocumentAggregationDetailSku(CStoWH, WHfromCSI, sku);

@defineDocumentAggregationDetailQuantity(CStoWH, WHfromCSI);

@defineDocumentHeaderQuantity(WHfromCSI);

@defineDocumentDetailIndex(WHfromCSI);
@defineDocumentDescription(WHfromCSI, 'Поступление товара с СВХ');

@defineDocumentDetailSkuArticle(WHfromCSI);

initValueNumberObject (WHfromCSI) += [PREV(numberObject(WHfromCSI))](CStoWHWHfromCSI(WHfromCSI));
initValueSeriesObject (WHfromCSI) += [PREV(seriesObject(WHfromCSI))](CStoWHWHfromCSI(WHfromCSI));

initWhenNumberedObject(WHfromCSI) += CHANGED(CStoWHWHfromCSI(WHfromCSI));

@implementSkuLedger(WHfromCSI, sku, warehouse);
quantityInLIFOSkuLedger (ledger) += quantityWHfromCSIDetail(ledger);
limitInLIFOSkuLedgerBatch (ledger, batch) += quantityWHfromCSIDetail(ledger) AND batch == declarationDetailCStoWHDetail(CStoWHDetailWHfromCSIDetail(ledger));

quantitySkuInWHfromCSI 'Кол-во товара' (WHfromCSI, sku) = GROUP SUM quantityWHfromCSIDetail(WHfromCSIDetail)
                                           BY WHfromCSIWHfromCSIDetail(WHfromCSIDetail), skuWHfromCSIDetail(WHfromCSIDetail);


CLASS WHfromCSR 'Приемка на склад с СВХ' : historyObject, numberedObject;
CLASS WHfromCSRPosted 'Закрытая приемка на склад с СВХ' : WHfromCSR, postedObject;
CLASS WHfromCSRDetail 'Строка приемки на склад с СВХ';

@defineDocument(WHfromCSR);
@defineDocumentStock(WHfromCSR, warehouse, 'Оптовый склад');
@defineDocumentPosted(WHfromCSR);

@defineDocumentDetailNumbered(WHfromCSR);
@defineDocumentDetailQuantity(WHfromCSR);

@defineDocumentDetailSku(WHfromCSR, sku);
@defineDocumentDetailSkuArticle(WHfromCSR);

@defineDocumentDetailSkuBalance(WHfromCSR, sku, warehouse);

@defineDocumentHeaderQuantity(WHfromCSR);

@defineDocumentDescription (WHfromCSR, 'Расход с СВХ');

@defineAddDetailDialogSkuStock(WHfromCSR, sku, warehouse, dialogSku);
@defineAddDetailDialogBarcode(WHfromCSR, sku);

customStoreWHfromCSR (WHfromCSR) = DATA customStore (WHfromCSR) IN idGroup;
nameCustomStoreWHfromCSR 'СВХ' (WHfromCSR) = name (customStoreWHfromCSR(WHfromCSR)) IN documentHeaderGroup;

//связь расхода и приемки
WHfromCSIWHfromCSR 'Документ приемки (ИД)' (WHfromCSR) = DATA WHfromCSI(WHfromCSR);
WHfromCSRWHfromCSI 'Документ прихода (ИД)' (WHfromCSI) = GROUP UNIQUE WHfromCSR BY WHfromCSIWHfromCSR(WHfromCSR) WHERE WHfromCSR IS WHfromCSR;

isAcceptedWHfromCSI 'Документ с приемкой' (WHfromCSI) =  WHfromCSI IS WHfromCSI AND WHfromCSRWHfromCSI(WHfromCSI);
notAcceptedWHfromCSI 'Документ без приемки' (WHfromCSI) =  WHfromCSI IS WHfromCSI AND NOT WHfromCSRWHfromCSI(WHfromCSI);

CStoWHWHfromCSR (WHfromCSR) = CStoWHWHfromCSI (WHfromCSIWHfromCSR(WHfromCSR));

initValueNumberObject (WHfromCSR) += [PREV(numberObject(WHfromCSR))](WHfromCSIWHfromCSR(WHfromCSR));
initValueSeriesObject (WHfromCSR) += [PREV(seriesObject(WHfromCSR))](WHfromCSIWHfromCSR(WHfromCSR));

initWhenNumberedObject (WHfromCSR) +=  CHANGED(WHfromCSIWHfromCSR(WHfromCSR));

//для учета по коробам
freightUnitWHfromCSRDetail 'Короб (ИД)' (WHfromCSRDetail) = DATA freightUnit(WHfromCSRDetail);
barcodeFreightUnitWHfromCSRDetail 'Короб' (WHfromCSRDetail) = barcode (freightUnitWHfromCSRDetail(WHfromCSRDetail));

quantityWHfromCSRDetailsSkuFreightUnit 'Количество принятое (в коробе)' (sku, freightUnit, WHfromCSR) =
    GROUP SUM quantityWHfromCSRDetail(WHfromCSRDetail)
    BY skuWHfromCSRDetail(WHfromCSRDetail), freightUnitWHfromCSRDetail(WHfromCSRDetail), WHfromCSRWHfromCSRDetail(WHfromCSRDetail);

isNotShippedSkuFreightUnitWHfromCSR (sku, freightUnit, WHfromCSR) = quantitySkuFreightUnitCStoWH (sku, freightUnit, CStoWHWHfromCSR(WHfromCSR))
    AND NOT quantityWHfromCSRDetailsSkuFreightUnit(sku, freightUnit, WHfromCSR);

//quantityWHfromCSBatch (WHfromCS, batch) = quantityCStoWHBatch(CStoWHWHfromCS(WHfromCS), batch);
//quantityWHfromCSDetailBatch (WHfromCSDetail, batch) = quantityWHfromCSBatch(WHfromCSWHfromCSDetail(WHfromCSDetail), batch);
//
//limitInTransferSkuLedgerBatch (WHfromCSDetail, batch) += quantityWHfromCSDetailBatch (WHfromCSDetail, batch);
//
@defineDocumentHeaderSkuQuantity (WHfromCSR, sku);
@defineDocumentHeaderOriginSkuQuantity (WHfromCSR, CStoWH);

//quantityDCStoWHSku (CStoWH, sku) = GROUP SUM quantityCStoWHDetail(CStoWHDetail)
//                                          BY CStoWHCStoWHDetail(CStoWHDetail), skuCStoWHDetail(CStoWHDetail);
//
//diffQuantityWHfromCSRDetail (WHfromCSRDetail) = quantityOriginWHfromCSRDetail(WHfromCSRDetail)!= quantityWHfromCSRDetail(WHfromCSRDetail);

//приемка по коробам

currentFreightUnit 'Тек. короб (ИД)' (WHfromCSR) = SESSION DATA freightUnit (WHfromCSR);
barcodeCurrentFreightUnit 'Тек. короб (штрих-код)' (WHfromCSR) = barcode(currentFreightUnit(WHfromCSR));

withOutBarcodeSku (sku) = sku IS RomanLogicsModule.item AND NOT barcode(sku);

FORM addBarcodeWHfromCSRSku 'Поиск товара(с коробами и выбором шрих-кода)'

    OBJECTS w = WHfromCSR

    OBJECTS f = freightUnit FIXED PANEL
    PROPERTIES(f) READONLY sidSupplierBox, barcode

    OBJECTS s = RomanLogicsModule.item
    PROPERTIES(s) READONLY sidArticleSku, barcode, sidColorSupplierItem, nameColorSupplierItem, sidSizeSupplierItem

    FILTERS quantitySkuCStoWH (s, CStoWHWHfromCSR(w)) > 0

    FILTERGROUP filters1
        FILTER 'Товар без шрих-кода' 'F9' withOutBarcodeSku(s) DEFAULT

    FILTERGROUP filters2
        FILTER 'Только из текущего короба' 'F10' quantitySkuFreightUnitCStoWH(s, f, CStoWHWHfromCSR(w)) > 0

;

DESIGN addBarcodeWHfromCSRSku FROM DEFAULT {

    f.box{
        caption = 'Короб';
    }
}

FORM addSkuWHfromCSR 'Ввод товара'

    OBJECTS i = RomanLogicsModule.item FIXED PANEL
    PROPERTIES(i) READONLY barcode
    PROPERTIES(i) sidArticleSku, sidColorSupplierItem, nameColorSupplierItem, sidSizeSupplierItem

;

DESIGN addSkuWHfromCSR FROM DEFAULT {

    i.box{
        caption = 'Свойства нового товара';
        childConstraints = TO THE BOTTOM;
        ADD PROPERTY(sidArticleSku);
        ADD PROPERTY(sidColorSupplierItem);
        ADD PROPERTY(nameColorSupplierItem);
        ADD PROPERTY(sidSizeSupplierItem);
    }
}

createSkuWHfromCSR = ACTION (barcode) NEWSESSION {

    ADDOBJ RomanLogicsModule.item;
    FOR s == addedObject() DO {
        SET barcode(s) <- (barcode AS STRING[14]);
        FORM addSkuWHfromCSR OBJECTS i = s MODAL;
        IF formResult() == formResult.ok THEN {
            EXEC apply();
        }
    }
}

addDialogSkuFreightUnitBarcode 'Ввод штрих-кода' (WHfromCSR) = ACTION (WHfromCSR) {

    LOCAL selectedBarcode = STRING[14] ();
    LOCAL dialogBarcodeSku = sku();
    LOCAL dialogBarcodeDetail = WHfromCSRDetail();

    FORM barcodeInput MODAL;

    IF formResult() == formResult.ok THEN {

        SET selectedBarcode() <- chosenString('barcode');

        IF barcodeToObject(selectedBarcode()) IS freightUnit THEN {
            SET currentFreightUnit (WHfromCSR) <- barcodeToObject(selectedBarcode());
        } ELSE {

            SET dialogBarcodeSku() <- skuBarcodeIdDate(selectedBarcode(), dateWHfromCSR (WHfromCSR));
            SET dialogBarcodeDetail() <- detailWHfromCSRSku(WHfromCSR, dialogBarcodeSku());

            IF selectedBarcode() IS STRING[14] AND NOT dialogBarcodeSku() IS sku THEN {

                FORM addBarcodeWHfromCSRSku OBJECTS f = currentFreightUnit(WHfromCSR), w = WHfromCSR MODAL;
                IF formResult() == formResult.ok THEN {
                    SET barcode(sku) IF sku == chosenObject('s') <- selectedBarcode();
                    SET dialogBarcodeSku() <- chosenObject('s');
                } ELSE {
                    EXEC createSkuWHfromCSR(selectedBarcode());
                    SET dialogBarcodeSku() <- skuBarcodeIdDate(selectedBarcode(), dateWHfromCSR (WHfromCSR));
                }
            }

            IF dialogBarcodeSku() IS sku THEN {

                IF dialogBarcodeDetail() IS WHfromCSRDetail THEN {
                    SET quantityWHfromCSRDetail(detail) IF detail == dialogBarcodeDetail() <-
                        quantityWHfromCSRDetail(detail) (+) (1 IF detail IS WHfromCSRDetail);
                    } ELSE {

                        ADDOBJ WHfromCSRDetail;
                        FOR w == addedObject() DO {
                            SET WHfromCSRWHfromCSRDetail(w) <- WHfromCSR AS WHfromCSR;
                            SET skuWHfromCSRDetail(w) <- dialogBarcodeSku();
                            SET freightUnitWHfromCSRDetail(w) <- currentFreightUnit(WHfromCSR);
                            SET quantityWHfromCSRDetail(w) <- 1;
                        }
                    }
            }
        }
    }
} TOOLBAR EDITKEY 'F4';

fillWHfromCSRDetailsSkuFreightUnit 'Заполнить строки из короба' (WHfromCSR) = ACTION (WHfromCSR) {
    FOR isNotShippedSkuFreightUnitWHfromCSR (sku AS sku, currentFreightUnit(WHfromCSR), WHfromCSR AS WHfromCSR) DO {
        ADDOBJ WHfromCSRDetail;
        FOR w == addedObject() DO {
            SET skuWHfromCSRDetail (w) <- sku AS sku;
            SET quantityWHfromCSRDetail (w) <- quantitySkuFreightUnitCStoWH (sku AS sku, currentFreightUnit(WHfromCSR), CStoWHWHfromCSR(WHfromCSR));
            SET freightUnitWHfromCSRDetail(w) <- currentFreightUnit(WHfromCSR);
        }
    }
} EDITKEY 'F5' CONFIRM;

shouldBePrintWHfromCSR = SESSION DATA BOOLEAN (sku);

priceBaseWHfromCSRDateTimeSku 'Цена' (sku, dateTime) = priceBasePriceSetDocumentArticleDateTime(articleSku(sku), dateTime);
priceDiscountWHfromCSRDateTimeSku 'Цена скидочная' (sku, dateTime) = priceDiscountPriceSetDocumentArticleDateTime(articleSku(sku), dateTime);

quantityWHfromCSRFreightUnitSku (WHfromCSR, freightUnit, sku) = quantityCStoWHFreightUnitSku(CStoWHWHfromCSR(WHfromCSR), freightUnit, sku);

quantityPositionsSkuInWHFromCSRFreightUnit 'Кол-во позиций в коробе' (WHfromCSR, freightUnit) =
    GROUP SUM 1 IF quantityWHfromCSRFreightUnitSku(WHfromCSR, freightUnit, sku) BY WHfromCSR, freightUnit;
quantityPositionsSkuInFreightUnitWHfromCSR 'Кол-во позиций в коробе' (WHfromCSR) = quantityPositionsSkuInWHFromCSRFreightUnit(WHfromCSR, currentFreightUnit(WHfromCSR));

quantitySkuInWHFromCSRFreightUnit 'Кол-во товара в коробе' (WHfromCSR, freightUnit) =
    GROUP SUM quantityWHfromCSRFreightUnitSku(WHfromCSR, freightUnit, sku) BY WHfromCSR, freightUnit;
quantitySkuInFreightUnitWHfromCSR 'Кол-во товара в коробе' (WHfromCSR) = quantitySkuInWHFromCSRFreightUnit(WHfromCSR, currentFreightUnit(WHfromCSR));

quantityPositionsSkuWHfromCSRFreightUnit 'Кол-во позиций в документе' (WHfromCSR, freightUnit) =
    GROUP SUM 1 IF quantityWHfromCSRDetail(WHfromCSRDetail) BY WHfromCSRWHfromCSRDetail(WHfromCSRDetail), freightUnitWHfromCSRDetail(WHfromCSRDetail);
quantityPositionsSkuWHfromCSR 'Кол-во позиций в документе' (WHfromCSR) =
    quantityPositionsSkuWHfromCSRFreightUnit(WHfromCSR, currentFreightUnit(WHfromCSR));

quantitySkuWHfromCSRFreightUnit 'Кол-во товара в документе' (WHfromCSR, freightUnit) =
    GROUP SUM quantityWHfromCSRDetail(WHfromCSRDetail) BY WHfromCSRWHfromCSRDetail(WHfromCSRDetail), freightUnitWHfromCSRDetail(WHfromCSRDetail);
quantitySkuWHfromCSR 'Кол-во товара в документе' (WHfromCSR) =
    quantitySkuWHfromCSRFreightUnit(WHfromCSR, currentFreightUnit(WHfromCSR));

quantityRemainedPositionSkuWHfromCSR 'Кол-во оставшихся позиций в коробе' (WHfromCSR) =
    UNION OVERRIDE 0 AND WHfromCSR, quantityPositionsSkuInFreightUnitWHfromCSR(WHfromCSR) (-) quantityPositionsSkuWHfromCSR(WHfromCSR);

quantityRemainedSkuWHfromCSR 'Кол-во оставшегося товара в коробе' (WHfromCSR) =
    UNION OVERRIDE 0 AND WHfromCSR, quantitySkuInFreightUnitWHfromCSR(WHfromCSR) (-) quantitySkuWHfromCSR(WHfromCSR);

quantitySkuInWHfromCSR 'Кол-во товара' (WHfromCSR, sku) = GROUP SUM quantityWHfromCSRDetail(WHfromCSRDetail)
    BY WHfromCSRWHfromCSRDetail(WHfromCSRDetail), skuWHfromCSRDetail(WHfromCSRDetail);

CONSTRAINT currentFreightUnit(WHfromCSR) IS freightUnit AND NOT quantitySkuInFreightUnitWHfromCSR(WHfromCSR) CHECKED BY currentFreightUnit MESSAGE 'Короб должен быть из текущей поставки';

FORM printMarksWHfromCSR 'Печать маркировок товара' PRINT

    OBJECTS dt = DATETIME FIXED PANEL
    PROPERTIES(dt) OBJVALUE

    OBJECTS s = sku
    PROPERTIES(s) READONLY sidArticleSku, nameCommonSizeSku, sidGenderArticleSku, nameCategoryArticleSku,
                           mainCompositionSku, nameCountryBrandSupplier, nameBrandSupplierArticleSku,
                           barcode, nameCountrySku, nameColorSupplierItem, nameSupplierArticleSku

    PROPERTIES(s, dt)      priceBaseWHfromCSRDateTimeSku, priceDiscountWHfromCSRDateTimeSku

    FILTERS shouldBePrintWHfromCSR(s)
;

printMarksSkuFreightUnit 'Печать маркировок товаров' (WHfromCSR) = ACTION (WHfromCSR) {

    SET shouldBePrintWHfromCSR(sku) <- NULL;
    SET shouldBePrintWHfromCSR(sku) <- TRUE IF quantitySkuFreightUnitCStoWH(sku, currentFreightUnit(WHfromCSR), CStoWHWHfromCSR(WHfromCSR));
    FORM printMarksWHfromCSR OBJECTS dt = dateTimeWHfromCSR(WHfromCSR) MODAL;

} CONFIRM;

printMarksSkuWHfromCSR 'Печать маркировок товаров' (WHfromCSR) = ACTION (WHfromCSR) {

    SET shouldBePrintWHfromCSR(sku) <- NULL;
    SET shouldBePrintWHfromCSR(sku) <- TRUE IF quantitySkuInWHfromCSR(WHfromCSR, sku);
    FORM printMarksWHfromCSR OBJECTS dt = dateTimeWHfromCSR(WHfromCSR) MODAL;

} CONFIRM TOOLBAR;


CLASS WHfromCSD 'Акт расхождений на приемке на склад с СВХ' : historyObject, numberedObject;
CLASS WHfromCSDPosted 'Закрытый акт расхождений на приемке на склад с СВХ' : WHfromCSD, postedObject;
CLASS ABSTRACT WHfromCSDDetail 'Строка акта расхождений на приемке на склад с СВХ';

CLASS WHfromCSDODetail 'Строка акта расхождений (излишек) на приемке на склад с СВХ' : inLIFOSkuLedger, WHfromCSDDetail;
CLASS WHfromCSDSDetail 'Строка акта расхождений (недостача) на приемке на склад с СВХ' : outFIFOSkuLedger, WHfromCSDDetail;
TABLE WHfromCSDODetail (WHfromCSDODetail);
TABLE WHfromCSDSDetail (WHfromCSDSDetail);

@defineDocument(WHfromCSD);
@defineDocumentStock(WHfromCSD, warehouse, 'Оптовый склад');
@defineDocumentPosted(WHfromCSD);

@defineDocumentDetailNumbered(WHfromCSD);
@defineDocumentDetailQuantity(WHfromCSD);

@defineDocumentDetailSku(WHfromCSD, sku);
@defineDocumentDetailSkuArticle(WHfromCSD);

@defineDocumentDetailSkuBalance(WHfromCSD, sku, warehouse);

@defineDocumentHeaderQuantity(WHfromCSD);

@defineDocumentDescription (WHfromCSD, 'Акт расхождений при приемке на склад');

WHfromCSRWHfromCSD 'Акт расхождений по приемке (ИД)' (WHfromCSD) = DATA WHfromCSR (WHfromCSD);
WHfromCSRWHfromCSDDetail (WHfromCSDDetail) = WHfromCSRWHfromCSD(WHfromCSDWHfromCSDDetail(WHfromCSDDetail));

WHfromCSIWHfromCSD 'Акт расхождений по приходу (ИД)' (WHfromCSD) = WHfromCSIWHfromCSR(WHfromCSRWHfromCSD (WHfromCSD));

//строки излишек
needDiffShortageSkuWHfromCSR 'Необходим акт расхождений (излишек)' (WHfromCSR, sku) =
    sku IS sku AND WHfromCSR IS WHfromCSR AND (quantitySkuInWHfromCSR (WHfromCSR, sku) (-) quantitySkuInWHfromCSI (WHfromCSIWHfromCSR(WHfromCSR), sku)) > 0;

WHfromCSRWHfromCSDODetail (WHfromCSDODetail) = WHfromCSRWHfromCSDDetail(WHfromCSDODetail) IF WHfromCSDODetail IS WHfromCSDODetail;
skuWHfromCSDODetail (WHfromCSDODetail) = skuWHfromCSDDetail(WHfromCSDODetail) IF WHfromCSDODetail IS WHfromCSDODetail;

@defineAggregationDoubleCustom (WHfromCSRWHfromCSDODetail, skuWHfromCSDDetail, WHfromCSR, sku, WHfromCSDODetail, needDiffShortageSkuWHfromCSR);

quantityWHfromCSDDetail (WHfromCSDODetail) <-
    (quantitySkuInWHfromCSR (WHfromCSRWHfromCSDDetail(WHfromCSDODetail), skuWHfromCSDDetail(WHfromCSDODetail))
    (-) quantitySkuInWHfromCSI (WHfromCSIWHfromCSR(WHfromCSRWHfromCSDDetail(WHfromCSDODetail)), skuWHfromCSDDetail(WHfromCSDODetail)))
    WHEN (ASSIGNED(skuWHfromCSDDetail(WHfromCSDODetail)) OR ASSIGNED(WHfromCSRWHfromCSDDetail(WHfromCSDODetail)));

// строки недостачи
needDiffOverSkuWHfromCSR 'Необходим акт расхождений (недостача)' (WHfromCSR, sku) =
    sku IS sku AND WHfromCSR IS WHfromCSR AND (quantitySkuInWHfromCSR (WHfromCSR, sku) (-) quantitySkuInWHfromCSI (WHfromCSIWHfromCSR(WHfromCSR), sku)) < 0;

WHfromCSRWHfromCSDSDetail (WHfromCSDSDetail) = WHfromCSRWHfromCSDDetail(WHfromCSDSDetail) IF WHfromCSDSDetail IS WHfromCSDSDetail;
skuWHfromCSDSDetail (WHfromCSDSDetail) = skuWHfromCSDDetail(WHfromCSDSDetail) IF WHfromCSDSDetail IS WHfromCSDSDetail;

@defineAggregationDoubleCustom (WHfromCSRWHfromCSDSDetail, skuWHfromCSDSDetail, WHfromCSR, sku, WHfromCSDSDetail, needDiffOverSkuWHfromCSR);

@defineDocumentDetailQuantity(WHfromCSDS);

quantityWHfromCSDDetail (WHfromCSDSDetail) <-
    (quantitySkuInWHfromCSI (WHfromCSIWHfromCSR(WHfromCSRWHfromCSDDetail(WHfromCSDSDetail)), skuWHfromCSDDetail(WHfromCSDSDetail))
    (-) quantitySkuInWHfromCSR (WHfromCSRWHfromCSDDetail(WHfromCSDSDetail), skuWHfromCSDDetail(WHfromCSDSDetail)))
    WHEN (ASSIGNED(skuWHfromCSDDetail(WHfromCSDSDetail)) OR ASSIGNED(WHfromCSRWHfromCSDDetail(WHfromCSDSDetail)));

statusWHfromCSI 'Статус' (WHfromCSI) = CASE
    WHEN (WHfromCSRWHfromCSI (WHfromCSI) IS WHfromCSRPosted) THEN ('Принят' IF WHfromCSI IS WHfromCSI)
    WHEN (WHfromCSRWHfromCSI (WHfromCSI) IS WHfromCSR) THEN ('Принимается' IF WHfromCSI IS WHfromCSI)
    DEFAULT 'К приемке' IF WHfromCSI IS WHfromCSI
END PREFCHARWIDTH 15 MINCHARWIDTH 15;

sumQuantityOverWHfromCSD 'Количество излишка' (WHfromCSD) = GROUP SUM quantityWHfromCSDDetail(WHfromCSDODetail)
                                                            BY WHfromCSDWHfromCSDDetail(WHfromCSDODetail) WHERE WHfromCSDODetail IS WHfromCSDODetail;

sumQuantityShortageWHfromCSD 'Количество недостач' (WHfromCSD) = GROUP SUM quantityWHfromCSDDetail(WHfromCSDSDetail)
                                                            BY WHfromCSDWHfromCSDDetail(WHfromCSDSDetail) WHERE WHfromCSDSDetail IS WHfromCSDSDetail;

sumQuantityWHfromCSD 'Количество по акту расхождений' (WHfromCSD) = sumQuantityOverWHfromCSD(WHfromCSD) - sumQuantityShortageWHfromCSD(WHfromCSD);

// Атрибуты поставщика

originalNameArticleSkuWHfromCSRDetail 'Наименование(ориг.)' (WHfromCSRDetail) = originalNameArticleSku(skuWHfromCSRDetail(WHfromCSRDetail));
nameCountryOfOriginArticleSkuWHfromCSRDetail 'Страна происхождения' (WHfromCSRDetail) = nameCountryOfOriginArticleSku(skuWHfromCSRDetail(WHfromCSRDetail));
nameBrandSupplierArticleSkuWHfromCSRDetail 'Бренд' (WHfromCSRDetail) = nameBrandSupplierArticleSku(skuWHfromCSRDetail(WHfromCSRDetail));
netWeightArticleSkuWHfromCSRDetail 'Весс нетто(ориг.)' (WHfromCSRDetail) = netWeightArticleSku(skuWHfromCSRDetail(WHfromCSRDetail));
mainCompositionOriginArticleSkuWHfromCSRDetail 'Состав(ориг.)' (WHfromCSRDetail) = mainCompositionOriginArticleSku(skuWHfromCSRDetail(WHfromCSRDetail));

// Внутренние атрибуты

sidGenderArticleSkuWHfromCSRDetail 'Пол товара' (WHfromCSRDetail) = sidGenderArticleSku(skuWHfromCSRDetail(WHfromCSRDetail));
nameCategoryArticleSkuWHfromCSRDetail 'Номенклатурная группа' (WHfromCSRDetail) = nameCategoryArticleSku(skuWHfromCSRDetail(WHfromCSRDetail));
nameTypeFabricArticleSkuWHfromCSRDetail 'Тип одежды' (WHfromCSRDetail) = nameTypeFabricArticleSku(skuWHfromCSRDetail(WHfromCSRDetail));
nameUnitOfMeasureArticleSkuWHfromCSRDetail 'Ед. измерения товара' (WHfromCSRDetail) = nameUnitOfMeasureArticleSku(skuWHfromCSRDetail(WHfromCSRDetail));
netWeightSkuWHfromCSRDetail 'Весс нетто(ед.)' (WHfromCSRDetail) = netWeightSku(skuWHfromCSRDetail(WHfromCSRDetail));
nameCountryOfOriginSkuWHfromCSRDetail 'Страна происхождения' (WHfromCSRDetail) = nameCountryOfOriginSku(skuWHfromCSRDetail(WHfromCSRDetail));
mainCompositionOriginSkuWHfromCSRDetail 'Состав' (WHfromCSRDetail) = mainCompositionOriginSku(skuWHfromCSRDetail(WHfromCSRDetail));
additionalCompositionOriginSkuWHfromCSRDetail 'Дополнительный состав' (WHfromCSRDetail) = additionalCompositionOriginSku(skuWHfromCSRDetail(WHfromCSRDetail));
coefficientArticleSkuWHfromCSRDetail 'Кол-во в комплекте' (WHfromCSRDetail) = coefficientArticleSku(skuWHfromCSRDetail(WHfromCSRDetail));

backgroundWHfromCSRDetail 'Цвет' (WHfromCSRDetail) = RGB(255,0,0) IF quantityWHfromCSRDetail(WHfromCSRDetail) == 1;

FORM WHfromCSR 'Приемка на оптовый склад'

    OBJECTS w = WHfromCSR FIXED PANEL, d = WHfromCSRDetail

    PROPERTIES(w)          numberObject, seriesObject, dateWHfromCSR, timeWHfromCSR, nameWarehouseWHfromCSR,
                           barcodeCurrentFreightUnit, fillWHfromCSRDetailsSkuFreightUnit, printMarksSkuFreightUnit,
                           printMarksSkuWHfromCSR TODRAW d FORCE PANEL
    PROPERTIES(w) READONLY quantityRemainedPositionSkuWHfromCSR SHOWIF barcodeCurrentFreightUnit(w),
                           quantityRemainedSkuWHfromCSR SHOWIF barcodeCurrentFreightUnit(w)

    PROPERTIES(d) READONLY indexWHfromCSRDetail, barcodeWHfromCSRDetail, nameCategoryArticleSkuWHfromCSRDetail,
                           nameBrandWHfromCSRDetail, sidArticleWHfromCSRDetail, sidSizeWHfromCSRDetail,
                           sidColorWHfromCSRDetail, nameColorWHfromCSRDetail, barcodeFreightUnitWHfromCSRDetail

    PROPERTIES(d) quantityWHfromCSRDetail

    PROPERTIES(d) READONLY nameUnitOfMeasureArticleSkuWHfromCSRDetail

    PROPERTIES(d) delete

    PROPERTIES(w) TODRAW d addDialogSkuFreightUnitBarcode, deleteWHfromCSRDetailWHfromCSR

    PROPERTIES(d) READONLY FORCE PANEL originalNameArticleSkuWHfromCSRDetail, nameCountryOfOriginArticleSkuWHfromCSRDetail,
                                       nameBrandSupplierArticleSkuWHfromCSRDetail, netWeightArticleSkuWHfromCSRDetail,
                                       mainCompositionOriginArticleSkuWHfromCSRDetail

    PROPERTIES(d) FORCE PANEL sidGenderArticleSkuWHfromCSRDetail BACKGROUND backgroundWHfromCSRDetail(d),
                              c = nameCategoryArticleSkuWHfromCSRDetail BACKGROUND backgroundWHfromCSRDetail(d),
                              nameTypeFabricArticleSkuWHfromCSRDetail BACKGROUND backgroundWHfromCSRDetail(d),
                              u = nameUnitOfMeasureArticleSkuWHfromCSRDetail BACKGROUND backgroundWHfromCSRDetail(d),
                              netWeightSkuWHfromCSRDetail BACKGROUND backgroundWHfromCSRDetail(d),
                              nameCountryOfOriginSkuWHfromCSRDetail BACKGROUND backgroundWHfromCSRDetail(d),
                              mainCompositionOriginSkuWHfromCSRDetail BACKGROUND backgroundWHfromCSRDetail(d),
                              additionalCompositionOriginSkuWHfromCSRDetail BACKGROUND backgroundWHfromCSRDetail(d),
                              coefficientArticleSkuWHfromCSRDetail BACKGROUND backgroundWHfromCSRDetail(d)

    FILTERS inWHfromCSRWHfromCSRDetail(w, d)

    FILTERGROUP filtersQuantity
        FILTER 'Показывать принятые' 'F9' quantityWHfromCSRDetail(d) DEFAULT

//    FILTERGROUP filtersDiff
//        FILTER 'Показывать отличающиеся' 'F10' diffQuantityWHfromCSRDetail(d)

    EDIT WHfromCSR OBJECT w
;

DESIGN WHfromCSR FROM DEFAULT {

    main {

        NEW top {
            childConstraints =  TO THE BOTTOM;

            w.box{
                NEW head{
                    caption = 'Шапка документа';
                    childConstraints = TO THE RIGHT;
                    ADD PROPERTY(numberObject);
                    ADD PROPERTY(seriesObject);
                    ADD PROPERTY(dateWHfromCSR);
                    ADD PROPERTY(timeWHfromCSR);
                    ADD PROPERTY(nameWarehouseWHfromCSR);
                }

                NEW freightUnit{
                    caption = 'Короб';
                    childConstraints = TO THE RIGHT;
                    ADD PROPERTY(quantityRemainedPositionSkuWHfromCSR);
                    ADD PROPERTY(quantityRemainedSkuWHfromCSR);
                    ADD PROPERTY(barcodeCurrentFreightUnit);
                    ADD PROPERTY(fillWHfromCSRDetailsSkuFreightUnit);
                    ADD PROPERTY(printMarksSkuFreightUnit);
                }
            }
        }

        preferredSize = (1024, 768);
        NEW firstCase {
            caption = 'Атрибуты поставщика';
            ADD PROPERTY(originalNameArticleSkuWHfromCSRDetail);
            ADD PROPERTY(nameCountryOfOriginArticleSkuWHfromCSRDetail);
            ADD PROPERTY(nameBrandSupplierArticleSkuWHfromCSRDetail);
            ADD PROPERTY(netWeightArticleSkuWHfromCSRDetail);
            ADD PROPERTY(mainCompositionOriginArticleSkuWHfromCSRDetail);
        }

        NEW secondCase {
            caption = 'Внутренние атрибуты';
            ADD PROPERTY(sidGenderArticleSkuWHfromCSRDetail);
            ADD PROPERTY(c);
            ADD PROPERTY(nameTypeFabricArticleSkuWHfromCSRDetail);
            ADD PROPERTY(u);
            ADD PROPERTY(netWeightSkuWHfromCSRDetail);
            ADD PROPERTY(nameCountryOfOriginSkuWHfromCSRDetail);
            ADD PROPERTY(mainCompositionOriginSkuWHfromCSRDetail);
            ADD PROPERTY(additionalCompositionOriginSkuWHfromCSRDetail);
            ADD PROPERTY(coefficientArticleSkuWHfromCSRDetail);
        }

        ADD functions.box;
    }
}

actionFormWHfromCSR (WHfromCSR) = ACTION FORM WHfromCSR OBJECTS w = WHfromCSR MODAL;

acceptWHfromCSRWHfromCSI 'Создать приемку' (WHfromCSI)= ACTION (WHfromCSI) NEWSESSION {
    ADDOBJ WHfromCSR;
    FOR w == addedObject() DO {
        SET WHfromCSIWHfromCSR (w) <- WHfromCSI AS WHfromCSI;
        SET warehouseWHfromCSR (w) <- warehouseWHfromCSI(WHfromCSI);
        FORM WHfromCSR OBJECTS w = w MODAL;
        IF formResult() == formResult.ok THEN EXEC apply();
    }
};

modifyWHfromCSRWHfromCSI 'Редактировать приемку' (WHfromCSI)= ACTION (WHfromCSI) NEWSESSION {
        FORM WHfromCSR OBJECTS w = WHfromCSRWHfromCSI(WHfromCSI) MODAL;
        IF formResult() == formResult.ok THEN EXEC apply();
} IMAGE 'edit.png';

deleteWHfromCSRWHfromCSI 'Удалить приемку' (WHfromCSI)= ACTION (WHfromCSI) {
    FOR w == WHfromCSRWHfromCSI(WHfromCSI) DO {
        EXEC delete(w);
        EXEC apply();
    }
} IMAGE 'delete.png';

postWHfromCSRWHfromCSI 'Закрыть приемку' (WHfromCSI) = postWHfromCSR(WHfromCSRWHfromCSI(WHfromCSI));
isDraftWHfromCSRWHfromCSI (WHfromCSI) = isDraftWHfromCSR(WHfromCSRWHfromCSI(WHfromCSI));

unpostWHfromCSRWHfromCSI 'Открыть приемку' (WHfromCSI) = unpostWHfromCSR(WHfromCSRWHfromCSI(WHfromCSI));
isPostedWHfromCSRWHfromCSI (WHfromCSI) = isPostedWHfromCSR(WHfromCSRWHfromCSI(WHfromCSI));

nameCategoryArticleSkuWHfromCSIDetail 'Номенклатурная группа' (WHfromCSIDetail) = nameCategoryArticleSku(skuWHfromCSIDetail(WHfromCSIDetail));
nameUnitOfMeasureArticleSkuWHfromCSIDetail 'Ед. измерения товара' (WHfromCSIDetail) = nameUnitOfMeasureArticleSku(skuWHfromCSIDetail(WHfromCSIDetail));
barcodeFreightUnitWHfromCSIDetail 'Штрих-код короба' (WHfromCSIDetail) = barcode(freightUnitCStoWHDetail(CStoWHDetailWHfromCSIDetail(WHfromCSIDetail)));

FORM WHfromCSIs 'Поступления товара с СВХ'
    OBJECTS w = WHfromCSI
    PROPERTIES (w) READONLY objectClassName, statusWHfromCSI, numberObject, seriesObject, dateWHfromCSI, timeWHfromCSI,
                            nameWarehouseWHfromCSI, nameCustomStoreWHfromCSI, countWHfromCSIDetailWHfromCSI, quantityWHfromCSIDetailWHfromCSI

    PROPERTIES (w) FORCE PANEL acceptWHfromCSRWHfromCSI SHOWIF notAcceptedWHfromCSI(w), modifyWHfromCSRWHfromCSI SHOWIF isAcceptedWHfromCSI(w),
                               deleteWHfromCSRWHfromCSI SHOWIF isAcceptedWHfromCSI(w), postWHfromCSRWHfromCSI SHOWIF isDraftWHfromCSRWHfromCSI(w),
                               unpostWHfromCSRWHfromCSI SHOWIF isDraftWHfromCSRWHfromCSI(w)

    OBJECTS di = WHfromCSIDetail
    PROPERTIES(di) READONLY indexWHfromCSIDetail, barcodeWHfromCSIDetail, nameCategoryArticleSkuWHfromCSIDetail,
                            nameBrandWHfromCSIDetail, sidArticleWHfromCSIDetail, sidSizeWHfromCSIDetail,
                            sidColorWHfromCSIDetail, nameColorWHfromCSIDetail, barcodeFreightUnitWHfromCSIDetail,
                            quantityWHfromCSIDetail, nameUnitOfMeasureArticleSkuWHfromCSIDetail

    FILTERS WHfromCSIWHfromCSIDetail(di) == w

    OBJECTS dr = WHfromCSRDetail
    PROPERTIES(dr) READONLY indexWHfromCSRDetail, barcodeWHfromCSRDetail, nameCategoryArticleSkuWHfromCSRDetail,
                            nameBrandWHfromCSRDetail, sidArticleWHfromCSRDetail, sidSizeWHfromCSRDetail,
                            sidColorWHfromCSRDetail, nameColorWHfromCSRDetail, barcodeFreightUnitWHfromCSRDetail,
                            quantityWHfromCSRDetail, nameUnitOfMeasureArticleSkuWHfromCSRDetail

//    FILTERS WHfromCSIWHfromCSR(WHfromCSRWHfromCSRDetail(dr)) == w

    OBJECTS df = WHfromCSDDetail
    PROPERTIES (df) indexWHfromCSDDetail, objectClassName, barcodeWHfromCSDDetail, quantityWHfromCSDDetail
//    FILTERS WHfromCSIWHfromCSD(WHfromCSDWHfromCSDDetail(df))==w

;

DESIGN WHfromCSIs FROM DEFAULT {
    NEW docDetails.box BEFORE functions.box{
        type=TABBED;
        ADD di.box;
        ADD dr.box {
            title = 'Приемка';
                ADD PROPERTY (deleteWHfromCSRWHfromCSI(w)) {
                    panelLocation = TOOLBAR;
                    askConfirm = TRUE;
                }
                ADD PROPERTY (acceptWHfromCSRWHfromCSI(w)) {
                    panelLocation = TOOLBAR;
                    askConfirm = TRUE;
                }
                ADD PROPERTY (modifyWHfromCSRWHfromCSI(w)){
                    panelLocation = TOOLBAR;
//                    askConfirm = TRUE;
                }
                ADD PROPERTY (postWHfromCSRWHfromCSI(w)) {
                    panelLocation = TOOLBAR;
                    askConfirm = TRUE;
                }
        };
        ADD df.box {
             title = 'Акт расхождений';
        };
    }
}
