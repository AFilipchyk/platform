MODULE WholesalePrice;

REQUIRE System,
        Declaration,
        MasterData,
        RomanLogicsModule;

PRIORITY RomanLogicsModule, RB;

CLASS wholesalePriceDocument 'Оптовый прайс' : transaction, numeratedObject;

defaultNumeratorWholesalePriceDocument = DATA numerator ();
nameDefaultNumeratorWholesalePriceDocument 'Нумератор для оптовых прайсов' = name(defaultNumeratorWholesalePriceDocument());

initValueNumeratorObject(object) += defaultNumeratorWholesalePriceDocument() IF object IS wholesalePriceDocument;
initWhenNumeratorObject(object) += ASSIGNED(object IS wholesalePriceDocument);

timeWholesalePriceDocument 'Время документа' = DATA TIME (wholesalePriceDocument);
timeWholesalePriceDocument (wholesalePriceDocument) <- currentTime() WHEN ASSIGNED(wholesalePriceDocument AS wholesalePriceDocument);

TABLE wholesalePriceDocument (wholesalePriceDocument);
TABLE wholesalePriceDocumentArticle (wholesalePriceDocument, article);

dateTimeWholesalePriceDocument 'Дата/время' = DATA DATETIME(wholesalePriceDocument);
dateTimeWholesalePriceDocument(wholesalePriceDocument) <- currentDateTime() WHEN ASSIGNED(wholesalePriceDocument IS wholesalePriceDocument);

declarationWholesalePriceDocument 'Декларация оптового прайса (ИД)' = DATA declaration(wholesalePriceDocument) IN idGroup;

quantityWholesalePriceSetDocumentDeclaration (declaration) = GROUP SUM 1 IF declarationWholesalePriceDocument(wholesalePriceDocument)
                                                           BY declarationWholesalePriceDocument(wholesalePriceDocument);
isWholesalePriceSetDocumentDeclaration (declaration) = TRUE IF NOT quantityWholesalePriceSetDocumentDeclaration(declaration) AND declaration IS declaration;

isPriceSetDeclaration 'Статус' (declaration) = IF isWholesalePriceSetDocumentDeclaration(declaration)
                                     THEN 'Не расцененная' AND declaration IS declaration
                                     ELSE 'Расцененная' AND declaration IS declaration;

backgroundWholesalePriceSetDocument 'Цвет' (declaration) = RGB(255, 128, 128) IF isPriceSetDeclaration (declaration) == 'Не расцененная';

inArticleWholesalePriceDocument 'Товар в документе' = DATA BOOLEAN(wholesalePriceDocument, article);

priceCustomWholesalePriceDocumentArticle 'Себестоимость (БУ)' (wholesalePriceDocument, article) = DATA NUMERIC[14,2](wholesalePriceDocument, article) IN baseGroup;

priceManagerialWholesalePriceDocumentArticle 'Себестоимость (УУ)' (wholesalePriceDocument, article) = DATA NUMERIC[14,2](wholesalePriceDocument, article) IN baseGroup;

markupWholesalePriceDocumentArticle 'Оптовая надбавка' = DATA NUMERIC[8,3] (wholesalePriceDocument, article);

markupWholesalePriceDocumentArticle(wholesalePriceDocument, article) <- 0.0 //IF (wholesalePriceDocument IS wholesalePriceDocument AND article IS article)
    WHEN ASSIGNED (inArticleWholesalePriceDocument(wholesalePriceDocument, article));

priceWholesalePriceDocumentArticle 'Оптовая цена' = DATA NUMERIC[14,2](wholesalePriceDocument, article) IN baseGroup;

priceWholesalePriceDocumentArticle(wholesalePriceDocument, article) <-
    (priceCustomWholesalePriceDocumentArticle(wholesalePriceDocument, article)*(1+markupWholesalePriceDocumentArticle(wholesalePriceDocument, article)/100))
    WHEN CHANGED (markupWholesalePriceDocumentArticle(wholesalePriceDocument, article));

orderWholesalePriceDocument = LIST(dateTimeWholesalePriceDocument(wholesalePriceDocument), wholesalePriceDocument) PERSISTENT;

concatWholesalePriceDocumentArticleDateTime (article, dateTime) = GROUP MAX orderWholesalePriceDocument(wholesalePriceDocument) AND
                                                                   priceWholesalePriceDocumentArticle(wholesalePriceDocument, article) AND
                                                                   dateTimeWholesalePriceDocument(wholesalePriceDocument) < (dateTime AS DATETIME)
                                                                BY article, dateTime;

documentWholesalePriceArticleDateTime (article, dateTime) = concatWholesalePriceDocumentArticleDateTime(article, dateTime)[2];

priceWholesaleArticleDateTime(article, dateTime) = priceWholesalePriceDocumentArticle(documentWholesalePriceArticleDateTime(article, dateTime), article);

//подстановка значений себестоимости из последнего оптового прайса
priceCustomWholesaleArticleDateTime(article, dateTime) =  priceCustomWholesalePriceDocumentArticle (documentWholesalePriceArticleDateTime(article, dateTime), article);
prevPriceCustomWholesaleArticleDateTime(article, dateTime) =  PREV(priceCustomWholesalePriceDocumentArticle (documentWholesalePriceArticleDateTime(article, dateTime), article));

priceCustomWholesalePriceDocumentArticle (wholesalePriceDocument, article) <- prevPriceCustomWholesaleArticleDateTime(article, dateTimeWholesalePriceDocument(wholesalePriceDocument))
    WHEN ASSIGNED (inArticleWholesalePriceDocument(wholesalePriceDocument, article));

priceManagerialWholesaleArticleDateTime(article, dateTime) =  priceManagerialWholesalePriceDocumentArticle (documentWholesalePriceArticleDateTime(article, dateTime), article);
prevPriceManagerialWholesaleArticleDateTime(article, dateTime) =  PREV(priceManagerialWholesalePriceDocumentArticle (documentWholesalePriceArticleDateTime(article, dateTime), article));

priceManagerialWholesalePriceDocumentArticle (wholesalePriceDocument, article) <- prevPriceManagerialWholesaleArticleDateTime(article, dateTimeWholesalePriceDocument(wholesalePriceDocument))
    WHEN ASSIGNED (inArticleWholesalePriceDocument(wholesalePriceDocument, article));

FORM wholesalePriceDocument 'Оптовый прайс'

    OBJECTS w=wholesalePriceDocument FIXED PANEL
    PROPERTIES(w) nameNumeratorObject, numberObject, seriesObject, date, timeWholesalePriceDocument

    TREE treeSupplierBrand v=STRING[3], s=supplier, b=brandSupplier
    PROPERTIES READONLY OBJVALUE(v), name(s), name(b)

    TREE treeCategory vv=STRING[3], c=category
    PROPERTIES READONLY OBJVALUE(vv), name(c)

    OBJECTS aa=article
    PROPERTIES (aa) READONLY sidArticle, nameCategoryArticle, nameBrandSupplierArticle, currentBalanceArticle
    PROPERTIES (w, aa) inArticleWholesalePriceDocument

    FILTERS stringEqualsAll(v), inBrandSupplier(s, b), inSupplierBrandArticle(s, b, aa), stringEqualsAll(vv), inArticleCategory(c, aa)

    OBJECTS a=article
    PROPERTIES(a) READONLY sidArticle, nameCategoryArticle, nameBrandSupplierArticle
    PROPERTIES (w, a) priceCustomWholesalePriceDocumentArticle, priceManagerialWholesalePriceDocumentArticle,
                      markupWholesalePriceDocumentArticle, priceWholesalePriceDocumentArticle

    FILTERS inArticleWholesalePriceDocument(w, a), inSupplierBrandArticle(s, b, a), inArticleCategory(c, a)

    FILTERGROUP filtersBalance
        FILTER 'Ненулевые остатки' 'F8' currentBalanceArticle(aa) DEFAULT

    FILTERGROUP filtersCategory
        FILTER 'Показывать артикулы ном. группы' 'F10' inArticleCategory(c, a)
    FILTERGROUP filtersBrand
        FILTER 'Показывать артикулы бренда' 'F11' inArticleBrand(b, a)

    EDIT wholesalePriceDocument OBJECT w
;


DESIGN wholesalePriceDocument FROM DEFAULT {
    main {

        ADD w.box{
            childConstraints = TO THE RIGHT;
            ADD PROPERTY(nameNumeratorObject);
            ADD PROPERTY(numberObject);
            ADD PROPERTY(seriesObject);
            ADD PROPERTY(date);
            ADD PROPERTY(timeWholesalePriceDocument);
        }

        NEW allContainer {
            childConstraints = TO THE BOTTOM;
            type = SPLITV;

            NEW topContainer {

                childConstraints = TO THE RIGHT;
                type = SPLITH;

                NEW treeContainer {

                    childConstraints = TO THE RIGHT;
                    type = SPLITH;

                    ADD treeSupplierBrand.tree.box {
                        fillHorizontal = 1.5;
                    }

                    ADD treeCategory.tree.box {
                        fillHorizontal = 1.5;
                    }
                }

                ADD aa.box {
                    fillHorizontal = 1.5;
                }
            }

            ADD a.box {
                fillVertical = 1.5;
            }
        }
    }

    ADD functions.box;
}


FORM wholesalePriceDocuments 'Оптовые прайсы'

    OBJECTS w=wholesalePriceDocument
    PROPERTIES(w) READONLY numberObject, seriesObject, dateTimeWholesalePriceDocument
    PROPERTIES(w) ADDFORM, EDITFORM, delete

    OBJECTS a=article
    PROPERTIES(a) READONLY sidArticle, nameCategoryArticle, nameBrandSupplierArticle
    PROPERTIES (w, a) READONLY priceCustomWholesalePriceDocumentArticle, priceManagerialWholesalePriceDocumentArticle,
                               markupWholesalePriceDocumentArticle, priceWholesalePriceDocumentArticle

    FILTERS inArticleWholesalePriceDocument(w, a)
;


toCreateWholesalePriceDocument 'Расценить' =  ACTION (declaration) NEWSESSION {
    ADDOBJ wholesalePriceDocument;
    FOR w == addedObject() DO {
        SET declarationWholesalePriceDocument(w) <- declaration AS declaration;
        SET priceCustomWholesalePriceDocumentArticle(w, article) <- priceCustomDeclarationArticle(declaration, article);
        SET priceManagerialWholesalePriceDocumentArticle(w, article) <- priceManagerialDeclarationArticle(declaration, article);
        SET priceWholesalePriceDocumentArticle(w, article) <- priceCustomDeclarationArticle(declaration, article);
        SET inArticleWholesalePriceDocument(w, article) <- inDeclarationArticle(declaration, article);

        FORM wholesalePriceDocument OBJECTS w=addedObject() MODAL;
        IF formResult() == formResult.ok THEN {
            EXEC apply();
        };
    };
} TOOLBAR CONFIRM;

FORM priceDeclaration 'Расценка деклараций'
    OBJECTS d = registeredDeclaration
    PROPERTIES(d) READONLY isPriceSetDeclaration BACKGROUND backgroundWholesalePriceSetDocument(d),
                           sidDeclaration BACKGROUND isWholesalePriceSetDocumentDeclaration(d),
                           dateTimeDeclaration, nameCustomStoreDeclaration, nameImporterDeclaration
    PROPERTIES(d) toCreateWholesalePriceDocument SHOWIF isWholesalePriceSetDocumentDeclaration(d)

    FILTERGROUP filtersDocument
        FILTER 'Показывать нерасценённые декларации' 'F11' isWholesalePriceSetDocumentDeclaration(d) DEFAULT
;
