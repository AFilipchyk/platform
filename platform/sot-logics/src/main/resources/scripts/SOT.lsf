MODULE SOT;

REQUIRE System,
        Integration,
        Item,
        LegalEntity,
        PurchaseInvoice,
        PurchaseShipment,
        SalePurchaseInvoice,
        Shipment,
        Stock,
        Warehouse,
        PriceListWarehouse,
        PriceListStore,
        MasterData;

CLASS SotUOM 'Единица измерений SOT' : Externalizable;
TABLE sotUOM(SotUOM);

nameSotUOM 'Наименование' (sotUOM) = DATA STRING[100](SotUOM) IN base;

netWeightSotUOM 'Вес нетто' (sotUOM) = DATA NUMERIC[9,3](SotUOM) IN base;

UOMSotUOM 'Единица измерений' = DATA UOM (SotUOM);
nameUOMSotUOM 'Единица измерений' (sotUOM) = name(UOMSotUOM(sotUOM)) IN base;

sotUOMWeightUOM (weight, uom) = GROUP MAX sotUOM BY netWeightSotUOM(sotUOM), UOMSotUOM(sotUOM);

sotUOMItem = DATA SotUOM (Item);
nameSotUOMItem 'Единица измерений SOT' (item) = nameSotUOM(sotUOMItem(item)) IN itemBaseGroup;

sotSIDItem 'SOT SID'= DATA STRING[100] (Item);
sotSIDUserInvoiceDetail 'SOT SID' = DATA STRING[100] (Purchase.UserInvoiceDetail) IN base;

sotSIDBatch 'SOT SID' (batch) = ABSTRACT STRING[100] (Batch) PERSISTENT;
sotSIDBatch (batch) += sotSIDUserInvoiceDetail(invoiceDetailShipmentDetail(shipmentDetailShipmentBatch(batch))) IF batch IS ShipmentBatch;

sotSIDOverrideUserInvoiceDetail (userInvoiceDetail) = sotSIDItem (Sale.skuInvoiceDetail(userInvoiceDetail)) OR sotSIDBatch (Sale.batchInvoiceDetail(userInvoiceDetail));

sotUOMItem(i) <- sotUOMWeightUOM(netWeightItem(i), UOMItem(i)) WHEN CHANGED(netWeightItem(i)) OR CHANGED(UOMItem(i));

mag2LegalEntityStock 'Код MAG2'= DATA STRING[100] (LegalEntity, Stock);
mag2Stock 'Код MAG2' (stock) = mag2LegalEntityStock(legalEntityStock(stock), stock);

EXTEND FORM item PROPERTIES(i) BEFORE nameUOMItem(i) nameSotUOMItem SHOWIF showUOMItem(i);
EXTEND FORM items PROPERTIES(i) dateTimeLastMovedSku, sotSIDItem, sidExternalizable;

EXTEND FORM warehouses
    PROPERTIES (w) READONLY mag2Stock BEFORE delete(w)//, sidExternalizable BEFORE delete(w)
;

EXTEND FORM batches
    PROPERTIES (bt) READONLY sotSIDBatch BEFORE nameSkuBatch(bt)
;

FORM sotUOMs 'Единицы измерений SOT'
    OBJECTS su=SotUOM
    PROPERTIES(su) sidExternalizable, nameSotUOM, netWeightSotUOM, nameUOMSotUOM, ADDOBJ, delete
;

EXTEND FORM itemGroups
    PROPERTIES (g) READONLY sidExternalizable BEFORE delete(g)
;

changeClassStock 'Сделать магазином' = ACTION (warehouse) NEWSESSION AUTOAPPLY {

    LOCAL n = STRING[110]();
    LOCAL a = STRING[100]();
    LOCAL le = LegalEntity();
    LOCAL la = NUMERIC[10,5]();
    LOCAL lo = NUMERIC[10,5]();
    LOCAL p = PriceStockGroup();
    LOCAL i = INTEGER();
    LOCAL w = WriteOffCommittee();
    LOCAL e = Employee();
    LOCAL ee = Employee();
    LOCAL eee = Employee();
    LOCAL b = BOOLEAN();
    LOCAL r = BOOLEAN (Employee);

    SET n() <- name(warehouse);
    SET a() <- addressWarehouse(warehouse);
    SET le() <- legalEntityWarehouse(warehouse);
    SET la() <- latitudeWarehouse(warehouse);
    SET lo() <- longitudeWarehouse(warehouse);
    SET p() <- priceStockGroupWarehouse(warehouse);
    SET i() <- quantityDaysCloseWarehouse(warehouse);
    SET w() <- writeOffCommitteeStock(warehouse);
    SET e() <- MRPStock(warehouse);
    SET ee() <- accountantStock(warehouse);
    SET eee() <- auditorStock(warehouse);
    SET b() <- explicitBatchLedgerWarehouse(warehouse);

    FOR inEmployeeDivisionEmployee(warehouse, employee) DO {
        SET r(employee) <- inEmployeeDivisionEmployee(warehouse, employee);
    }

    CHANGECLASS warehouse TO DepartmentStore;

    FOR ADDOBJ s = Store DO{
        SET name(s) <- n();
        SET addressStore(s) <- a();
        SET legalEntityStore(s) <- le();
        SET latitudeStore(s) <- la();
        SET longitudeStore(s) <- lo();
        SET priceStockGroupStore(s) <- p();

        SET name(warehouse) <- n();
        SET storeDepartmentStore(warehouse) <- s;
        SET quantityDaysCloseDepartmentStore(warehouse) <- i();
        SET writeOffCommitteeStock(warehouse) <- w();
        SET MRPStock(warehouse) <- e();
        SET accountantStock(warehouse) <- ee();
        SET auditorStock(warehouse) <- eee();
        SET explicitBatchLedgerDepartmentStore(warehouse) <- b();
        FOR r(employee) DO {
            SET inEmployeeDivisionEmployee(warehouse, employee) <- r(employee);
        }
    }
};

changeClassForStock 'Сделать магазинами' = ACTION () {
    FOR mag2Stock(stock) AND stock IS Warehouse DO {
        EXEC changeClassStock(stock);
    }
}

EXTEND FORM migrationData
    PROPERTIES() changeClassForStock
;

NAVIGATOR {
    masterData {
            skuNavigator {
                ADD sotUOMs;
            }
    }
}