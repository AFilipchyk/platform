MODULE Rublevski;

IMPORT BaseLogicsModule;

// ----------------------------------- Товарный классификатор ------------------------------------------ //
CLASS itemGroup 'Товарная группа' : named;

parentItemGroup = DATA itemGroup (itemGroup);
nameParentItemGroup 'Родительская группа' = name(parentItemGroup(itemGroup));

FORM itemGroup 'Товарная группа'
OBJECTS g=itemGroup
PROPERTIES(g) name, nameParentItemGroup;

FORM itemGroups 'Товарные группы'
OBJECTS g=itemGroup
PROPERTIES(g) READONLY name, nameParentItemGroup
PROPERTIES(g) ADDFORM, EDITFORM, delete;

// ----------------------------------- Единицы измерения ------------------------------------------ //
CLASS unitOfMeasure 'Единица измерения' : named;
shortNameUnitOfMeasure 'Краткое наименование' = DATA STRING[4] (unitOfMeasure) IN baseGroup;

FORM unitOfMeasure 'Единица измерения'
OBJECTS u=unitOfMeasure FIXED PANEL
PROPERTIES(u) name, shortNameUnitOfMeasure;

FORM unitsOfMeasure 'Единицы измерений'
OBJECTS u=unitOfMeasure
PROPERTIES(u) READONLY name, shortNameUnitOfMeasure
PROPERTIES(u) ADDFORM, EDITFORM, delete;

// ----------------------------------- Товар ------------------------------------------ //
CLASS ABSTRACT sku 'SKU' : named;
CLASS item 'Товар' : sku;
CLASS brand 'Бренд' : named;

brandItem = DATA brand(item);
unitOfMeasureItem = DATA unitOfMeasure (item) IN idGroup;
shortNameUnitOfMeasureItem 'Единица измерения' = shortNameUnitOfMeasure(unitOfMeasureItem(item)) IN baseGroup;
kindItem = DATA STRING[20] (item);

FORM item 'Товар'
OBJECTS i=item FIXED PANEL
PROPERTIES(i) name, shortNameUnitOfMeasureItem;

FORM items 'Товары'
OBJECTS i=item
PROPERTIES(i) READONLY name, shortNameUnitOfMeasureItem
PROPERTIES(i) ADDFORM, EDITFORM, delete;

// ----------------------------------- Штрих код ------------------------------------------ //
CLASS barcode 'Штрих код' : barcodeObject;

// ----------------------------------- Склад ------------------------------------------ //

CLASS ABSTRACT stock 'Склад' : named;

// ----------------------------------- Магазин ----------------------------------------- //

CLASS store 'Магазин' : named;
addressStore 'Адрес магазина' = DATA STRING[100] (store) IN baseGroup;

// ----------------------------------- Отдел магазина (Подразделение) ----------------- //

CLASS departmentStore 'Отдел магазина' : stock;

storeDepartmentStore 'Магазин отдела (ИД)' = DATA store (departmentStore) IN idGroup;
nameDepartmentStore 'Наименование отдела магазина' = DATA STRING[100] (departmentStore) IN baseGroup;

inStoreDepartment(store, department) = storeDepartmentStore(department) == store;

FORM store 'Магазин'
OBJECTS s=store FIXED PANEL, d=departmentStore
PROPERTIES(s) READONLY name, addressStore
PROPERTIES(d) name, ADDOBJ, delete
FILTERS NOT NULL inStoreDepartment(s, d);

FORM stores 'Магазины'
OBJECTS s=store
PROPERTIES(s) READONLY name, addressStore
PROPERTIES(s) ADDFORM, EDITFORM, delete;

//CLASS STATIC departmentStoreType 'Типа отдела магазина'
//{
//    productionStore 'Производство магазина',
//    tradingFloorStore 'Торговый зал магазина',
//};

// ----------------------------------- Банк ------------------------------------------- //

CLASS bank 'Банк' : named;

addressBank 'Адрес банка' = DATA STRING[100] (bank) IN baseGroup;
MFOBank 'Код МФО' = DATA STRING[9] (bank) IN baseGroup;
departmentBank 'Отдел банка' = DATA STRING[100] (bank) IN baseGroup;
CBUBank 'ЦБУ' = DATA STRING[3] (bank) IN baseGroup;
infoBank 'Дополнительные сведения' = DATA STRING[100] (bank) IN baseGroup;

FORM banks 'Банки'
OBJECTS b=bank
PROPERTIES(b) name, addressBank, MFOBank, departmentBank, CBUBank, infoBank;
PROPERTIES(b) ADDFORM, EDITFORM, delete;

// ----------------------------------- Расчетный счет ------------------------------------------ //

CLASS account 'Расчетный счет';

bankAccount 'Банк (ИД)' = DATA bank (account) IN idGroup;
dataAccount 'Номер расчетного счета'  = DATA STRING[13] (account) IN baseGroup;
nameBankAccount 'Наименование банка' (account) = name(bankAccount(account)) IN baseGroup;
addressBankAccount 'Адрес банка' (account) = addressBank(bankAccount(account)) IN baseGroup;
MFOBankAccount 'Код МФО банка' (account) = MFOBank(bankAccount(account)) IN baseGroup;
departmentBankAccount 'Отдел банка' (account) = departmentBank(bankAccount(account)) IN baseGroup;
CBUBankAccount 'ЦБУ банка' (account) = CBUBank(bankAccount(account)) IN baseGroup;

// ----------------------------------- Юридическое лицо ------------------------------------------ //

CLASS ABSTRACT legalEntity 'Юридическое лицо' : named;

shortNameLegalEntity 'Сокращенное наименование' = DATA STRING[30] (legalEntity) IN baseGroup;
fullNameLegalEntity 'Полное  наименование' = DATA STRING[200] (legalEntity) IN baseGroup;
addressLegalEntity 'Фактический адрес :' = DATA STRING[100] (legalEntity) IN baseGroup;
lawLegalEntity 'Юридический адрес :' = DATA STRING[100] (legalEntity) IN baseGroup;
postAddressLegalEntity 'Почтовый адрес :' = DATA STRING[100] (legalEntity) IN baseGroup;
phoneLegalEntity 'Телефоны' = DATA STRING[100] (legalEntity) IN baseGroup;
UNPLegalEntity 'УНП' = DATA STRING[9] (legalEntity) IN baseGroup;
OKPOLegalEntity 'ОКПО' = DATA STRING[20] (legalEntity) IN baseGroup;
emailLegalEntity 'e-mail' = DATA STRING[100] (legalEntity) IN baseGroup;
siteLegalEntity 'Сайт' = DATA STRING[100] (legalEntity) IN baseGroup;
licenseLegalEntity 'Номер лицензии' = DATA STRING[20] (legalEntity) IN baseGroup;
dateFromLicenseLegalEntity 'Дата выдачи лицензии' = DATA DATE (legalEntity) IN baseGroup;
dateToLicenseLegalEntity 'Дата окончания лицензии' = DATA DATE (legalEntity) IN baseGroup;

legalEntityAccount 'Ю.Л. (ИД)' = DATA legalEntity (account) IN idGroup;

// ----------------------------------- Договор ------------------------------------------ //

CLASS STATIC contractType 'Тип договора'
{
    sale 'договор купли-продажи',
    commission 'договор комиссии'
};

CLASS STATIC contractForm 'Порядок оплаты'
{
    delay 'с отсрочкой платежа',
    prepayment 'по предоплате',
    partial 'частичная предоплата',
    implement 'на реализацию'
};

dataContract 'Номер договора' = DATA STRING[30] (contract) IN baseGroup; // номер договора с и по валюта
formContract 'Порядок оплаты договора' = DATA contractForm (contract) IN baseGroup;
typeContract 'Тип договора' = DATA contractType (contract) IN baseGroup;
dateFromContract 'Действует с' = DATA STRING[20] (contract) IN baseGroup;
dateToContract 'Действует по' = DATA STRING[20] (contract) IN baseGroup;
currencyContract 'Валюта взаиморасчетов' = DATA STRING[20] (contract) IN baseGroup; // может и не надо   или справочником

// ----------------------------------- Поставщик ------------------------------------------ //

CLASS supplier 'Поставщик' : legalEntity;
CLASS organization 'Организация' : legalEntity;
CLASS ABSTRACT contract 'Договор' : named;
CLASS contractProvider 'Договор с поставщиком' : contract;
