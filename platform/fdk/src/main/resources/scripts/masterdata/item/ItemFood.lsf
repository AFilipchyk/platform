MODULE ItemFood;

REQUIRE System, Item;

NAMESPACE Item;

GROUP itemFoodGroup 'Пищевые характеристики' : public;

// Вкус
CLASS Taste 'Вкус товара';
TABLE taste(Taste);

nameTaste 'Наименование' = DATA ISTRING[50](Taste);

@defineObjectItemAttribute(taste, nameTaste, 'Вкус', itemFoodGroup);
@defineObjectItemAttributeBatch (taste, nameTaste, 'Вкус');

// Степень охлаждения
CLASS CoolingDegree 'Степень охлаждения товара';
TABLE coolingDegree(CoolingDegree);

nameCoolingDegree 'Наименование' = DATA ISTRING[50](CoolingDegree);
shortNameCoolingDegree 'Краткое наименование' = DATA ISTRING[10](CoolingDegree);

@defineObjectItemAttribute(coolingDegree, nameCoolingDegree, 'Степень охлаждения', itemFoodGroup);
@defineObjectItemAttributeBatch (coolingDegree, nameCoolingDegree, 'Степень охлаждения');
//@implementObjectShortItemAttribute(coolingDegree, 'Степень охлаждения (сокр.)');

// Жирность
@defineDoubleItemAttribute(percentFat, NUMERIC[5,1], '% жирности', itemFoodGroup);
@defineItemAttributeBatch (percentFat, '% жирности');

// Алкоголь
@defineDoubleItemAttribute(percentAlcohol, NUMERIC[5,1], '% алкоголя', itemFoodGroup);
@defineItemAttributeBatch (percentAlcohol, '% алкоголя');

overCopyItem(s, d) += ACTION (s, d) {
    SET tasteItem(d) <- tasteItem(s);
    SET coolingDegreeItem(d) <- coolingDegreeItem(s);
    SET percentFatItem(d) <- percentFatItem(s);
    SET percentAlcoholItem(d) <- percentAlcoholItem(s);
}

EXTEND DESIGN item { itemPrimaryColumn2 { ADD i.itemFoodGroup; } }
