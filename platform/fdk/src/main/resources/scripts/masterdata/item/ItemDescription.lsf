MODULE ItemDescription;

REQUIRE System, Item;

NAMESPACE Item;

GROUP itemDescriptionGroup 'Описание' : public;

// Вид
CLASS Type 'Вид товара' : Named;
TABLE type(Type);

@defineObjectItemAttribute(type, name, 'Вид', itemDescriptionGroup);
@defineObjectItemAttributeBatch (type, name, 'Вид');

// Сорт
CLASS Sort 'Сорт товара' : Named;
TABLE sort(Sort);

@defineObjectItemAttribute(sort, name, 'Сорт', itemDescriptionGroup);
@defineObjectItemAttributeBatch (sort, name, 'Сорт');

// Форма
CLASS Form 'Форма товара' : Named;
TABLE form(Form);

@defineObjectItemAttribute(form, name, 'Форма', itemDescriptionGroup);
@defineObjectItemAttributeBatch (form, name, 'Форма');

// Особенность
CLASS Feature 'Особенность товара' : DoubleNamed;
TABLE feature(Feature);

@defineObjectItemAttribute(feature, name, 'Особенность', itemDescriptionGroup);
@defineObjectItemAttributeBatch (feature, name, 'Особенность');
@implementObjectShortItemAttribute(feature, 'Особенность (сокр.)');

// Упаковка
CLASS Pack 'Упаковка' : DoubleNamed;
TABLE pack(Pack);

@defineObjectItemAttribute(pack, name, 'Упаковка', itemDescriptionGroup);
@defineObjectItemAttributeBatch (pack, name, 'Упаковка');
@implementObjectShortItemAttribute(pack, 'Упаковка (сокр.)');

// Свойство
@defineStringItemAttribute(property, STRING[100], 'Свойство', itemDescriptionGroup);
@defineItemAttributeBatch (property, 'Свойство');

// Кол-во компонентов
@defineIntegerItemAttribute(numberComponents, 'Кол-во компонентов', itemDescriptionGroup);
@defineItemAttributeBatch (numberComponents, 'Кол-во компонентов');

overCopyItem(s, d) += ACTION (s, d) {
    SET typeItem(d) <- typeItem(s);
    SET sortItem(d) <- sortItem(s);
    SET formItem(d) <- formItem(s);
    SET featureItem(d) <- featureItem(s);
    SET packItem(d) <- packItem(s);
    SET propertyItem(d) <- propertyItem(s);
    SET numberComponentsItem(d) <- numberComponentsItem(s);
}


EXTEND DESIGN item { itemPrimaryColumn1 { ADD i.itemDescriptionGroup; } }

