MODULE PurchaseWriteOff;

REQUIRE WriteOff, PurchaseShipment;
NAMESPACE Purchase;


//---------------------------------- Норма отходов ------------------------------------//
CLASS writeOffRate 'Норма отходов' : named, externalObject;
TABLE writeOffRate(writeOffRate);

percentWriteOffRate 'Норма,%' = DATA NUMERIC[10,3] (writeOffRate);
countryWriteOffRate  = DATA country (writeOffRate);
nameCountryWriteOffRate 'Страна' (writeOffRate) = name(countryWriteOffRate(writeOffRate)) IN baseGroup;

FORM writeOffRate 'Норма отходов'
    OBJECTS r=writeOffRate FIXED PANEL
    PROPERTIES(r) name, percentWriteOffRate, nameCountryWriteOffRate
    EDIT writeOffRate OBJECT r
;

writeOffRateCountrySku 'Норма отходов' = ABSTRACT writeOffRate (country, sku);
nameWriteOffRateCountrySku 'Норма отходов' = name(writeOffRateCountrySku(country, sku));
percentWriteOffRateCountrySku 'Норма отходов,%' = percentWriteOffRate(writeOffRateCountrySku(country, sku));

FORM writeOffRateDialog 'Нормы отходов'
    OBJECTS r=writeOffRate
    PROPERTIES(r) READONLY name, percentWriteOffRate, nameCountryWriteOffRate
    PROPERTIES(r) ADDSESSIONFORM, EDITSESSIONFORM, delete
    DIALOG writeOffRate OBJECT r
;

// ----------------------------------- Создавать по умолчанию для склада ------------------------------------------ //

createWriteOffStock 'Создавать акт списания' = DATA BOOLEAN (stock) IN createGroup;

//---------------------------------- Extend Invoice ------------------------------------//

@defineDocumentInterfaceCreate (invoice, createWriteOff, 'Создать акт списания');
@deriveDocumentHeaderCreate(userInvoice, createWriteOff, stock, customerStock);

@defineDocumentInterfaceDetailQuantityPrefix (invoice, writeOff, ' (списания)');
@defineDocumentInterfaceDetailPricePrefix(invoice, writeOff, ' (списания)');
@defineDocumentInterfaceDetailDataSumPrefix (invoice, writeOff, ' (списания)');
@deriveDocumentDetailSumPrefix(userInvoice, writeOff, currency, writeOffQuantity);
@defineDocumentInterfaceHeaderSumPrefix (invoice, writeOff, ' (списания)');
@defineDocumentInterfaceHeaderWriteOffCommittee(invoice, customerStock);

reasonInvoice 'Причина списания (ИД)' = ABSTRACT reason (invoice);
reasonUserInvoice 'Причина списания (ИД)' = DATA reason (userInvoice);
reasonInvoice(invoice) += reasonUserInvoice(invoice);
nameReasonInvoice 'Причина списания' (invoice) = name(reasonInvoice (invoice)) IN documentPrmGroup;
nameReasonUserInvoice 'Причина списания' (userInvoice) = name(reasonUserInvoice (userInvoice)) IN documentPrmGroup;

writeOffRateInvoiceDetail 'Норма отходов' (invoiceDetail) = ABSTRACT writeOffRate (invoiceDetail);
nameWriteOffRateInvoiceDetail 'Норма отходов' (invoiceDetail) = name(writeOffRateInvoiceDetail(invoiceDetail));
percentWriteOffRateInvoiceDetail 'Норма отходов,%' (invoiceDetail)= ABSTRACT NUMERIC[10,3] (invoiceDetail);

writeOffRateUserInvoiceDetail 'Норма отходов' (userInvoiceDetail) = DATA writeOffRate (userInvoiceDetail);
nameWriteOffRateUserInvoiceDetail 'Норма отходов' (userInvoiceDetail) = name(writeOffRateUserInvoiceDetail(userInvoiceDetail));
percentWriteOffRateUserInvoiceDetail 'Норма отходов,%' (invoiceDetail)= DATA NUMERIC[10,3] (userInvoiceDetail);

writeOffRateUserInvoiceDetail(detail) <- writeOffRateCountrySku(countryCustomerStockUserInvoiceDetail(detail), skuUserInvoiceDetail(detail)) WHEN
    CHANGED(countryCustomerStockUserInvoiceDetail(detail)) OR CHANGED(skuUserInvoiceDetail(detail));

percentWriteOffRateUserInvoiceDetail (detail) <- percentWriteOffRate(writeOffRateUserInvoiceDetail(detail)) WHEN
    CHANGED(writeOffRateUserInvoiceDetail(detail));

writeOffQuantityUserInvoiceDetail (detail) <- round3(shipmentQuantityUserInvoiceDetail(detail)*percentWriteOffRateUserInvoiceDetail (detail)/100)   WHEN
    CHANGED(shipmentQuantityUserInvoiceDetail(detail)) OR CHANGED(percentWriteOffRateUserInvoiceDetail (detail));

writeOffPriceUserInvoiceDetail (detail) <- priceUserInvoiceDetail(detail) WHEN CHANGED(priceUserInvoiceDetail(detail));

writeOffRateInvoiceDetail (detail) += writeOffRateUserInvoiceDetail(detail);
percentWriteOffRateInvoiceDetail (detail) += percentWriteOffRateUserInvoiceDetail(detail);

backgroundWrittenInvoice 'Цвет' (invoice) = RGB(212, 255, 212) IF invoice IS invoice;
toShowCreateWriteOffInvoice (invoice) = ABSTRACT BOOLEAN (invoice);

EXTEND FORM userInvoice
    PROPERTIES (i) createWriteOffUserInvoice BACKGROUND backgroundWrittenInvoice(i) SHOWIF toShowCreateWriteOffInvoice(i)
    PROPERTIES (i) BACKGROUND backgroundWrittenInvoice(i) SHOWIF createWriteOffUserInvoice(i)
                   nameWriteOffCommitteeUserInvoice, nameReasonUserInvoice, writeOffSumUserInvoiceDetailUserInvoice
    PROPERTIES (d) SHOWIF createWriteOffUserInvoice(i) BEFORE delete(d) BACKGROUND backgroundWrittenInvoice(i)
                   nameWriteOffRateUserInvoiceDetail, percentWriteOffRateUserInvoiceDetail, writeOffQuantityUserInvoiceDetail,
                   writeOffPriceUserInvoiceDetail,  writeOffSumUserInvoiceDetail
;
EXTEND DESIGN userInvoice {
    headerRow112 {
        title = 'Акт списания';
        childConstraints = TO THE RIGHTBOTTOM;
        ADD PROPERTY(createWriteOffUserInvoice);
        ADD PROPERTY(nameWriteOffCommitteeUserInvoice);
        ADD PROPERTY(nameReasonUserInvoice);
    }
}
EXTEND FORM invoices
    PROPERTIES (i) createWriteOffInvoice BACKGROUND backgroundWrittenInvoice(i)
    PROPERTIES (i) READONLY writeOffSumInvoiceDetailInvoice BACKGROUND backgroundWrittenInvoice(i) BEFORE ordersInvoice
    PROPERTIES (d) SHOWIF createWriteOffInvoice(i) BACKGROUND backgroundWrittenInvoice(i) writeOffQuantityInvoiceDetail,
                   writeOffPriceInvoiceDetail,  writeOffSumInvoiceDetail
;


//---------------------------------- Extend Shipment ------------------------------------//

GROUP shipmentGroup 'Информация о поставке' : baseGroup;

//createWriteOffShipment 'Создать акт списания' (shipment) = ABSTRACT BOOLEAN(shipment);
//createWriteOffUserShipment 'Создать акт списания' (userShipment) = DATA BOOLEAN(userShipment) IN documentPrmGroup;
//createWriteOffShipment (shipment) += createWriteOffUserShipment(shipment);
//
//createWriteOffShipmentDetail 'Создать акт списания' (detail) = createWriteOffShipment(shipmentShipmentDetail(detail));
//createWriteOffUserShipmentDetail 'Создать акт списания' (detail) = createWriteOffUserShipment(userShipmentUserShipmentDetail(detail));

@defineDocumentInterfaceCreate (shipment, createWriteOff, 'Создать акт списания');
@deriveDocumentHeaderCreate(userShipment, createWriteOff, stock, customerStock);

@defineDocumentInterfaceDetailQuantityPrefix (shipment, writeOff, ' (списания)');
@defineDocumentInterfaceDetailPricePrefix(shipment, writeOff, ' (списания)');
@defineDocumentInterfaceDetailDataSumPrefix (shipment, writeOff, ' (списания)');
@deriveDocumentDetailSumPrefix(userShipment, writeOff, currency, writeOffQuantity);
@defineDocumentInterfaceHeaderSumPrefix (shipment, writeOff, ' (списания)');
@defineDocumentInterfaceHeaderWriteOffCommittee(shipment, customerStock);

reasonShipment 'Причина списания (ИД)' = ABSTRACT reason (shipment);
reasonUserShipment 'Причина списания (ИД)' = DATA reason (userShipment);
reasonShipment(shipment) += reasonUserShipment(shipment);
nameReasonShipment 'Причина списания' (shipment) = name(reasonShipment (shipment)) IN documentPrmGroup;
nameReasonUserShipment 'Причина списания' (userShipment) = name(reasonUserShipment (userShipment)) IN documentPrmGroup;

writeOffRateShipmentDetail 'Норма отходов' (shipmentDetail) = ABSTRACT writeOffRate (shipmentDetail);
nameWriteOffRateShipmentDetail 'Норма отходов' (shipmentDetail) = name(writeOffRateShipmentDetail(shipmentDetail));
percentWriteOffRateShipmentDetail 'Норма отходов,%' (shipmentDetail)= ABSTRACT NUMERIC[10,3] (shipmentDetail);

writeOffRateUserShipmentDetail 'Норма отходов' (userShipmentDetail) = DATA writeOffRate (userShipmentDetail);
nameWriteOffRateUserShipmentDetail 'Норма отходов' (userShipmentDetail) = name(writeOffRateUserShipmentDetail(userShipmentDetail));
percentWriteOffRateUserShipmentDetail 'Норма отходов,%' (shipmentDetail)= DATA NUMERIC[10,3] (userShipmentDetail);

writeOffRateUserShipmentDetail(detail) <- writeOffRateCountrySku(countryCustomerStockUserShipmentDetail(detail), skuUserShipmentDetail(detail)) WHEN
    CHANGED(countryCustomerStockUserShipmentDetail(detail)) OR CHANGED(skuUserShipmentDetail(detail));

percentWriteOffRateUserShipmentDetail (detail) <- percentWriteOffRate(writeOffRateUserShipmentDetail(detail)) WHEN
    CHANGED(writeOffRateUserShipmentDetail(detail));

writeOffQuantityUserShipmentDetail (detail) <- round3(quantityUserShipmentDetail(detail)*percentWriteOffRateUserShipmentDetail (detail)/100)   WHEN
    CHANGED(quantityUserShipmentDetail(detail)) OR CHANGED(percentWriteOffRateUserShipmentDetail (detail));

writeOffPriceUserShipmentDetail (detail) <- priceUserShipmentDetail(detail) WHEN CHANGED(priceUserShipmentDetail(detail));

writeOffRateShipmentDetail (detail) += writeOffRateUserShipmentDetail(detail);
percentWriteOffRateShipmentDetail (detail) += percentWriteOffRateUserShipmentDetail(detail);


backgroundWrittenShipment 'Цвет' (shipment) = RGB(212, 255, 212) IF shipment IS shipment;

EXTEND FORM userShipment
    PROPERTIES (s) createWriteOffUserShipment BACKGROUND backgroundWrittenShipment(s)
    PROPERTIES (s) BACKGROUND backgroundWrittenShipment(s) SHOWIF createWriteOffUserShipment(s)
                   nameWriteOffCommitteeUserShipment, nameReasonUserShipment, writeOffSumUserShipmentDetailUserShipment
    PROPERTIES (d) SHOWIF createWriteOffUserShipment(s) BEFORE delete(d) BACKGROUND backgroundWrittenShipment(s)
                   nameWriteOffRateUserShipmentDetail, percentWriteOffRateUserShipmentDetail, writeOffQuantityUserShipmentDetail,
                   writeOffPriceUserShipmentDetail,  writeOffSumUserShipmentDetail
;
EXTEND DESIGN userShipment {
    headerRow1 {
        NEW headerRow01 AFTER headerRow11 {
            title = 'Акт списания';
            childConstraints = TO THE RIGHTBOTTOM;
            ADD PROPERTY(createWriteOffUserShipment);
            ADD PROPERTY(nameWriteOffCommitteeUserShipment);
            ADD PROPERTY(nameReasonUserShipment);
        }
    }
}
EXTEND FORM shipments
    PROPERTIES (s) createWriteOffShipment BACKGROUND backgroundWrittenShipment(s)
    PROPERTIES (s) writeOffSumShipmentDetailShipment BACKGROUND backgroundWrittenShipment(s) AFTER sumShipmentDetailShipment
    PROPERTIES (d) SHOWIF createWriteOffShipment(s) BACKGROUND backgroundWrittenShipment(s) writeOffQuantityShipmentDetail,
                   writeOffPriceShipmentDetail,  writeOffSumShipmentDetail
;

//---------------------------------- Extend Aggregation (invoiceInvoiceShipment) ------------------//

createWriteOffShipment(shipment) += createWriteOffInvoice(invoiceInvoiceShipment(shipment));
reasonShipment(shipment) += reasonInvoice(invoiceInvoiceShipment(shipment));
writeOffCommitteeShipment(shipment) += writeOffCommitteeInvoice(invoiceInvoiceShipment(shipment));

writeOffQuantityShipmentDetail(detail) += writeOffQuantityInvoiceDetail(invoiceDetailInvoiceShipmentDetail(detail));
writeOffPriceShipmentDetail(detail) += writeOffPriceInvoiceDetail(invoiceDetailInvoiceShipmentDetail(detail));
writeOffSumShipmentDetail(detail) += writeOffSumInvoiceDetail(invoiceDetailInvoiceShipmentDetail(detail));
writeOffRateShipmentDetail (detail) += writeOffRateInvoiceDetail(invoiceDetailInvoiceShipmentDetail(detail));
percentWriteOffRateShipmentDetail(detail) += percentWriteOffRateInvoiceDetail(invoiceDetailInvoiceShipmentDetail(detail));

//--  Связь поставки и акта списания
shipmentDetailWriteOffDetail = ABSTRACT shipmentDetail (writeOffDetail) PERSISTENT;
shipmentDetailUserWriteOffDetail = DATA shipmentDetail (userWriteOffDetail);
shipmentDetailWriteOffDetail(writeOffDetail) += shipmentDetailUserWriteOffDetail(writeOffDetail);

CONSTRAINT batchWriteOffDetail(detail) != shipmentDetailUserWriteOffDetail(detail) OR
           stockWriteOff(writeOffWriteOffDetail(detail)) != customerStockShipmentDetail(shipmentDetailUserWriteOffDetail(detail)) OR
           skuWriteOffDetail(detail) != skuShipmentDetail(shipmentDetailUserWriteOffDetail(detail))
    CHECKED BY shipmentDetailUserWriteOffDetail
        MESSAGE 'Склад, партия и товар в поставке и акте списания должны соответствовать друг другу';


descriptionIndexShipmentDetailWriteOffDetail 'Строка поставки' (detail) = descriptionIndexShipmentDetail(shipmentDetailWriteOffDetail(detail));
descriptionIndexShipmentDetailUserWriteOffDetail 'Строка поставки' (detail) = descriptionIndexShipmentDetail(shipmentDetailUserWriteOffDetail(detail));

quantityWriteOffDetailShipmentWriteOff (shipment, writeOff) = GROUP SUM quantityWriteOffDetail(writeOffDetail) BY shipmentShipmentDetail(shipmentDetailWriteOffDetail(writeOffDetail)), writeOffWriteOffDetail(writeOffDetail);

shipmentsWriteOff 'Поставки' (writeOff) = GROUP CONCAT castToString255(descriptionShipment(shipment)) IF quantityWriteOffDetailShipmentWriteOff(shipment, writeOff) , ', '
                                                BY writeOff
                                                ORDER writeOff IN shipmentGroup MINCHARWIDTH 30 PREFCHARWIDTH 50 PERSISTENT;

writtenOffShipmentDetail 'Кол-во (списано)' (shipmentDetail) = GROUP SUM quantityWriteOffDetail(writeOffDetail) IF isPostedWriteOffDetail(writeOffDetail)
                                                                   BY shipmentDetailWriteOffDetail(writeOffDetail) PERSISTENT;
writtenOffShipment (shipment)= GROUP SUM writtenOffShipmentDetail(shipmentDetail) BY shipmentShipmentDetail(shipmentDetail);
notWrittenOffShipment 'Поставки без списания' (shipment) = shipment IS shipment AND NOT writtenOffShipment (shipment);

//costWriteOffDetailBatch (writeOffDetail, batch) = GROUP SUM costSkuLedgerBatch(writeOffDetail, batch) BY writeOffDetailWriteOffDetail(writeOffDetail), batch;
//countBatchWriteOffDetail 'Кол-во партий' (writeOffDetail) = GROUP SUM 1 IF costWriteOffDetailBatch(writeOffDetail, batch) BY writeOffDetail PERSISTENT;
//maxBatchWriteOffDetail (writeOffDetail) = GROUP MAX batch IF costWriteOffDetailBatch(writeOffDetail, batch) BY writeOffDetail;

// Создание поставки на основе инвойса //

FORM writeOffShipments 'Поставки'
    OBJECTS st = stock FIXED PANEL
    PROPERTIES (st) READONLY name

    OBJECTS s = shipment
    PROPERTIES (s) READONLY isPostedShipment FORCE GRID, objectClassName, numberShipment, seriesShipment, dateShipment, timeShipment,
                            nameSupplierShipment, nameSupplierStockShipment, nameCustomerShipment, nameCustomerStockShipment,
                            nameCurrencyShipment, noteShipment,
                            countShipmentDetailShipment, quantityShipmentDetailShipment, sumShipmentDetailShipment

    OBJECTS d = shipmentDetail
    PROPERTIES (d) indexShipmentDetail, idBarcodeSkuShipmentDetail, nameSkuShipmentDetail, shortNameUOMSkuShipmentDetail,
                            quantityShipmentDetail, priceShipmentDetail, sumShipmentDetail,
                            nameCustomerStockShipmentDetail
    PROPERTIES (d) BACKGROUND backgroundWrittenShipment(s) writeOffQuantityShipmentDetail, writeOffPriceShipmentDetail,  writeOffSumShipmentDetail

    FILTERS shipmentShipmentDetail(d) == s,
            customerStockShipment(s) == st
        FILTERGROUP writeOffDetail
            FILTER 'Поставки без списания' 'F11' notWrittenOffShipment(s) DEFAULT
//            FILTER 'Строки со склада' 'F9' stockWriteOffDetail(d) == s

    DIALOG shipment OBJECT s
;

DESIGN writeOffShipments FROM DEFAULT {
    main {
        preferredSize = (1024, 768);
        NEW documentContainer BEFORE functions.box {

            childConstraints = TO THE BOTTOM;

            NEW headerBox {
                childConstraints = TO THE RIGHT;
                ADD st.box {title = 'Склад';};
            }
            ADD s.box;
            NEW documentDetail {
                type = TABBED;

                ADD d.box {
                    title = 'Спецификация';
                }
                NEW printTab {
                    title = 'Печатные формы';
                    NEW printContainer {
                        title = 'Печать';
                        childConstraints = TO THE BOTTOM;
                        fillVertical = 1.0;
                    }
                }
            }
        }
        PROPERTY(writeOffQuantityShipmentDetail) { background = #FFFFCC; }
    }
}

fillShipmentUserWriteOff 'Заполнить на основе поставки' =  ACTION (userWriteOff) {
    FORM writeOffShipments OBJECTS st = stockUserWriteOff(userWriteOff) MODAL;
    IF formResult() == formResult.ok THEN {
        LOCAL purchaseShipment = shipment();
        SET purchaseShipment() <- chosenObject('s');

        FOR shipmentShipmentDetail(shipmentDetail) == purchaseShipment() AND
            customerStockShipmentDetail(shipmentDetail) == stockUserWriteOff(userWriteOff) AND
            writeOffQuantityShipmentDetail(shipmentDetail)
            ADDOBJ d = userWriteOffDetail DO {
                SET userWriteOffUserWriteOffDetail(d) <- userWriteOff;
                SET shipmentDetailUserWriteOffDetail(d) <- shipmentDetail;
                SET batchUserWriteOffDetail(d) <- shipmentDetail;

                SET skuUserWriteOffDetail(d) <- skuShipmentDetail(shipmentDetail);
                SET quantityUserWriteOffDetail (d) <- writeOffQuantityShipmentDetail(shipmentDetail);
                SET priceUserWriteOffDetail(d) <- writeOffPriceShipmentDetail(shipmentDetail);
                SET sumUserWriteOffDetail(d) <- writeOffSumShipmentDetail(shipmentDetail);
        }
    }
} IN shipmentGroup;

EXTEND FORM userWriteOff
    PROPERTIES(w) fillShipmentUserWriteOff, shipmentsWriteOff READONLY
    PROPERTIES(d) READONLY descriptionIndexShipmentDetailUserWriteOffDetail BEFORE delete(d)
;
EXTEND DESIGN userWriteOff { headerRow1{ ADD w.shipmentGroup {childConstraints = TO THE RIGHTBOTTOM;}}}

EXTEND FORM writeOffs
    PROPERTIES(w) READONLY shipmentsWriteOff
    PROPERTIES(d) READONLY descriptionIndexShipmentDetailWriteOffDetail
;

//-- аггр. объект

needToWrittenShipmentDetail (shipmentDetail) = writeOffQuantityShipmentDetail(shipmentDetail) AND createWriteOffShipmentDetail(shipmentDetail) PERSISTENT;

needToWrittenShipment (shipment)= GROUP SUM 1 IF needToWrittenShipmentDetail(shipmentDetail)
    BY shipmentShipmentDetail(shipmentDetail) PERSISTENT;

CLASS shipmentWriteOff 'Акт списания на основе поставки': writeOff;
CLASS shipmentWriteOffPosted 'Проведенный акт списания на основе поставки' : shipmentWriteOff, postedObject;
CLASS shipmentWriteOffDetail 'Строка акта списания на основе поставки ': writeOffDetail;

@defineDocumentTables(shipmentWriteOff);

@defineDocumentAggregation(shipment, shipmentWriteOff, needToWrittenShipment);
writeOffWriteOffDetail(detail) += shipmentWriteOffShipmentWriteOffDetail(detail);

@defineDocumentDetailIndex(shipmentWriteOff);

dateWriteOff(writeOff) += dateShipmentWriteOff(writeOff);
timeWriteOff(writeOff) += timeShipmentWriteOff(writeOff);

@defineDocumentAggregationStockPrefix(shipment, shipmentWriteOff, customerStock, 'Склад', , );
stockWriteOff(writeOff) += customerStockShipmentWriteOff(writeOff);
dataStockWriteOffDetail(writeOffDetail) += dataCustomerStockShipmentDetail(shipmentDetailShipmentWriteOffDetail(writeOffDetail));

@defineDocumentAggregationPosted(shipment, shipmentWriteOff);
isPostedWriteOff(writeOff) += isPostedShipmentWriteOff(writeOff);

numberShipmentWriteOff 'Номер документа' (shipmentWriteOff) = numberShipment(shipmentShipmentWriteOff(shipmentWriteOff));
numberWriteOff(writeOff) += numberShipmentWriteOff(writeOff);

seriesShipmentWriteOff 'Серия документа' (shipmentWriteOff) = seriesShipment(shipmentShipmentWriteOff(shipmentWriteOff));
seriesWriteOff(writeOff) += seriesShipmentWriteOff(writeOff);

seriesNumberShipmentWriteOff 'Серия/номер документа' (shipmentWriteOff) = seriesNumberShipment(shipmentShipmentWriteOff(shipmentWriteOff));

noteShipmentShipmentWriteOff 'Примечание' (shipmentWriteOff) = noteShipment(shipmentShipmentWriteOff(shipmentWriteOff));
noteWriteOff(writeOff) += noteShipmentShipmentWriteOff(writeOff);

currencyShipmentWriteOff  (shipmentWriteOff) = currencyShipment(shipmentShipmentWriteOff(shipmentWriteOff));
currencyWriteOff (writeOff) += currencyShipmentWriteOff(writeOff);

@defineDocumentDescription(shipmentWriteOff, shipmentWriteOffDetail, seriesNumberShipmentWriteOff, 'Акт списания на основе поставки');
descriptionWriteOff (writeOff) += descriptionShipmentWriteOff(writeOff);

reasonWriteOff(writeOff) += reasonShipment(shipmentShipmentWriteOff(writeOff));
writeOffCommitteeWriteOff(writeOff) += writeOffCommitteeShipment(shipmentShipmentWriteOff(writeOff));

@defineDocumentAggregationDetailSku(shipment, shipmentWriteOff, sku);
skuWriteOffDetail(writeOffDetail) +=  skuShipmentWriteOffDetail(writeOffDetail);

quantityWriteOffDetail(writeOffDetail) += writeOffQuantityShipmentDetail(shipmentDetailShipmentWriteOffDetail(writeOffDetail));
batchWriteOffDetail(writeOffDetail) += ledgerBatchShipmentDetail(shipmentDetailShipmentWriteOffDetail(writeOffDetail));

writeOffPriceShipmentWriteOffDetail(shipmentWriteOffDetail) = writeOffPriceShipmentDetail(shipmentDetailShipmentWriteOffDetail(shipmentWriteOffDetail));
priceWriteOffDetail(writeOffDetail) += writeOffPriceShipmentWriteOffDetail(writeOffDetail);

writeOffShipmentWriteOffDetail(shipmentWriteOffDetail) = writeOffSumShipmentDetail(shipmentDetailShipmentWriteOffDetail(shipmentWriteOffDetail));
sumWriteOffDetail(writeOffDetail) += writeOffShipmentWriteOffDetail(writeOffDetail);

shipmentDetailWriteOffDetail(writeOffDetail) += shipmentDetailShipmentWriteOffDetail(writeOffDetail);

printWriteOff 'Акт списания' (writeOff) = ACTION FORM writeOffPrint OBJECTS w IMAGE 'print.png' IN printGroup;
printWriteOffInvoice 'Акт списания' (invoice) = printWriteOff(shipmentWriteOffShipment(invoiceShipmentInvoice(invoice))) IMAGE 'print.png' IN printGroup;

EXTEND FORM invoices
    PROPERTIES(i) FORCE PANEL printWriteOffInvoice SHOWIF createWriteOffInvoice(i)
;
NAVIGATOR {
    writeOffNavigator  {
        ADD writeOffRateDialog;
    }
}

// ------------------------------------------------ Стандартные значения --------------------------------------- //

loadDefaultWriteOffRate 'Добавить нормы отходов' = ACTION (idCountry, string, numeric)  {
    ADDOBJ writeOffRate;
    FOR g == addedObject() DO {
        SET name(g) <- string AS STRING[110];
        SET percentWriteOffRate(g) <-  numeric AS NUMERIC[10,3];
        SET countryWriteOffRate(g) <- countrySID(idCountry);
    }
};

loadDefaultWriteOffRates 'Загрузить стандартные нормы отходов' = ACTION () {
    EXEC loadDefaultWriteOffRate('112', 'ВАРЕНЫЕ, ФАРШИРОВАННЫЕ', 0.7);
    EXEC loadDefaultWriteOffRate('112', 'САЛЯМИ (ФИНЛЯНДИЯ)', 0.56);
    EXEC loadDefaultWriteOffRate('112', 'С/К ФИЛЕЙ В ОБОЛ', 1);
    EXEC loadDefaultWriteOffRate('112', 'С/К ШЕЙКА ВЕТЧИННАЯ', 0.75);
    EXEC loadDefaultWriteOffRate('112', 'КОЛБАСЫ ВАРЕНЫЕ ПЕРЕВЯЗ.ШПАГАТОМ', 0.5);
    EXEC loadDefaultWriteOffRate('112', 'К/З БЕКОН,РУЛЕТ,ВЕТЧИНА', 0.87);
    EXEC loadDefaultWriteOffRate('112', 'ХЛЕБЫ МЯСНЫЕ', 0.67);
    EXEC loadDefaultWriteOffRate('112', 'КОЛБАСЫ ПОЛУКОПЧЕНЫЕ ОТЕЧ.ПРОИЗ-ВА', 0.62);
    EXEC loadDefaultWriteOffRate('112', 'ПР.ИЗ СВИНИНЫ ВАРЕНЫЕ,ПЕРЕВ.ШПАГАТОМ', 0.55);
    EXEC loadDefaultWriteOffRate('112', 'ЗЕЛЬЦЫ, С МЕТАЛ. СКРЕПКАМИ', 0.1);
    EXEC loadDefaultWriteOffRate('112', 'ПР.ИЗ СВИНИНЫ ВАРЕНЫЕ, С МЕТАЛ. СКРЕПКАМИ', 0.15);
    EXEC loadDefaultWriteOffRate('112', 'ШПИК (ВКЛ.ИМПОРТ), САЛО', 0.4);
    EXEC loadDefaultWriteOffRate('112', 'С/К РУЛЬКА', 0.75);
    EXEC loadDefaultWriteOffRate('112', 'САРДЕЛЬКИ, ПЕРЕВЯЗ. НИТКАМИ', 0.2);
    EXEC loadDefaultWriteOffRate('112', 'КОЛБАСЫ ВАРЕНО-КОПЧЕНЫЕ ОТЕЧ.ПРОИЗ-ВА', 0.75);
    EXEC loadDefaultWriteOffRate('112', 'К/З КОРЕЙКА,ГРУДИНКА', 0.45);
    EXEC loadDefaultWriteOffRate('112', 'С/К КОРЕЙКА, ГРУДИНКА, БЕКОН. ОКОР.', 0.2);
    EXEC loadDefaultWriteOffRate('112', 'КОЛБАСЫ СЫРОКОПЧ. СЫРОВЯЛЕН. ОТЕЧ. ПРОИЗ.', 0.8);
    EXEC loadDefaultWriteOffRate('112', 'СЕРВИЛАТ(ФИНЛЯНДИЯ)', 0.25);
    EXEC loadDefaultWriteOffRate('112', 'К/В БАЛЫК СВИНОЙ В ОБОЛ.', 1);
    EXEC loadDefaultWriteOffRate('112', 'КОЛБАСЫ ВАРЕНЫЕ С МЕТАЛИЧ.СКРЕПКАМИ', 0.2);
    EXEC loadDefaultWriteOffRate('112', 'ЛИВЕРНЫЕ', 0.98);
    EXEC loadDefaultWriteOffRate('112', 'СОСИСКИ', 0.12);
    EXEC loadDefaultWriteOffRate('112', 'САРДЕЛЬКИ, ПЕРЕВЯЗ. ШПАГАТОМ', 0.5);
    EXEC loadDefaultWriteOffRate('112', 'ЗЕЛЬЦЫ, ПЕРЕВЯЗ.ШПАГАТОМ', 0.31);
    EXEC loadDefaultWriteOffRate('112', 'С/К РУЛЕТЫ: ЛЕНИНГРАДСКИЙ, РОСТОВСКИЙ', 0.6);
    EXEC loadDefaultWriteOffRate('112', 'К/В ГРУДИНКА, КОРЕЙКА', 0.2);
    EXEC loadDefaultWriteOffRate('112', 'КРОВЯНЫЕ', 0.65);
} IN loadDefaultGroup;

@implementLoadDefaultData(loadDefaultWriteOffRates);
