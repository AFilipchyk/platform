MODULE PriceInterval;

REQUIRE System, Utils, DefaultData, Stock;


//--  По группам
CLASS roundCondition 'Условие округления' : named;

TABLE roundCondition (roundCondition);

currencyRoundCondition = DATA currency(roundCondition);

denominatorPriceRoundCondition 'Делитель (округление цен)' =  DATA NUMERIC[14,3](roundCondition);
minPriceRoundCondition 'Нижний порог (округление цен)' =  DATA NUMERIC[14,3](roundCondition);
priceRoundRoundCondition 'До скольки знаков округлять розничную цену' (roundCondition)=  DATA INTEGER (roundCondition);

defaultRoundConditionCurrency = DATA roundCondition(currency);
isDefaultRoundConditionCurrency 'По умолчанию' (roundCondition, currency) = defaultRoundConditionCurrency(currency) == roundCondition;

priceRoundCurrency 'Округление по умолчанию для розницы' (currency) = priceRoundRoundCondition(defaultRoundConditionCurrency(currency)) PERSISTENT;

CLASS priceInterval 'Диапазон цен';
TABLE priceInterval (priceInterval);

roundConditionPriceInterval = DATA roundCondition(priceInterval);

fromPriceInterval 'от' = DATA NUMERIC[14,3](priceInterval) IN baseGroup;
toPriceInterval 'до' = DATA NUMERIC[14,3](priceInterval) IN baseGroup;
modifierPriceInterval 'Округлённая цена интервала' = DATA NUMERIC[14,3](priceInterval) IN baseGroup;

integerPriceRoundCondition 'Целое' (price, roundCondition) = divideInteger((price AS NUMERIC[14,3]), denominatorPriceRoundCondition(roundCondition));

fractionPriceRoundCondition 'Дробное' (price, roundCondition) = (price AS NUMERIC[14,3]) -
    integerPriceRoundCondition(price, roundCondition)* denominatorPriceRoundCondition(roundCondition);

inPriceIntervalPrice(priceInterval, price) = fractionPriceRoundCondition(price, roundConditionPriceInterval(priceInterval)) >= fromPriceInterval(priceInterval)
    AND fractionPriceRoundCondition(price, roundConditionPriceInterval(priceInterval)) <= toPriceInterval(priceInterval);

priceIntervalPriceRoundCondition (price, roundCondition) = GROUP MAX priceInterval IF inPriceIntervalPrice(priceInterval, price)
    BY price AS NUMERIC[14,3], roundConditionPriceInterval(priceInterval);


roundPriceRoundCondition (price, roundCondition) = IF (price AS NUMERIC[14,3]) > minPriceRoundCondition(roundCondition) AND priceIntervalPriceRoundCondition (price, roundCondition)
    THEN integerPriceRoundCondition(price, roundCondition)*denominatorPriceRoundCondition(roundCondition)
        + modifierPriceInterval(priceIntervalPriceRoundCondition (price, roundCondition))
    ELSE round(price AS NUMERIC[14,3], priceRoundRoundCondition(roundCondition));

// -------------------- Группы для округления --------------- //

CLASS ABSTRACT roundGroup 'Группа округлений' : named;
TABLE roundGroup(roundGroup);

TABLE roundConditionRoundGroup (roundCondition, roundGroup);
inRoundConditionRoundGroup 'Вкл' = DATA BOOLEAN (roundCondition, roundGroup);

roundConditionUniqueCurrencyRoundGroup(currency, roundGroup) = GROUP UNIQUE roundCondition
                                                                     BY currencyRoundCondition(roundCondition), roundGroup
                                                                     WHERE inRoundConditionRoundGroup(roundCondition, roundGroup);

TABLE currencyRoundGroup(currency, roundGroup);
roundConditionCurrencyRoundGroup (currency, roundGroup) = (defaultRoundConditionCurrency(currency) AND roundGroup IS roundGroup) OR roundConditionUniqueCurrencyRoundGroup(currency, roundGroup) PERSISTENT;

roundPriceCurrencyRoundGroup(price, currency, roundGroup) = roundPriceRoundCondition(price, roundConditionCurrencyRoundGroup(currency, roundGroup));
roundPriceCurrency(price, currency) = roundPriceRoundCondition(price, defaultRoundConditionCurrency(currency));

FORM priceIntervals 'Округления розничных цен'

    OBJECTS c=currency FIXED PANEL
    PROPERTIES (c)  SELECTOR name

    OBJECTS rc=roundCondition
    PROPERTIES(rc) name, denominatorPriceRoundCondition, minPriceRoundCondition, priceRoundRoundCondition, ADDOBJ, delete
    PROPERTIES(rc, c) isDefaultRoundConditionCurrency
    OBJECTS p=priceInterval
    PROPERTIES(p) fromPriceInterval, toPriceInterval, modifierPriceInterval, ADDOBJ, delete

    OBJECTS rg=roundGroup
    PROPERTIES(rg) READONLY name
    PROPERTIES(rc, rg) inRoundConditionRoundGroup

    OBJECTS nu=NUMERIC[14,3] FIXED PANEL
    PROPERTIES val = OBJVALUE(nu)

    PROPERTIES(nu, c, rg) READONLY roundPriceCurrencyRoundGroup

    FILTERGROUP filterGroup
        FILTER 'Только отмеченные' 'F10' inRoundConditionRoundGroup(rc, rg)


    FILTERS currencyRoundCondition(rc) == c,
            roundConditionPriceInterval(p) == rc
;

DESIGN priceIntervals FROM DEFAULT {
    main {
        childConstraints = TO THE BOTTOM;
        ADD c.box {
            fillHorizontal = 2;
            childConstraints = TO THE BOTTOM;
            NEW row1 {
                ADD PROPERTY (name(c)) {
                    preferredCharWidth = 30;
                    panelLabelAbove = TRUE;
                    font = 'Tahoma bold 24';
                }

            }

        }
        NEW specification {

            ADD rc.box {fillHorizontal = 2;};
            ADD p.box {fillHorizontal = 2;};
            NEW wor21 {
                fillHorizontal = 2;
                childConstraints = TO THE RIGHT;
                type = SPLITH;
                ADD rg.box {fillHorizontal = 1;};
                ADD nu.box {
                    fillHorizontal = 1;
                    title = 'Тестовая форма';
                    childConstraints = TO THE RIGHT;
                    ADD PROPERTY (val) {
                        caption = 'Введите число для примера';
                        panelLabelAbove = TRUE;
                        font = 'Tahoma bold 36';
                    }
                    ADD PROPERTY (roundPriceCurrencyRoundGroup(nu, c, rg)) {
                        caption = 'Результат';
                        panelLabelAbove = TRUE;
                        font = 'Tahoma bold 36';
                    }
                }
            }
        }
        ADD functions.box;
    }
}

// --------------------------------------------------- Стандартные значения ------------------------------------ //

loadDefaultPriceInterval  = ACTION (value, shortName) {
    LOCAL currency = currency();
    SET currency() <- currencyShortName(shortName);
    FOR ADDOBJ p = roundCondition DO {
        SET currencyRoundCondition(p) <- currency();
        SET priceRoundRoundCondition(p)  <- value;
        SET defaultRoundConditionCurrency(c) <- p WHERE c == currency();
    }
}

loadDefaultPriceIntervals 'Загрузить стандартные округления розничных цен'  = ACTION () {
    EXEC loadDefaultPriceInterval( -2, 'BLR');
    EXEC loadDefaultPriceInterval( 2, 'RUB');
    EXEC loadDefaultPriceInterval( 2, 'UAH');
} IN loadDefaultGroup;

@implementLoadDefaultData(loadDefaultPriceIntervals);

// --------------------------------------------------- Для SKU ------------------------------------ //

roundGroupSku = ABSTRACT roundGroup (sku) PERSISTENT;
TABLE roundGroupSku(roundGroup, sku);

roundPriceCurrencySku 'Округление для товара' (price, currency, sku) = roundPriceCurrencyRoundGroup(price, currency, roundGroupSku(sku));
