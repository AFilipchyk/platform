MODULE GLAccountType;

REQUIRE System,
        Utils,
        Document,
        Historizable,
        Hierarchy,
        Currency,
        Finance;

PRIORITY Utils;

//------------------------- План счетов -------------------------------//

CLASS GLAccountType 'План счетов': named;
TABLE GLAccountType(GLAccountType);

currencyGLAccountType = DATA currency (GLAccountType);
nameCurrencyGLAccountType 'Валюта' (GLAccountType)= name(currencyGLAccountType(GLAccountType));
idGLAccountType 'Идентификатор' = DATA STRING[20] (GLAccountType) MINCHARWIDTH 3 MAXCHARWIDTH 10 PREFCHARWIDTH 7;

GLAccountTypeIdGLAccountType (string1) = GROUP UNIQUE GLAccountType
    BY idGLAccountType(GLAccountType) WHERE GLAccountType IS GLAccountType;

FORM GLAccountType 'План счетов'
    OBJECTS g = GLAccountType FIXED PANEL
    PROPERTIES(g) name, idGLAccountType, nameCurrencyGLAccountType
    EDIT GLAccountType OBJECT g
;

FORM dialogGLAccountType 'План счетов'
    OBJECTS g = GLAccountType
    PROPERTIES(g) READONLY name, idGLAccountType, nameCurrencyGLAccountType
    DIALOG GLAccountType OBJECT g
;

FORM GLAccountTypes 'Планы счетов'
    OBJECTS g = GLAccountType
    PROPERTIES(g) READONLY name, idGLAccountType, nameCurrencyGLAccountType
    PROPERTIES(g) ADDFORM, EDITFORM, delete
;

//-------------------------- Счета -------------------------//

CLASS GLAccount 'Счет' : named;

GLAccountTypeGLAccount = DATA GLAccountType (GLAccount) AUTOSET;
nameGLAccountTypeGLAccount 'План счетов' (GLAccount)= name(GLAccountTypeGLAccount(GLAccount));
nameCurrencyGLAccount 'Валюта' (GLAccount) = nameCurrencyGLAccountType(GLAccountTypeGLAccount(GLAccount));

idGLAccount 'Идентификатор' = DATA STRING[20] (GLAccount) MINCHARWIDTH 3 MAXCHARWIDTH 10 PREFCHARWIDTH 7;

@defineHierarchy(GLAccount);
canonicalIdGLAccount 'Канонический код' (GLAccount) = toString255(
                           [GROUP CONCAT idGLAccount(parent), ' / ' BY child ORDER DESC levelGLAccountGLAccount(child, parent)](GLAccount))
                           MINCHARWIDTH 50 MAXCHARWIDTH 100 PREFCHARWIDTH 100 PERSISTENT;

CONSTRAINT GLAccountTypeGLAccount(parentGLAccount(GLAccount)) != GLAccountTypeGLAccount(GLAccount)
           CHECKED BY parentGLAccount MESSAGE 'План счетов родительской объекта должна совпадать с планом счетов объекта';

GLAccountIdTypeIdGLAccount (string1, string2) = GROUP UNIQUE GLAccount
    BY idGLAccountType(GLAccountTypeGLAccount(GLAccount)), idGLAccount(GLAccount) WHERE GLAccount IS GLAccount;

FORM GLAccount 'Счет'
    OBJECTS g=GLAccount FIXED PANEL
    PROPERTIES(g) nameGLAccountTypeGLAccount, name, nameParentGLAccount, idGLAccount
    EDIT GLAccount OBJECT g
;

FORM GLAccounts 'Счета'
    OBJECTS t = GLAccountType FIXED PANEL
    PROPERTIES(t) SELECTOR name

    TREE treeGroups g=GLAccount PARENT parentGLAccount
    PROPERTIES(g) READONLY name, idGLAccount
    PROPERTIES(g) READONLY canonicalNameGLAccount, canonicalIdGLAccount
    PROPERTIES(g) ADDFORM, EDITFORM, delete
    FILTERS GLAccountTypeGLAccount(g) == t
    ORDER BY canonicalIdGLAccount
    DIALOG GLAccount OBJECT g
;

NAVIGATOR {
    financeNavigator {
        NEW accountType 'Бухгалтерский учет' {
            ADD GLAccountTypes;
            ADD GLAccounts;
        }
    }
}

// ----------------------------------- Стандартные данные ----------------------------------- //

loadDefaultGLAccountType 'Добавить значение плана счетов' = ACTION (iname, isid, isidCurrency) {
    FOR ADDOBJ t = GLAccountType DO {
        SET name(t) <- iname;
        SET idGLAccountType (t) <- isid;
        SET currencyGLAccountType(t) <- currencyShortName(isidCurrency);
    }
}
loadDefaultGLAccount 'Добавить значение счета' = ACTION (iname, isid, sidType, sidParent) {
    FOR ADDOBJ g = GLAccount DO {
        SET name(g) <- iname;
        SET idGLAccount(g) <- isid;
        SET GLAccountTypeGLAccount(g) <- GLAccountTypeIdGLAccountType(sidType);
        SET parentGLAccount (g) <- GLAccountIdTypeIdGLAccount(sidType, sidParent);
    }
}

loadDefaultGLAccounts 'Загрузить стандарный план счетов и счета' = ACTION () {
    EXEC loadDefaultGLAccountType('ТИПОВОЙ ПЛАН СЧЕТОВ БУХГАЛТЕРСКОГО УЧЕТА', '1', 'BLR');

    EXEC loadDefaultGLAccount('ДОЛГОСРОЧНЫЕ АКТИВЫ', 'I', '1',' ');
    EXEC loadDefaultGLAccount('Основные средства', '01', '1', 'I');
    EXEC loadDefaultGLAccount('ПРОИЗВОДСТВЕННЫЕ ЗАПАСЫ', 'II', '1', ' ');
    EXEC loadDefaultGLAccount('Материалы', '10', '1', 'II');
    EXEC loadDefaultGLAccount('Сырье и материалы ', '10.1', '1', '10');

} IN loadDefaultGroup;

@implementLoadDefaultData(loadDefaultGLAccounts);