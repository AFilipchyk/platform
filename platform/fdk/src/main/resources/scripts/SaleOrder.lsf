MODULE SaleOrder;

REQUIRE Order, Store;

NAMESPACE Sale;

@defineOrder(' (продажа)', supplierStock);

@defineOrderStockDestination(supplierStock, customerStock);
@defineDocumentInterfaceHeaderTAX(order, VAT, 'НДС расч.');

VATUserOrder (userOrder) <- rangeTaxTaxUnit(tax.taxVAT, storeDepartmentStore(supplierStockUserOrder(userOrder)))
        WHEN CHANGED(supplierStockUserOrder(userOrder));
@deriveDocumentHeaderTAXDetail(userOrder, VAT, supplierStock);

derivedVATSumUserOrderDetail (userOrderDetail) =
    IF rangeTypeRange(VATUserOrderDetail(userOrderDetail)) == rangeType.units
        THEN roundCurrency(invoicePriceUserOrderDetail (userOrderDetail) * quantityUserOrderDetail (userOrderDetail) * valueVATUserOrderDetail (userOrderDetail)/100, currencyUserOrderDetail(userOrderDetail))
        ELSE roundCurrency((sumUserOrderDetail(userOrderDetail) * valueVATUserOrderDetail (userOrderDetail) / 100), currencyUserOrderDetail(userOrderDetail))
    PERSISTENT;

VATSumUserOrderDetail (userOrderDetail) <- derivedVATSumUserOrderDetail (userOrderDetail)
    WHEN CHANGED(invoicePriceUserOrderDetail(userOrderDetail)) OR CHANGED(quantityUserOrderDetail(userOrderDetail)) OR CHANGED(VATUserOrderDetail(userOrderDetail))
      OR CHANGED(sumUserOrderDetail(userOrderDetail)) OR CHANGED(currencyUserOrderDetail(userOrderDetail));

derivedInvoiceSumUserOrderDetail (userOrderDetail) =
    IF rangeTypeRange(VATUserOrderDetail(userOrderDetail)) == rangeType.units
        THEN invoicePriceUserOrderDetail (userOrderDetail) * quantityUserOrderDetail (userOrderDetail)
        ELSE sumUserOrderDetail (userOrderDetail) (+) VATSumUserOrderDetail (userOrderDetail)
    PERSISTENT;

invoiceSumUserOrderDetail (userOrderDetail) <- derivedInvoiceSumUserOrderDetail (userOrderDetail)
    WHEN CHANGED(invoicePriceUserOrderDetail(userOrderDetail)) OR CHANGED(quantityUserOrderDetail(userOrderDetail))
    OR CHANGED(sumUserOrderDetail(userOrderDetail)) OR CHANGED(VATSumUserOrderDetail(userOrderDetail));

derivedPriceUserOrderDetail (userOrderDetail) =
    IF rangeTypeRange(VATUserOrderDetail(userOrderDetail)) == rangeType.units
        THEN invoicePriceUserOrderDetail(userOrderDetail)*(100-valueVATUserOrderDetail (userOrderDetail))/100
        ELSE invoicePriceUserOrderDetail(userOrderDetail)*100/(100+valueVATUserOrderDetail (userOrderDetail))
    PERSISTENT;

priceUserOrderDetail (userOrderDetail) <- derivedPriceUserOrderDetail (userOrderDetail)
    WHEN CHANGED(invoicePriceUserOrderDetail(userOrderDetail)) OR CHANGED(VATUserOrderDetail (userOrderDetail));

@defineNumeratedObjectDefaultPrefix(userOrder, 'Нумератор для заказов (продажа)', 'ЗП', sale);

CONSTRAINT supplierUserOrder(userOrder) AND NOT isCompanyLegalEntity(supplierUserOrder(userOrder))
    CHECKED BY supplierUserOrder MESSAGE 'Для заказа выбрано в качестве поставщика организация, не являющаяся компанией';
CONSTRAINT customerUserOrder(userOrder) AND NOT isCustomerLegalEntity(customerUserOrder(userOrder))
    CHECKED BY customerUserOrder MESSAGE 'Для заказа выбрано в качестве покупателя организация, не являющаяся покупателем';

CONSTRAINT taxRange(VATUserOrder(userOrder)) != tax.taxVAT OR
           countryRange(VATUserOrder(userOrder)) != countryStock(supplierStockOrder(userOrder)) OR
           rangeTypeRange(VATUserOrder(userOrder)) != rangeType.units
           CHECKED BY VATUserOrder
           MESSAGE 'ошибка: Шкала и страна строки должна соответствовать шкале и строке НДС';

isDepartmentStoreSupplierStockOrder (order) = isDepartmentStoreStock (supplierStockOrder(order));

EXTEND FORM userOrder
    PROPERTIES(o) numberVATUserOrder SHOWIF isDepartmentStoreSupplierStockOrder(o), valueVATUserOrder SHOWIF isDepartmentStoreSupplierStockOrder(o);
;