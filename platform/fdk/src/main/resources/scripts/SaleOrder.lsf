MODULE SaleOrder;

REQUIRE System,
        Utils,
        Historizable,
        Stock,
        Numerator,
        Document,
        Currency,
        Customer,
        Barcode,
        PriceList,
        Historizable;


PRIORITY Utils, Stock;

NAMESPACE Sale;


//----------------------------------------------- Заказ ---------------------------------------------------//

CLASS ABSTRACT order 'Заказ ';
CLASS ABSTRACT orderDetail 'Строка заказа ' : named;

CLASS userOrder 'Заказ (польз.)' : order, historyObject, numeratedDocument;
CLASS userOrderDetail 'Строка заказа (польз.)' : orderDetail;
CLASS userOrderPosted 'Закрытый заказ (польз.)' : userOrder, postedObject;

@defineDocumentInterface(order);

@defineDocumentInterfaceNumber(order);

@defineDocumentInterfaceDataStock(order, stock, 'Склад');
@defineDocumentInterfacePosted(order);

@defineDocumentInterfaceDescription(order, 'Заказ');

@defineDocumentInterfaceCurrency(order);
@deriveDocumentCurrency(userOrder, stock);

@defineDocumentInterfaceCustomer(order);
@defineDocumentInterfacePriceListType(order);

@defineDocumentInterfaceDetailSku(order, sku);

@defineDocumentInterfaceDetailQuantity(order);

@defineDocumentInterfaceDetailPrice(order);
@deriveDocumentDetailPricePriceListType(userOrder);

@defineDocumentInterfaceDetailDataSum(order);
@deriveDocumentDetailSum(userOrder);

@defineDocumentInterfaceHeaderQuantity(order);
@defineDocumentHeaderSkuQuantity(order, sku);
@defineDocumentHeaderSkuQuantity(userOrder, sku);
@defineDocumentInterfaceHeaderSum(order);

@defineAddDetailDialogSkuStock(userOrder, sku, stock, dialogSku);
@defineAddDetailDialogBarcode(userOrder, sku);

//-- SKU
userOrderDetailSkuUserOrderStock (sku, userOrder, stock) =  GROUP MAX userOrderDetail
    BY skuUserOrderDetail(userOrderDetail), userOrderUserOrderDetail(userOrderDetail), stockUserOrderDetail(userOrderDetail);
userOrderDetailSkuUserOrder (sku, userOrder) = userOrderDetailSkuUserOrderStock(sku, userOrder, stockUserOrder(userOrder));

currentBalanceSkuUserOrder 'Остаток' (sku, userOrder) = currentBalanceSkuStock(sku, stockUserOrder(userOrder));
priceSkuUserOrder 'Цена учетная' (sku, userOrder) = priceSkuStockDateTime(sku, stockUserOrder(userOrder), dateTimeUserOrder(userOrder));

changeQuantitySkuUserOrder = ACTION (sku, userOrder) {
    REQUEST NUMERIC[14,3] INPUT;
    IF userOrderDetailSkuUserOrder(sku, userOrder) THEN {
        IF requestedNumeric() THEN {
            SET quantityUserOrderDetail(detail) <- requestedNumeric() WHERE detail == userOrderDetailSkuUserOrder(sku, userOrder);
        } ELSE {
            FOR userOrderUserOrderDetail(userOrderDetail) == userOrder AND stockUserOrderDetail(userOrderDetail) == stockUserOrder(userOrder) AND skuUserOrderDetail(userOrderDetail) == sku DO {
                EXEC delete(userOrderDetail);
            }
        }
    } ELSE {
        ADDOBJ userOrderDetail;
        FOR d == addedObject() DO {
           SET userOrderUserOrderDetail(d) <- userOrder;
           SET stockUserOrderDetail (d) <- stockUserOrder(userOrder);
           SET skuUserOrderDetail(d) <- sku;
           SET quantityUserOrderDetail (d) <- requestedNumeric();
        }
    }
}

// --------------------------- Формы Заказа ---------------------------------

FORM userOrder 'Заказ'
    OBJECTS o = userOrder FIXED PANEL
    PROPERTIES (o) objectClassName, nameStockUserOrder, nameNumeratorObject, numberObject, seriesObject, dateUserOrder, timeUserOrder,
                   nameCustomerUserOrder, nameCurrencyUserOrder, namePriceListTypeUserOrder, noteUserOrder,
                   countUserOrderDetailUserOrder, quantityUserOrderDetailUserOrder, sumUserOrderDetailUserOrder

    OBJECTS d = userOrderDetail
    PROPERTIES (d) indexUserOrderDetail, idBarcodeSkuUserOrderDetail, nameSkuUserOrderDetail, shortNameUOMSkuUserOrderDetail,
                   quantityUserOrderDetail, priceUserOrderDetail, sumUserOrderDetail, nameStockUserOrderDetail, ADDOBJ, delete

    TREE skuTree sk = skuGroup PARENT parentSkuGroup
    PROPERTIES READONLY skuTreeName = name(sk)
    ORDER BY skuTreeName

    OBJECTS s=sku
    PROPERTIES             READONLY    inputName = nameSku(s)
    PROPERTIES(s)          READONLY idBarcodeSku, shortNameUOMSku
    PROPERTIES(s, o)       currentBalanceSkuUserOrder READONLY, priceSkuUserOrder READONLY, quantityUserOrderDetailSkuUserOrder ON CHANGE EXEC changeQuantitySkuUserOrder(s, o)

    FILTERS                isParentSkuGroupSku(sk, s)
    ORDER BY inputName

    PROPERTIES(o) TODRAW d addDetailDialogSkuStockUserOrderDetailUserOrder,
                           addDetailInputBarcodeUserOrderDetailUserOrder, deleteUserOrderDetailUserOrder
    FILTERS userOrderUserOrderDetail(d) == o
    FILTERGROUP filters
        FILTER 'Товары с остатком' 'F10' currentBalanceSkuUserOrder(s, o) DEFAULT
        FILTER 'Товары в заказе' 'F9' quantityUserOrderDetailSkuUserOrder(s, o)

    EVENTS
        ON OK EXEC prePostUserOrder(o)

    EDIT userOrder OBJECT o
;

DESIGN userOrder FROM DEFAULT{

    main {
        preferredSize = (1280, 1024);
        NEW specification.box BEFORE functions.box{
            type = TABBED;
            ADD d.box {
                d.panel {
                    childConstraints = TO THE BOTTOM;
                }
            }
            NEW itemBox {
                childConstraints = TO THE RIGHT;
                title = 'Товар';
                type = SPLITH;

                ADD skuTree.tree.box {
                    title = 'Группы SKU';
                    fillHorizontal = 1;
                }
                ADD s.box {
                    fillHorizontal = 2;
                }
            }
        }

        NEW header.box BEFORE specification.box {
            childConstraints = TO THE RIGHT;

            NEW headerRow1 {
                childConstraints = TO THE BOTTOM;

                ADD o.documentHeaderGroup {
                    childConstraints = TO THE RIGHT;
                    ADD PROPERTY(objectClassName) { preferredCharWidth = 10; }
                    ADD PROPERTY(nameStockUserOrder);
                    ADD PROPERTY(nameNumeratorObject);
                    ADD PROPERTY(numberObject);
                    ADD PROPERTY(seriesObject);
                    ADD PROPERTY(dateUserOrder);
                    ADD PROPERTY(timeUserOrder);
                }

                ADD o.documentPrmGroup {
                    childConstraints = TO THE RIGHT;
                }
            }

            ADD o.documentSumGroup {
                childConstraints = TO THE BOTTOM;
            }
        }


        PROPERTY(formOkAction) {
            caption = 'Провести';
        }
    }
}

FORM userOrders 'Заказы'
    OBJECTS o = userOrder
    PROPERTIES (o) READONLY isPostedUserOrder FORCE GRID, objectClassName, numberObject, seriesObject, dateUserOrder, timeUserOrder,
                            nameStockUserOrder, nameCustomerUserOrder, nameCurrencyUserOrder, namePriceListTypeUserOrder, noteUserOrder,
                            countUserOrderDetailUserOrder, quantityUserOrderDetailUserOrder, sumUserOrderDetailUserOrder

    PROPERTIES (o) READONLY FORCE PANEL nameUserCreated, timeCreated, hostnameComputerCreated, nameUserClosed, timeClosed, hostnameComputerClosed

    PROPERTIES (o) ADDFORM, EDITFORM, delete FORCE PANEL DRAWTOTOOLBAR

    OBJECTS d=userOrderDetail
    PROPERTIES (d) READONLY indexUserOrderDetail, idBarcodeSkuUserOrderDetail, nameSkuUserOrderDetail, shortNameUOMSkuUserOrderDetail,
                   quantityUserOrderDetail, priceUserOrderDetail, sumUserOrderDetail, nameStockUserOrderDetail

    FILTERS userOrderUserOrderDetail(d) == o
;

DESIGN userOrders FROM DEFAULT {
    PROPERTY (delete(o)) {
        askConfirm = TRUE;
    }

    NEW documentContainer BEFORE functions.box {
        type = SPLITV;
        childConstraints = TO THE BOTTOM;

        ADD o.box;

        NEW documentDetail {
            type = TABBED;

            ADD d.box {
                title = 'Спецификация';
            }
            NEW documentHistory {
                title = 'История';

                ADD o.historyGroup;
                ADD o.postedGroup;
            }
            NEW printTab {
                title = 'Печатные формы';
                NEW printContainer {
                    title = 'Печать';
                    childConstraints = TO THE BOTTOM;
                    fillVertical = 1.0;
                }
            }
        }
    }
}

FORM orders 'Заказы'
    OBJECTS o = order
    PROPERTIES (o) READONLY isPostedOrder FORCE GRID, objectClassName, numberOrder, seriesOrder, dateOrder, timeOrder,
                            nameStockOrder, nameCustomerOrder, nameCurrencyOrder, noteOrder,
                            countOrderDetailOrder, quantityOrderDetailOrder, sumOrderDetailOrder

    OBJECTS d = orderDetail
    PROPERTIES (d) READONLY indexOrderDetail, idBarcodeSkuOrderDetail, nameSkuOrderDetail, shortNameUOMSkuOrderDetail,
                            quantityOrderDetail, priceOrderDetail, sumOrderDetail, nameStockOrderDetail

    FILTERS orderOrderDetail(d) == o

    DIALOG order OBJECT o
;

DESIGN orders FROM DEFAULT {
    main {
        preferredSize = (1024, 768);
        NEW documentContainer BEFORE functions.box {
            type = SPLITV;
            childConstraints = TO THE BOTTOM;

            ADD o.box;

            NEW documentDetail {
                type = TABBED;

                ADD d.box {
                    title = 'Спецификация';
                }
                NEW printTab {
                    title = 'Печатные формы';
                    NEW printContainer {
                        title = 'Печать';
                        childConstraints = TO THE BOTTOM;
                        fillVertical = 1.0;
                    }
                }
            }
        }
    }
}

NAVIGATOR {
    NEW saleNavigator 'Управление заказами' {
        ADD userOrders;
    }
}

