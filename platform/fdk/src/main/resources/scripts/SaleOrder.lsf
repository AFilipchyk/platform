MODULE SaleOrder;

REQUIRE Order, Store;

NAMESPACE Sale;

//-- Для продажи упаковками
salePackBarcodeSku 'Штрих-код для продажи' = DATA barcode (sku);
CONSTRAINT skuBarcode(salePackBarcodeSku(item)) != item CHECKED BY salePackBarcodeSku MESSAGE 'Выбран неверный sku для штрих-кода';
salePackBarcode 'Штрих-код для продажи' (barcode)=  salePackBarcodeSku(skuBarcode(barcode)) == barcode;
changeSalePackBarcodeSku = ACTION (barcode, sku) {
    REQUEST BOOLEAN INPUT;
    IF requestedLogical() THEN {
        SET salePackBarcodeSku(sku) <- barcode;
    } ELSE
        SET salePackBarcodeSku(sku) <- NULL;
}

EXTEND FORM barcodeDialog
    PROPERTIES (b) READONLY salePackBarcode
;
//--
@defineOrder(' (продажа)', supplierStock, salePack, showSalePack, 'Отображать упаковку');

@defineOrderStockDestination(supplierStock, customerStock);
@defineDocumentInterfaceHeaderTAX(order, VAT, 'НДС расч.');

VATUserOrder (userOrder) <- rangeTaxTaxUnit(tax.taxVAT, storeDepartmentStore(supplierStockUserOrder(userOrder)))
        WHEN CHANGED(supplierStockUserOrder(userOrder));
@deriveDocumentDetailVATHeader(userOrder, VAT, supplierStock);

derivedVATSumUserOrderDetail (userOrderDetail) =
    IF rangeTypeRange(VATUserOrderDetail(userOrderDetail)) == rangeType.units
        THEN roundCurrency(invoicePriceUserOrderDetail (userOrderDetail) * quantityUserOrderDetail (userOrderDetail) * valueVATUserOrderDetail (userOrderDetail)/100, currencyUserOrderDetail(userOrderDetail))
        ELSE roundCurrency((sumUserOrderDetail(userOrderDetail) * valueVATUserOrderDetail (userOrderDetail) / 100), currencyUserOrderDetail(userOrderDetail))
    PERSISTENT;

VATSumUserOrderDetail (userOrderDetail) <- derivedVATSumUserOrderDetail (userOrderDetail)
    WHEN CHANGED(invoicePriceUserOrderDetail(userOrderDetail)) OR CHANGED(quantityUserOrderDetail(userOrderDetail)) OR CHANGED(VATUserOrderDetail(userOrderDetail))
      OR CHANGED(sumUserOrderDetail(userOrderDetail)) OR CHANGED(currencyUserOrderDetail(userOrderDetail));

derivedInvoiceSumUserOrderDetail (userOrderDetail) =
    IF rangeTypeRange(VATUserOrderDetail(userOrderDetail)) == rangeType.units
        THEN invoicePriceUserOrderDetail (userOrderDetail) * quantityUserOrderDetail (userOrderDetail)
        ELSE sumUserOrderDetail (userOrderDetail) (+) VATSumUserOrderDetail (userOrderDetail)
    PERSISTENT;

invoiceSumUserOrderDetail (userOrderDetail) <- derivedInvoiceSumUserOrderDetail (userOrderDetail)
    WHEN CHANGED(invoicePriceUserOrderDetail(userOrderDetail)) OR CHANGED(quantityUserOrderDetail(userOrderDetail))
    OR CHANGED(sumUserOrderDetail(userOrderDetail)) OR CHANGED(VATSumUserOrderDetail(userOrderDetail));

derivedPriceUserOrderDetail (userOrderDetail) =
    IF rangeTypeRange(VATUserOrderDetail(userOrderDetail)) == rangeType.units
        THEN invoicePriceUserOrderDetail(userOrderDetail)*(100-valueVATUserOrderDetail (userOrderDetail))/100
        ELSE invoicePriceUserOrderDetail(userOrderDetail)*100/(100+valueVATUserOrderDetail (userOrderDetail))
    PERSISTENT;

priceUserOrderDetail (userOrderDetail) <- derivedPriceUserOrderDetail (userOrderDetail)
    WHEN CHANGED(invoicePriceUserOrderDetail(userOrderDetail)) OR CHANGED(VATUserOrderDetail (userOrderDetail));

@defineNumeratedObjectDefaultPrefix(userOrder, 'Нумератор для заказов (продажа)', 'ЗП', sale);

CONSTRAINT supplierUserOrder(userOrder) AND NOT isCompanyLegalEntity(supplierUserOrder(userOrder))
    CHECKED BY supplierUserOrder MESSAGE 'Для заказа выбрано в качестве поставщика организация, не являющаяся компанией';
CONSTRAINT customerUserOrder(userOrder) AND NOT isCustomerLegalEntity(customerUserOrder(userOrder))
    CHECKED BY customerUserOrder MESSAGE 'Для заказа выбрано в качестве покупателя организация, не являющаяся покупателем';

CONSTRAINT taxRange(VATUserOrder(userOrder)) != tax.taxVAT OR
           countryRange(VATUserOrder(userOrder)) != countryStock(supplierStockOrder(userOrder)) OR
           rangeTypeRange(VATUserOrder(userOrder)) != rangeType.units
           CHECKED BY VATUserOrder
           MESSAGE 'ошибка: Шкала и страна строки должна соответствовать шкале и строке НДС';

isDepartmentStoreSupplierStockOrder (order) = supplierStockOrder(order) IS departmentStore;

EXTEND FORM userOrder
    PROPERTIES(o) numberVATUserOrder SHOWIF isDepartmentStoreSupplierStockOrder(o), valueVATUserOrder SHOWIF isDepartmentStoreSupplierStockOrder(o);
;

FORM emailOrder 'Заказ' PRINT
    OBJECTS o = order FIXED PANEL
    PROPERTIES (o) numberOrder, seriesOrder, nameSupplierOrder, nameCustomerOrder, nameSupplierStockOrder, nameCustomerStockOrder,
                   numberObject, seriesObject, dateOrder, timeOrder, nameCurrencyOrder, noteOrder,
                   countOrderDetailOrder, quantityOrderDetailOrder, sumOrderDetailOrder,
                   VATSumOrderDetailOrder, invoiceSumOrderDetailOrder, shipmentDateOrder

    OBJECTS d = orderDetail
    PROPERTIES (d) indexOrderDetail, idBarcodeSkuOrderDetail, nameSkuOrderDetail, shortNameUOMSkuOrderDetail,
                   quantityOrderDetail, priceOrderDetail,  sumOrderDetail, valueVATOrderDetail,
                   VATSumOrderDetail, invoiceSumOrderDetail

    FILTERS orderOrderDetail(d) == o
;

emailCustomerOrder 'Выслать подтвержденный заказ покупателю' (order) = ACTION EMAIL
    FROM emailLegalEntity(supplierOrder(order))
    SUBJECT [FORMULA STRING[60] '\'Подтверждение заказа №\' || CAST($1 AS TEXT) || \' от \' || CAST($2 AS TEXT)'](seriesNumberOrder(order), dateOrder(order))
    TO emailLegalEntity(customerOrder(order))
    INLINE emailOrder OBJECTS o=order
    ATTACH PDF
           NAME [FORMULA STRING[60] '\'Заказ №\' || CAST($1 AS TEXT) || \' от \' || CAST($2 AS TEXT)'](seriesNumberOrder(order), dateOrder(order))
           emailOrder OBJECTS o=order
;

WHEN isPostedOrder(order) DO EXEC emailCustomerOrder(order);


@defineDocumentPackageSkuStock(userOrder, sku, supplierStock, salePack);
@extendFormDocumentPackageSkuStockCustom(userOrder, userOrder, o, supplierStock, showSalePack);