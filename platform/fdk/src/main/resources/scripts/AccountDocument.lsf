MODULE AccountDocument;

REQUIRE System, Stock, Employee, Utils;

CLASS ABSTRACT accountDocumentLedger 'Учетный документ';
TABLE accountDocumentLedger (accountDocumentLedger);

CLASS ABSTRACT incAccountDocumentLedger 'Учетный документ (приход)' : accountDocumentLedger;
CLASS ABSTRACT outAccountDocumentLedger 'Учетный документ (расход)' : accountDocumentLedger;

dateTimeAccountDocumentLedger 'Дата/время' (ledger) = ABSTRACT DATETIME (accountDocumentLedger) PERSISTENT INDEXED;
dateAccountDocumentLedger 'Дата' (ledger) = dateInTime(dateTimeAccountDocumentLedger(ledger)) PERSISTENT;

isPostedAccountDocumentLedger 'Закрыт' (ledger) = ABSTRACT BOOLEAN (accountDocumentLedger) PERSISTENT;

stockAccountDocumentLedger (ledger) = ABSTRACT stock (accountDocumentLedger) PERSISTENT;
nameStockAccountDocumentLedger 'Отдел' (ledger) = name(stockAccountDocumentLedger(ledger));

descriptionAccountDocumentLedger 'Название документа' (ledger) = ABSTRACT STRING[200] (accountDocumentLedger) PERSISTENT;

GROUP ledgerGroup 'Суммы (всего)' : publicGroup;
sumIncAccountDocumentLedger 'Сумма прихода' (ledger) = ABSTRACT NUMERIC[16,2] (incAccountDocumentLedger) PERSISTENT IN ledgerGroup;
sumOutAccountDocumentLedger 'Сумма расхода' (ledger) = ABSTRACT NUMERIC[16,2] (outAccountDocumentLedger) PERSISTENT IN ledgerGroup;
sumAccountDocumentLedger 'Сумма' (ledger) = UNION EXCLUSIVE sumIncAccountDocumentLedger(ledger), -sumOutAccountDocumentLedger(ledger) PERSISTENT;

GROUP ledgerItemGroup 'Суммы по товару' : publicGroup;
sumItemIncAccountDocumentLedger 'Сумма прихода, товар' (ledger) = ABSTRACT NUMERIC[16,2] (incAccountDocumentLedger) PERSISTENT IN ledgerItemGroup;
sumItemOutAccountDocumentLedger 'Сумма расхода, товар' (ledger) = ABSTRACT NUMERIC[16,2] (outAccountDocumentLedger) PERSISTENT IN ledgerItemGroup;
sumItemAccountDocumentLedger 'Сумма, товар' (ledger) = UNION EXCLUSIVE sumItemIncAccountDocumentLedger(ledger), -sumItemOutAccountDocumentLedger(ledger) PERSISTENT;

GROUP ledgerContainerGroup 'Суммы по таре' : publicGroup;
sumContainerIncAccountDocumentLedger 'Сумма прихода, тара' (ledger) = ABSTRACT NUMERIC[16,2] (incAccountDocumentLedger) PERSISTENT IN ledgerContainerGroup;
sumContainerOutAccountDocumentLedger 'Сумма расхода, тара' (ledger) = ABSTRACT NUMERIC[16,2] (outAccountDocumentLedger) PERSISTENT IN ledgerContainerGroup;
sumContainerAccountDocumentLedger 'Сумма, тара' (ledger) = UNION EXCLUSIVE sumContainerIncAccountDocumentLedger(ledger), -sumContainerOutAccountDocumentLedger(ledger) PERSISTENT;

// -------------------------------------- Агрегированные суммы за интервал --------------------------------------------- //

countIncAccountDocumentStockDateInterval 'Количество приходных док-ов' (stock, dtFrom, dtTo)=
    GROUP SUM 1 IF incAccountDocumentLedger AS incAccountDocumentLedger AND isPostedAccountDocumentLedger(incAccountDocumentLedger)
        AND dateAccountDocumentLedger(incAccountDocumentLedger) >= (dtFrom AS DATE) AND dateAccountDocumentLedger(incAccountDocumentLedger) <= (dtTo AS DATE)
            BY stockAccountDocumentLedger(incAccountDocumentLedger), dtFrom, dtTo IN ledgerGroup;

countOutAccountDocumentStockDateInterval 'Количество расходных док-ов' (stock, dtFrom, dtTo)=
    GROUP SUM 1 IF outAccountDocumentLedger AS outAccountDocumentLedger AND isPostedAccountDocumentLedger(outAccountDocumentLedger)
        AND dateAccountDocumentLedger(outAccountDocumentLedger) >= (dtFrom AS DATE) AND dateAccountDocumentLedger(outAccountDocumentLedger) <= (dtTo AS DATE)
            BY stockAccountDocumentLedger(outAccountDocumentLedger), dtFrom, dtTo IN ledgerGroup;


sumItemIncAccountDocumentStockDateInterval 'Сумма прихода, товар' (stock, dtFrom, dtTo)=
    GROUP SUM sumItemIncAccountDocumentLedger(incAccountDocumentLedger)  AND isPostedAccountDocumentLedger(incAccountDocumentLedger)
        AND dateAccountDocumentLedger(incAccountDocumentLedger) >= (dtFrom AS DATE) AND dateAccountDocumentLedger(incAccountDocumentLedger) <= (dtTo AS DATE)
            BY stockAccountDocumentLedger(incAccountDocumentLedger), dtFrom, dtTo IN ledgerItemGroup;

sumItemOutAccountDocumentStoreDateInterval 'Сумма расхода, товар' (stock, dtFrom, dtTo)=
    GROUP SUM sumItemOutAccountDocumentLedger(outAccountDocumentLedger) AND isPostedAccountDocumentLedger(outAccountDocumentLedger)
        AND dateAccountDocumentLedger(outAccountDocumentLedger) >= (dtFrom AS DATE) AND dateAccountDocumentLedger(outAccountDocumentLedger) <= (dtTo AS DATE)
            BY stockAccountDocumentLedger(outAccountDocumentLedger), dtFrom, dtTo IN ledgerItemGroup;


sumContainerIncAccountDocumentStockDateInterval 'Сумма прихода, тара' (stock, dtFrom, dtTo)=
    GROUP SUM sumContainerIncAccountDocumentLedger(incAccountDocumentLedger) AND isPostedAccountDocumentLedger(incAccountDocumentLedger)
        AND dateAccountDocumentLedger(incAccountDocumentLedger) >= (dtFrom AS DATE) AND dateAccountDocumentLedger(incAccountDocumentLedger) <= (dtTo AS DATE)
            BY stockAccountDocumentLedger(incAccountDocumentLedger), dtFrom, dtTo IN ledgerContainerGroup;

sumContainerOutAccountDocumentStockDateInterval 'Сумма расхода, тара' (stock, dtFrom, dtTo)=
    GROUP SUM sumContainerOutAccountDocumentLedger(outAccountDocumentLedger) AND isPostedAccountDocumentLedger(outAccountDocumentLedger)
        AND dateAccountDocumentLedger(outAccountDocumentLedger) >= (dtFrom AS DATE) AND dateAccountDocumentLedger(outAccountDocumentLedger) <= (dtTo AS DATE)
            BY stockAccountDocumentLedger(outAccountDocumentLedger), dtFrom, dtTo IN ledgerContainerGroup;

// -------------------------------------- Остатки по суммам --------------------------------------------- //

currentSumAccountDocumentLedger 'Текущий остаток по документам' (stock) = GROUP SUM sumAccountDocumentLedger (ledger) AND isPostedAccountDocumentLedger(ledger)
                                                                                           BY stockAccountDocumentLedger(ledger) PERSISTENT;

sumAccountBDocumentLedgerDateTime 'Остаток на начало' (stock, dateTime) = UNION SUM currentSumAccountDocumentLedger(stock) AND dateTime IS DATETIME,
                                                                         -[GROUP SUM sumAccountDocumentLedger (ledger) AND dateTimeAccountDocumentLedger(ledger) >= (dateTime AS DATETIME) AND isPostedAccountDocumentLedger(ledger)
                                                                         BY stockAccountDocumentLedger(ledger), dateTime](stock, dateTime);

sumAccountADocumentLedgerDateTime 'Остаток на конец' (stock, dateTime) = UNION SUM currentSumAccountDocumentLedger(stock) AND dateTime IS DATETIME,
                                                                         -[GROUP SUM sumAccountDocumentLedger (ledger) AND dateTimeAccountDocumentLedger(ledger) > (dateTime AS DATETIME) AND isPostedAccountDocumentLedger(ledger)
                                                                         BY stockAccountDocumentLedger(ledger), dateTime](stock, dateTime);

sumAccountBDocumentLedgerDate 'Остаток на начало' (stock, date) = UNION SUM currentSumAccountDocumentLedger(stock) AND date IS DATE,
                                                                            -[GROUP SUM sumAccountDocumentLedger (ledger) AND dateAccountDocumentLedger(ledger) >= (date AS DATE) AND isPostedAccountDocumentLedger(ledger)
                                                                            BY stockAccountDocumentLedger(ledger), date](stock, date) IN ledgerGroup;

sumAccountADocumentLedgerDate 'Остаток на конец' (stock, date) = UNION SUM currentSumAccountDocumentLedger(stock) AND date IS DATE,
                                                                           -[GROUP SUM sumAccountDocumentLedger (ledger) AND dateAccountDocumentLedger(ledger) > (date AS DATE) AND isPostedAccountDocumentLedger(ledger)
                                                                           BY stockAccountDocumentLedger(ledger), date](stock, date) IN ledgerGroup;

// -------------------------------------- Остатки по суммам (товар) --------------------------------------------- //

currentSumItemAccountDocumentLedger 'Текущий остаток по документам, товар' (stock) = GROUP SUM sumItemAccountDocumentLedger (ledger) AND isPostedAccountDocumentLedger(ledger)
                                                                                           BY stockAccountDocumentLedger(ledger) PERSISTENT;

sumItemAccountBDocumentLedgerDateTime 'Остаток на начало, товар' (stock, dateTime) = UNION SUM currentSumItemAccountDocumentLedger(stock) AND dateTime IS DATETIME,
                                                                         -[GROUP SUM sumItemAccountDocumentLedger (ledger) AND dateTimeAccountDocumentLedger(ledger) >= (dateTime AS DATETIME) AND isPostedAccountDocumentLedger(ledger)
                                                                         BY stockAccountDocumentLedger(ledger), dateTime](stock, dateTime);

sumItemAccountADocumentLedgerDateTime 'Остаток на конец, товар' (stock, dateTime) = UNION SUM currentSumItemAccountDocumentLedger(stock) AND dateTime IS DATETIME,
                                                                         -[GROUP SUM sumItemAccountDocumentLedger (ledger) AND dateTimeAccountDocumentLedger(ledger) > (dateTime AS DATETIME) AND isPostedAccountDocumentLedger(ledger)
                                                                         BY stockAccountDocumentLedger(ledger), dateTime](stock, dateTime);

sumItemAccountBDocumentLedgerDate 'Остаток на начало, товар' (stock, date) = UNION SUM currentSumItemAccountDocumentLedger(stock) AND date IS DATE,
                                                                            -[GROUP SUM sumItemAccountDocumentLedger (ledger) AND dateAccountDocumentLedger(ledger) >= (date AS DATE) AND isPostedAccountDocumentLedger(ledger)
                                                                            BY stockAccountDocumentLedger(ledger), date](stock, date) IN ledgerItemGroup;

sumItemAccountADocumentLedgerDate 'Остаток на конец, товар' (stock, date) = UNION SUM currentSumItemAccountDocumentLedger(stock) AND date IS DATE,
                                                                           -[GROUP SUM sumItemAccountDocumentLedger (ledger) AND dateAccountDocumentLedger(ledger) > (date AS DATE) AND isPostedAccountDocumentLedger(ledger)
                                                                           BY stockAccountDocumentLedger(ledger), date](stock, date) IN ledgerItemGroup;

// -------------------------------------- Остатки по суммам (тара) --------------------------------------------- //

currentSumContainerAccountDocumentLedger 'Текущий остаток по документам, тара' (stock) = GROUP SUM sumContainerAccountDocumentLedger (ledger) AND isPostedAccountDocumentLedger(ledger)
                                                                                           BY stockAccountDocumentLedger(ledger) PERSISTENT;
sumContainerAccountBDocumentLedgerDateTime 'Остаток на начало, тара' (stock, dateTime) = UNION SUM currentSumContainerAccountDocumentLedger(stock) AND dateTime IS DATETIME,
                                                                         -[GROUP SUM sumContainerAccountDocumentLedger (ledger) AND dateTimeAccountDocumentLedger(ledger) >= (dateTime AS DATETIME) AND isPostedAccountDocumentLedger(ledger)
                                                                         BY stockAccountDocumentLedger(ledger), dateTime](stock, dateTime);

sumContainerAccountADocumentLedgerDateTime 'Остаток на конец, тара' (stock, dateTime) = UNION SUM currentSumContainerAccountDocumentLedger(stock) AND dateTime IS DATETIME,
                                                                         -[GROUP SUM sumContainerAccountDocumentLedger (ledger) AND dateTimeAccountDocumentLedger(ledger) > (dateTime AS DATETIME) AND isPostedAccountDocumentLedger(ledger)
                                                                         BY stockAccountDocumentLedger(ledger), dateTime](stock, dateTime);

sumContainerAccountBDocumentLedgerDate 'Остаток на начало, тара' (stock, date) = UNION SUM currentSumContainerAccountDocumentLedger(stock) AND date IS DATE,
                                                                            -[GROUP SUM sumContainerAccountDocumentLedger (ledger) AND dateAccountDocumentLedger(ledger) >= (date AS DATE) AND isPostedAccountDocumentLedger(ledger)
                                                                            BY stockAccountDocumentLedger(ledger), date](stock, date) IN ledgerContainerGroup;

sumContainerAccountADocumentLedgerDate 'Остаток на конец, тара' (stock, date) = UNION SUM currentSumContainerAccountDocumentLedger(stock) AND date IS DATE,
                                                                           -[GROUP SUM sumContainerAccountDocumentLedger (ledger) AND dateAccountDocumentLedger(ledger) > (date AS DATE) AND isPostedAccountDocumentLedger(ledger)
                                                                           BY stockAccountDocumentLedger(ledger), date](stock, date) IN ledgerContainerGroup;

// -------------------------------------- Подитоги --------------------------------------------- //

subtotalItemIncAccountDocumentStockDateInterval 'Итого с остатком, товар' (stock, dtFrom, dtTo) = UNION SUM
    sumItemAccountBDocumentLedgerDate(stock, dtFrom) AND dtTo AS DATE,
    sumItemIncAccountDocumentStockDateInterval(stock, dtFrom, dtTo) IN ledgerItemGroup;

subtotalContainerIncAccountDocumentStockDateInterval 'Итого с остатком, тара' (stock, dtFrom, dtTo) = UNION SUM
    sumContainerAccountBDocumentLedgerDate(stock, dtFrom) AND dtTo AS DATE,
    sumContainerIncAccountDocumentStockDateInterval(stock, dtFrom, dtTo) IN ledgerContainerGroup;


// ------------------------------------------- Ответственные лица --------------------------------------------- //

MRPStock 'Материально ответственное лицо, подписывающее товарный отчет (ИД)' = DATA employee (stock);
nameMRPStock 'Материально ответственное лицо, подписывающее товарный отчет' (stock) =
    commonName (MRPStock(stock));
namePositionMRPStock 'Материально ответственное лицо, подписывающее товарный отчет (должность)' =
    namePositionEmployee(MRPStock(stock));
CONSTRAINT MRPStock(stock) AND NOT inEmployeeDivisionEmployee(stock, MRPStock(stock))
    CHECKED BY MRPStock MESSAGE 'МОЛ не сотрудник отдела';

bookkeeperStock 'Бухгалтер, принимающий товарный отчет (ИД)' = DATA employee (stock);
nameBookkeeperStock 'Бухгалтер, принимающий товарный отчет' (stock) = commonName(bookkeeperStock(stock));
namePositionBookkeeperStock 'Бухгалтер, принимающий товарный отчет (должность)' =
    namePositionEmployee(bookkeeperStock(stock));
CONSTRAINT bookkeeperStock(stock) AND NOT inEmployeeDivisionEmployee(stock, bookkeeperStock(stock))
    CHECKED BY bookkeeperStock MESSAGE 'Бухгалтер не сотрудник отдела';

personCheckStock 'Кто проверяет товарный отчет (ИД)' = DATA employee (stock);
namePersonCheckStock 'Кто проверяет товарный отчет' (stock) = commonName(personCheckStock(stock));
namePositionPersonCheckStock 'Кто проверяет товарный отчет (должность)' =
    namePositionEmployee(personCheckStock(stock));
CONSTRAINT personCheckStock(stock) AND NOT inEmployeeDivisionEmployee(stock, personCheckStock(stock))
    CHECKED BY personCheckStock MESSAGE 'Проверяющий не сотрудник отдела';

// -------------------------------------- Формы --------------------------------------------- //

FORM sumAccountDocumentLedger 'Товарный отчет'
    OBJECTS params = (dtFrom = DATE, dtTo = DATE) FIXED PANEL,
            ds = stock FIXED PANEL
    PROPERTIES objFrom = OBJVALUE(dtFrom), objTo = OBJVALUE(dtTo)
    PROPERTIES(ds) SELECTOR name, nameCompanyStock, UNPStock,
    nameMRPStock, namePositionMRPStock, nameBookkeeperStock,
    namePositionBookkeeperStock, namePersonCheckStock, namePositionPersonCheckStock

    PROPERTIES sumAccountBDocumentLedgerDate(ds, dtFrom), sumItemAccountBDocumentLedgerDate(ds, dtFrom), sumContainerAccountBDocumentLedgerDate(ds, dtFrom),
               sumItemAccountADocumentLedgerDate(ds, dtTo), sumContainerAccountADocumentLedgerDate(ds, dtTo), sumAccountADocumentLedgerDate(ds, dtTo)
    PROPERTIES(ds, dtFrom, dtTo) countIncAccountDocumentStockDateInterval, countOutAccountDocumentStockDateInterval,
               sumItemIncAccountDocumentStockDateInterval, sumContainerIncAccountDocumentStockDateInterval,
               subtotalItemIncAccountDocumentStockDateInterval, subtotalContainerIncAccountDocumentStockDateInterval,
               sumItemOutAccountDocumentStoreDateInterval, sumContainerOutAccountDocumentStockDateInterval

    OBJECTS il = incAccountDocumentLedger
    PROPERTIES(il) SELECTOR iDateTime = dateTimeAccountDocumentLedger, iObjName = objectClassName, iDescription = descriptionAccountDocumentLedger,
                   sumItemIncAccountDocumentLedger, sumContainerIncAccountDocumentLedger, sumIncAccountDocumentLedger
    FILTERS isPostedAccountDocumentLedger(il),
            stockAccountDocumentLedger(il) == ds,
            dateAccountDocumentLedger(il) >= dtFrom,
            dateAccountDocumentLedger(il) <= dtTo
    ORDER BY iDateTime

    OBJECTS ol = outAccountDocumentLedger
    PROPERTIES(ol) SELECTOR oDateTime = dateTimeAccountDocumentLedger, oObjName = objectClassName, oDescription = descriptionAccountDocumentLedger,
                   sumItemOutAccountDocumentLedger, sumContainerOutAccountDocumentLedger, sumOutAccountDocumentLedger
    FILTERS isPostedAccountDocumentLedger(ol),
            stockAccountDocumentLedger(ol) == ds,
            dateAccountDocumentLedger(ol) >= dtFrom,
            dateAccountDocumentLedger(ol) <= dtTo
    ORDER BY oDateTime
;


DESIGN sumAccountDocumentLedger FROM DEFAULT {
    NEW row{
        childConstraints = TO THE RIGHT;
        title = 'Комиссия';
        NEW row1 {
            title = 'МОЛ';
            childConstraints = TO THE RIGHT;
            ADD PROPERTY (nameMRPStock(ds)){
                caption = 'Имя';
            }
            ADD PROPERTY (namePositionMRPStock(ds)){
                caption = 'Должность';
            }
        }
        NEW row2 {
            title = 'Проверяющий';
            childConstraints = TO THE RIGHT;
            ADD PROPERTY (namePersonCheckStock(ds)){
                caption = 'Имя';
            }
            ADD PROPERTY (namePositionPersonCheckStock(ds)){
                caption = 'Должность';
            }
        }
        NEW row3{
            title = 'Бухгалтер';
            childConstraints = TO THE RIGHT;
            ADD PROPERTY (nameBookkeeperStock(ds)){
                caption = 'Имя';
            }
            ADD PROPERTY (namePositionBookkeeperStock(ds)){
                caption = 'Должность';
            }
        }
    }

    NEW HeaderCase BEFORE row{
        title = 'Суммы';
        childConstraints = TO THE RIGHT;
        ADD ds.ledgerItemGroup;
        ADD ds.ledgerContainerGroup;
        ADD ds.ledgerGroup;
    }

    NEW OneCase BEFORE HeaderCase{
         childConstraints = TO THE BOTTOM;
         NEW container11 {
            childConstraints = TO THE RIGHT;
            NEW dateCase {
                title = 'Даты';
                childConstraints = TO THE RIGHT;
                ADD PROPERTY(objFrom) {
                    caption = 'Дата (с)';
                }
                ADD PROPERTY(objTo) {
                    caption = 'Дата (по)';
                }
            }
            NEW departmentCase {
                title = 'Отдел';
                ADD PROPERTY (name(ds)) {
                    caption = 'Название';
                };
            }
         }
         NEW container12 {
            title = 'Организация';
            childConstraints = TO THE RIGHT;
            ADD PROPERTY (nameCompanyStock(ds));
            ADD PROPERTY (UNPStock(ds));
         }
    }

    NEW topContainer{

        type = SPLITV;
        childConstraints = TO THE BOTTOM;

        ADD il.box;
        ADD ol.box;
    }

    ADD functions.box;
}

// ------------------------------------------ Макросы ----------------------------------------------------- //
META implementAccountDocumentLedger (concrete, stockProp)
    dateTimeAccountDocumentLedger (ledger) += dateTime###concrete(ledger);
    isPostedAccountDocumentLedger (ledger) += isPosted###concrete(ledger);
    stockAccountDocumentLedger (ledger) += stockProp###concrete(ledger);
    descriptionAccountDocumentLedger (ledger) += description###concrete(ledger);
END

META extendStockFormAccountDocumentLedger(form, object)
    EXTEND FORM form
        PROPERTIES(object)   nameMRPStock, nameBookkeeperStock, namePersonCheckStock //namePositionMRPStock, namePositionBookkeeperStock, namePositionPersonCheckStock
    ;
END