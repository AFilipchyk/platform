MODULE Operation;

REQUIRE Utils, Historizable;

CLASS ABSTRACT Operation 'Операция' : Named, Historizable;
TABLE operation(Operation);

// -------------------------------------- Макросы по созданию операций ---------------------------------- //

META defineOperation(postfix)

    CLASS Operation 'Операция' : Operation.Operation;
    TABLE operation(Operation);

    TABLE legalEntity###operation(LegalEntity, Operation);
    TABLE legalEntityGroup###operation(LegalEntityGroup, Operation);

    FORM operation 'Операция'##postfix
        OBJECTS o = Operation FIXED PANEL
        PROPERTIES(o) name, timeCreatedHistorizable, nameUserCreatedHistorizable, hostnameComputerCreatedHistorizable

        EDIT Operation OBJECT o
    ;

    DESIGN operation FROM DEFAULT {
        main {
            preferredSize = (1024, 768);
            NEW topContainer{
                type = SPLITV;
                NEW headContainer{
                    childConstraints = TO THE RIGHT;
                    NEW propertyContainer{
                        childConstraints = TO THE BOTTOM;
                        caption = 'Параметры';
                        ADD PROPERTY(name);
                    }
                    ADD o.historyGroup;
                }
                NEW tabContainer{
                    type = TABBED;
                }
            }
            ADD functions.box;
        }
    }

    FORM operations 'Операции' TITLE 'Операции'##postfix
        OBJECTS o = Operation
        PROPERTIES(o) READONLY name, timeCreatedHistorizable, nameUserCreatedHistorizable, hostnameComputerCreatedHistorizable
        PROPERTIES(o) ADDFORM, EDITFORM, delete

        DIALOG Operation OBJECT o
    ;

END

// -------------------------------------- Макросы по объявлению операций в документах ---------------------------------- //

META defineDocumentOperation(object, char)

    operation###object = ABSTRACT Operation (###object) PERSISTENT;
    name###operation###object 'Операция' = name(operation###object(object));
    operationUser###object = DATA Operation (User###object);
    name###operationUser###object 'Операция' = name(operationUser###object(user###object));
    operation###object(object) += operationUser###object(object);

    operation###object##Detail 'Операция' (object##Detail) = operation###object(object###object##Detail(object##Detail));
    operationUser###object##Detail 'Операция' (user###object##Detail) = operationUser###object(user###object##User###object##Detail(user###object##Detail));

    EXTEND FORM user###object
        PROPERTIES(char) name###operationUser###object
    ;

    EXTEND DESIGN user###object{
        char.documentPrmGroup{
            ADD PROPERTY(name###operationUser###object) BEFORE PROPERTY(nameCurrencyUser###object);
        }
    }

END

// -------------------------------------- Организации ---------------------------------- //

META defineOperationLegalEntity(prop, object, filter, tabcaption)

    // Отметка для групп
    is###prop###group###operation 'Отм.' = DATA BOOLEAN (LegalEntityGroup, Operation);

    levelParent###prop###operation###legalEntityGroup (operation, legalEntityGroup) = GROUP MIN level###legalEntityGroup###legalEntityGroup(legalEntityGroup, parent) IF is###prop##Group###operation(parent, operation)
                                                                   BY operation, legalEntityGroup PERSISTENT;
    nearestParent###prop##Group###legalEntityGroup (operation, legalEntityGroup) = legalEntityGroup###legalEntityGroup###level(legalEntityGroup, levelParent###prop###operation###legalEntityGroup(operation, legalEntityGroup));
    nearest###is###prop##Group###operation (legalEntityGroup, operation) =
        is###prop##Group###operation(nearestParent###prop##Group###legalEntityGroup(operation, legalEntityGroup), operation) PERSISTENT;

    is###prop##Group###operation##Over 'Отм' (legalEntityGroup, operation) =
        UNION OVERRIDE nearest###is###prop##Group###operation(legalEntityGroup, operation),
                       is###prop##Group###operation(legalEntityGroup, operation);

    // Отметка для организаций
    is###prop###operation 'Отм.' = DATA BOOLEAN (LegalEntity, Operation);
    is###prop###operation##Over 'Отм' (legalEntity, operation) =
        (UNION OVERRIDE nearest###is###prop##Group###operation(legalEntityGroup###legalEntity(legalEntity), operation),
                        is###prop###operation(legalEntity, operation));

    EXTEND FORM operation
        TREE prop###groupTree object##g = LegalEntityGroup PARENT parentLegalEntityGroup
        PROPERTIES READONLY sgTreeName = name(object##g)
        PROPERTIES is###prop###Group###operation##Over(object##g, o)

        OBJECTS object = LegalEntity
        PROPERTIES(object, o) is###prop###operation##Over
        PROPERTIES(object) READONLY name, fullNameLegalEntity, shortNameOwnershipLegalEntity, nameLegalEntityGroupLegalEntity,
                               addressLegalEntity, phoneLegalEntity,
                               isSupplierLegalEntity, isCompanyLegalEntity, isCustomerLegalEntity
        FILTERS (inLegalEntityGroupLegalEntity(object##g, object) OR (object IS LegalEntity AND object##g IS LegalEntityGroup AND NOT legalEntityGroupLegalEntity(object))),
                filter(object)
        FILTERGROUP filters2
                FILTER 'Показывать отмеченные' 'F10' is###prop###operation(object, o)
    ;

    EXTEND DESIGN operation {
        tabContainer {
            NEW prop###Container{
                childConstraints = TO THE RIGHT;
                type = SPLITH;
                caption = tabcaption;
                ADD prop###groupTree.tree.box;
                ADD object.box { fillHorizontal = 2.0; };
            }
        }
    }

END

META defineDocumentOperationLegalEntity(object, prop, caption)
    CONSTRAINT operation###object(object)
               AND NOT is###prop###operation##Over(prop###object(object), operation###object(object))
        CHECKED BY prop###object
        MESSAGE caption##' должен совпадать с отмеченными в операции';
END
