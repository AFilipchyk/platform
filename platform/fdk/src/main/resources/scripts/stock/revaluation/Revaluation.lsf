MODULE Revaluation;

REQUIRE Employee, Stock, StockDocument, PriceListCalc, Terminal, PriceListLedger;

//--------------------------------Комиссия для списания----------------------------------//
CLASS RevaluationCommittee 'Комиссия для переоценки' : Committee;

nameRevaluationCommittee 'Наименование' = DATA ISTRING[150](RevaluationCommittee);

nameCommittee(committee) += nameRevaluationCommittee(committee) IF committee IS RevaluationCommittee;

revaluationCommitteeStock 'Комиссия для переоценки' = DATA RevaluationCommittee (Stock);
nameRevaluationCommitteeStock 'Комиссия для переоценки' (stock) = nameRevaluationCommittee(revaluationCommitteeStock(stock)) IN committeeGroup;
isRevaluationCommitteeStock 'По умолчанию' (revaluationCommittee, stock) = revaluationCommitteeStock(stock) == revaluationCommittee;
CONSTRAINT revaluationCommitteeStock(stock) AND NOT inCommitteeEmployeeDivision(revaluationCommitteeStock(stock), stock)
    CHECKED BY revaluationCommitteeStock MESSAGE 'Для отдела выбрана комиссия, которая для него не действует';

FORM revaluationCommittee 'Комиссия для переоценки'
    OBJECTS c=RevaluationCommittee FIXED PANEL
    PROPERTIES(c)      nameRevaluationCommittee, nameChairmanCommittee

    TREE stockTree sg = StockGroup PARENT parentStockGroup
    PROPERTIES READONLY sgTreeName = nameStockGroup(sg)

    OBJECTS ts=Stock
    PROPERTIES    READONLY tsTreeName = nameStock(ts)
    PROPERTIES(c, ts) inCommitteeEmployeeDivision FORCE GRID, isRevaluationCommitteeStock

    FILTERS isParentStockGroupStock(sg, ts)
    ORDER BY tsTreeName


    OBJECTS e=Employee
    PROPERTIES(e)      READONLY nameContact, firstNameContact, lastNameContact, namePositionEmployee
    PROPERTIES(e)      ADDSESSIONFORM, EDITSESSIONFORM, delete

    PROPERTIES(c, e)   inCommitteeEmployee
    FILTERS            countDivisionEmployeeCommittee (e, c)
    FILTERGROUP filters6
        FILTER 'Показывать только членов комиссии' 'F10' inCommitteeEmployee(c, e)

    FILTERGROUP filters5
        FILTER 'Показывать отделы только для данной комиссии' 'F9' inCommitteeEmployeeDivision(c, ts)

    EDIT RevaluationCommittee OBJECT c
;
@extendFormFilterStockAccess(Stock, ts, revaluationCommittee);
@extendFormFilterStockGroupAccess(StockGroup, sg, revaluationCommittee, countAccessEmployeeEmployeeDivisionGroup);

DESIGN revaluationCommittee FROM DEFAULT {
    main {
        preferredSize = (1024, 768);
        NEW oneCase BEFORE e.box {
            ADD PROPERTY (nameChairmanCommittee);
        }

        NEW caseOne BEFORE oneCase {
            childConstraints = TO THE RIGHT;
            title = 'Отделы, для которых действуют комиссии';

            ADD stockTree.tree {
                fillHorizontal = 1;
            }

            ADD ts.box {
                fillHorizontal = 2;
            }
        };
    }
}

FORM revaluationCommitteeDialog 'Комиссии для переоценки'
    OBJECTS w=RevaluationCommittee
    PROPERTIES(w)      READONLY nameRevaluationCommittee, nameEmployeeDivisionCommittee, nameEmployeeCommittee, nameChairmanCommittee
    PROPERTIES(w)      ADDFORM, EDITFORM

    DIALOG RevaluationCommittee OBJECT w
;
// ----------------------------------- Макрос для задания комиссии для документов ------------------------------------------ //

META defineDocumentHeaderRevaluationCommittee(object, stockProp)
    numberDisposal###object '№ распоряжения на переоценку' (object) = DATA STRING[30] (###object) IN documentPrmGroup;

    revaluationCommittee###object (object) = DATA RevaluationCommittee(###object);
    nameRevaluationCommittee###object 'Комиссия для переоценки' (object) = nameRevaluationCommittee(revaluationCommittee###object(object)) IN documentPrmGroup MINCHARWIDTH 20 PREFCHARWIDTH 40;
    revaluationCommittee###object (object) <- revaluationCommitteeStock(stockProp###object(object))
        WHEN CHANGED(stockProp###object(object));

    CONSTRAINT revaluationCommittee###object (object) AND NOT inCommitteeEmployeeDivision(revaluationCommittee###object (object), stockProp###object(object))
        CHECKED BY revaluationCommittee###object MESSAGE 'Для документа выбрана комиссия, которая не действует для склада документа';

    inCommittee###object##Employee (object, employee) = inCommitteeEmployee(revaluationCommittee###object (object), employee);
    nameEmployeeCommittee###object 'Члены комиссии' (object) = namePositionEmployeeCommittee(revaluationCommittee###object (object));
    nameChairman###object 'Председатель комиссии' (object) = nameChairmanCommittee(revaluationCommittee###object(object));
    namePositionChairman###object 'Должность' (object) = namePositionChairmanCommittee(revaluationCommittee###object(object));
END
META defineDocumentHeaderAbstractRevaluationCommittee(object)
    numberDisposal###object '№ распоряжения на переоценку' (object) = ABSTRACT STRING[30] (###object) IN documentPrmGroup;

    revaluationCommittee###object (object) = ABSTRACT RevaluationCommittee(###object);
    nameRevaluationCommittee###object 'Комиссия для переоценки' (object) = nameRevaluationCommittee(revaluationCommittee###object(object)) IN documentPrmGroup MINCHARWIDTH 20 PREFCHARWIDTH 40;

    inCommittee###object##Employee (object, employee) = inCommitteeEmployee(revaluationCommittee###object (object), employee);
    nameEmployeeCommittee###object 'Члены комиссии' (object) = namePositionEmployeeCommittee(revaluationCommittee###object (object));
    nameChairman###object 'Председатель комиссии' (object) = nameChairmanCommittee(revaluationCommittee###object(object));
    namePositionChairman###object 'Должность' (object) = namePositionChairmanCommittee(revaluationCommittee###object(object));
END

META defineDocumentInterfaceHeaderRevaluationCommittee (object, stockProp)
    @defineDocumentHeaderAbstractRevaluationCommittee (object);
    @defineDocumentHeaderRevaluationCommittee (user###object, stockProp);
    revaluationCommittee###object (object) += revaluationCommittee###user###object(object);
    numberDisposal###object (object) += numberDisposal###user###object(object);
END

//----------------------------------------------- Переоценка ---------------------------------------------------//

CLASS ABSTRACT Revaluation 'Переоценка';
CLASS ABSTRACT RevaluationDetail 'Строка переоценки': InLIFOSkuLedger;

CLASS UserRevaluation 'Переоценка (польз.)' : Revaluation, Historizable, NumeratedDocument;
CLASS UserRevaluationDetail 'Строка переоценки (польз.)' : RevaluationDetail;
CLASS UserRevaluationPosted 'Проведенная переоценки (польз.)' : UserRevaluation, PostedObject;

@defineDocumentInterface(revaluation);

@defineDocumentInterfaceTimePrefix(revaluation, before, ' документа (до)');

@defineDocumentInterfaceNumber(revaluation);

@defineDocumentInterfaceDataStock(revaluation, stock, 'Склад');
@defineDocumentInterfacePosted(revaluation);

@defineDocumentInterfaceDescription(revaluation, 'Переоценка');

@defineDocumentInterfaceCurrency(revaluation);
@deriveDocumentCurrency(userRevaluation, stock);

// Комиссия
@defineDocumentInterfaceHeaderRevaluationCommittee (revaluation, stock);

// Sku
@defineDocumentInterfaceDetailSku(revaluation, sku);

// Кол-во
@defineDocumentInterfaceDetailQuantity(revaluation);

// Партия
@defineDocumentInterfaceDetailBatch(revaluation, batch);

changeBatchUserRevaluationDetail = ACTION (userRevaluationDetail) {
    FORM dialogBatch OBJECTS st = stockUserRevaluationDetail(userRevaluationDetail),
                             t = dateTimeUserRevaluationDetail(userRevaluationDetail),
                             sk = skuUserRevaluationDetail(userRevaluationDetail) MODAL SHOWDROP;

    IF formResult() == FormResult.ok THEN {
        SET batchUserRevaluationDetail(userRevaluationDetail) <- chosenObject('bt');
    } ELSE IF formResult() == FormResult.drop THEN {
        SET batchUserRevaluationDetail(userRevaluationDetail) <- NULL;
    }

}

// -- До

// Цена учетная
@defineDocumentInterfaceDetailPricePrefix(revaluation, cur, ' учетная до');

// Автоматическое заполнение цен до
@deriveDocumentDetailPriceSystemLedgerPriceListTypeBatch(userRevaluation, accountPriceListType, cur, sku, stock);

// -- После

// Цена учетная
@defineDocumentInterfaceDetailPricePrefix(revaluation, , ' учетная после');

// ---- Суммы по строкам ---- //

// -- До
@defineDocumentInterfaceDetailDataSumPrefix (revaluation, cur, ' учетная до');

// -- После
@defineDocumentInterfaceDetailDataSumPrefix (revaluation, , ' учетная после');

// -- Разница
@defineDocumentInterfaceDetailDiffSumPrefix (revaluation, sum, , cur, ' изменения учетной ');

// -- До
@deriveDocumentDetailSumPrefix(userRevaluation, cur, currency, quantity);

// -- После
@deriveDocumentDetailSumPrefix(userRevaluation, , currency, quantity);

// ---- Суммы по документу ---- //

@defineDocumentInterfaceHeaderQuantity(revaluation);
@defineDocumentHeaderSkuQuantity(revaluation, sku);
@defineDocumentHeaderSkuQuantity(userRevaluation, sku);

// -- До
@defineDocumentInterfaceHeaderSumPrefix (revaluation, cur, ' учетная  до');

// -- После
@defineDocumentInterfaceHeaderSumPrefix (revaluation, , ' учетная после');

// -- Разница
@defineDocumentInterfaceHeaderSumPrefix (revaluation, diff, ' изменения учетной');

// Изменение сумм по товару и таре
@defineDocumentHeaderItemSum(revaluation, diff, );
@defineDocumentHeaderItemSum(userRevaluation, diff, );

// Действия по добавлению строк
@defineAddDetailDialogSkuStock(userRevaluation, sku, stock, dialogSku);
@defineAddDetailDialogBarcode(userRevaluation, sku);
@defineAddDetailDialogTerminal(userRevaluation, sku);

// Не изменять текущие цены
@defineDocumentInterfaceHeaderSkip(Revaluation, changeLedger, 'Не изменять текущие цены');
@defineDocumentInterfaceDetailSkip(revaluation, changeLedger, 'Не изменять текущие цены');

// Проведение по регистру
@implementSkuLedger(revaluationDetail, sku, stock);
sumInSkuLedger (ledger) += diffSumRevaluationDetail(ledger);

//------------------------------------ Печатные формы акт расценки ------------------------------------------------ //

FORM revaluation 'Переоценка (печать)' PRINT

    OBJECTS p = Revaluation FIXED PANEL
    PROPERTIES (p) SELECTOR objectClassName

    PROPERTIES (p) numberRevaluation, seriesRevaluation, dateRevaluation, timeRevaluation, beforeDateRevaluation, nameStockRevaluation,
                   diffSumRevaluationDetailRevaluation, curSumRevaluationDetailRevaluation, sumRevaluationDetailRevaluation,
                   quantityRevaluationDetailRevaluation, countRevaluationDetailRevaluation,
                   nameRevaluationCommitteeRevaluation, skipChangeLedgerRevaluation,
                   noteRevaluation, numberDisposalRevaluation, revaluationCommitteeRevaluation, nameEmployeeCommitteeRevaluation,
                   nameChairmanRevaluation, namePositionChairmanRevaluation

    OBJECTS d = RevaluationDetail
    PROPERTIES (d) indexRevaluationDetail, idBarcodeSkuRevaluationDetail, nameSkuRevaluationDetail,
                   shortNameUOMSkuRevaluationDetail, nameBatchRevaluationDetail, quantityRevaluationDetail,
                   curPriceRevaluationDetail, curSumRevaluationDetail,
                   priceRevaluationDetail, sumRevaluationDetail, diffSumRevaluationDetail

    OBJECTS e=Employee
    PROPERTIES(e) READONLY   nameContact, namePositionEmployee

    FILTERS    revaluationRevaluationDetail(d) == p,
               inCommitteeRevaluationEmployee(p, e)

;

printRevaluation 'Переоценка' (revaluation) = ACTION FORM revaluation OBJECTS p = revaluation IMAGE 'print.png' IN printGroup;

// --------------------------- Формы --------------------------------- //

FORM userRevaluation 'Переоценка'
    OBJECTS p=UserRevaluation FIXED PANEL
    PROPERTIES (p) objectClassName, nameNumeratorObject, numberObject, seriesObject,
                   dateUserRevaluation, timeUserRevaluation, beforeDateUserRevaluation, nameStockUserRevaluation,
                   diffSumUserRevaluationDetailUserRevaluation, noteUserRevaluation, numberDisposalUserRevaluation,
                   nameRevaluationCommitteeUserRevaluation, skipChangeLedgerUserRevaluation

    OBJECTS d=UserRevaluationDetail
    PROPERTIES (d) indexUserRevaluationDetail, idBarcodeSkuUserRevaluationDetail, nameSkuUserRevaluationDetail,
                   shortNameUOMSkuUserRevaluationDetail, nameBatchUserRevaluationDetail ON CHANGE changeBatchUserRevaluationDetail(d), quantityUserRevaluationDetail,
                   curPriceUserRevaluationDetail, curSumUserRevaluationDetail,
                   priceUserRevaluationDetail, sumUserRevaluationDetail, ADDOBJ, delete

    PROPERTIES(p) TODRAW d addDetailDialogSkuStockUserRevaluationDetailUserRevaluation, addDetailDialogTerminalUserRevaluationDetailUserRevaluation,
                           addDetailInputBarcodeUserRevaluationDetailUserRevaluation, deleteUserRevaluationDetailUserRevaluation

    FILTERS userRevaluationUserRevaluationDetail(d)==p

    EVENTS
        ON OK prePostUserRevaluation(p)

    EDIT UserRevaluation OBJECT p
;

DESIGN userRevaluation FROM DEFAULT {
    main {
        preferredSize = (1024, 768);

        NEW specification.box BEFORE functions.box{

            ADD d.box {
                title = 'Спецификация';
                d.panel {
                    childConstraints = TO THE RIGHTBOTTOM;
                }
            }
        }
        NEW header.box BEFORE specification.box {
            childConstraints = TO THE RIGHTBOTTOM;

            NEW headerCol1 {
                childConstraints = TO THE BOTTOM;
                ADD p.documentHeaderGroup {
                    childConstraints = TO THE RIGHTBOTTOM;
                    ADD PROPERTY(objectClassName);
                    ADD PROPERTY(nameStockUserRevaluation);
                    ADD PROPERTY(nameNumeratorObject);
                    ADD PROPERTY(numberObject);
                    ADD PROPERTY(seriesObject);
                    ADD PROPERTY(dateUserRevaluation);
                    ADD PROPERTY(timeUserRevaluation);
                    ADD PROPERTY(beforeDateUserRevaluation);
                }
                ADD p.documentPrmGroup {
                    childConstraints = TO THE RIGHTBOTTOM;
                }
            }

            ADD p.documentSumGroup {
                childConstraints = TO THE BOTTOM;
            }
        }
        PROPERTY(formOk) {
            caption = 'Провести';
        }
    }
}

//-- SKU
@defineDocumentSkuSystemLedgerPriceListType(userRevaluation, accountPriceListType, stock);
@extendFormDocumentSku(userRevaluation, userRevaluation, p);
@extendFormDocumentSkuAll(userRevaluation, userRevaluation, p);
//-- Batch
@defineDocumentBatchSystemLedgerPriceListType(userRevaluation, accountPriceListType, stock);
@extendFormDocumentBatch(userRevaluation, userRevaluation, p);
@extendFormDocumentBatchAll(userRevaluation, userRevaluation, p);

EXTEND FORM userRevaluation

    FILTERGROUP filter
        FILTER 'С остатком ' 'F10' currentBalanceSkuUserRevaluation(ks, p) DEFAULT
        FILTER 'В документе ' 'F9' quantityUserRevaluationDetailSkuUserRevaluation(ks, p)
;

EXTEND FORM userRevaluation

    FILTERGROUP filter1
        FILTER 'С остатком ' 'F10' prevCurrentBalanceBatchUserRevaluation(b, p) DEFAULT
        FILTER 'В документе ' 'F9' quantityUserRevaluationDetailBatchUserRevaluation(b, p)
;

addUserRevaluation 'Добавить' = ACTION ADDFORM UserRevaluation;
editUserRevaluation 'Редактировать' (userRevaluation) = ACTION EDITFORM UserRevaluation;

FORM revaluations 'Переоценки' TITLE 'Переоценки'
    OBJECTS p = Revaluation
    PROPERTIES (p) READONLY isPostedRevaluation FORCE GRID, numberRevaluation, seriesRevaluation, dateRevaluation, timeRevaluation, beforeDateRevaluation,
               nameStockRevaluation, countRevaluationDetailRevaluation, diffSumRevaluationDetailRevaluation,
               numberDisposalRevaluation, skipChangeLedgerRevaluation, noteRevaluation, objectClassName

    PROPERTIES (p) READONLY FORCE PANEL nameUserCreatedHistorizable, timeCreatedHistorizable, hostnameComputerCreatedHistorizable, nameUserClosed, timeClosed, hostnameComputerClosed

    PROPERTIES ()  addUserRevaluation TODRAW p
    PROPERTIES (p) editUserRevaluation
    PROPERTIES (p) delete FORCE PANEL TOOLBAR SHOWIF isUserRevaluation(p)
    PROPERTIES (p) printRevaluation FORCE PANEL


    OBJECTS d = RevaluationDetail
    PROPERTIES (d) READONLY indexRevaluationDetail, idBarcodeSkuRevaluationDetail, nameSkuRevaluationDetail, shortNameUOMSkuRevaluationDetail, nameBatchRevaluationDetail,
                   quantityRevaluationDetail, curPriceRevaluationDetail, curSumRevaluationDetail, priceRevaluationDetail, sumRevaluationDetail

    FILTERS revaluationRevaluationDetail(d) == p

    DIALOG Revaluation OBJECT p
;
@extendFormFilterAccess(Revaluation, p, revaluations, stock);

DESIGN revaluations FROM DEFAULT {
    PROPERTY (delete(p)) {
        askConfirm = TRUE;
    }

    NEW documentContainer BEFORE functions.box {
        type = SPLITV;
        childConstraints = TO THE BOTTOM;

        ADD p.box { fillVertical = 2.0; }

        NEW documentDetail {
            type = TABBED;

            ADD d.box {
                title = 'Спецификация';
            }
            NEW documentHistory {
                title = 'История';

                ADD p.historyGroup;
                ADD p.postedGroup;
            }
            NEW printTab {
                title = 'Печатные формы';
                NEW printContainer {
                    title = 'Печать';
                    childConstraints = TO THE BOTTOM;
                    ADD p.printGroup;
                }
            }
            NEW actionContainer {
                title = 'Действия';
                childConstraints = TO THE RIGHT;
                NEW createdContainer {
                    title = 'Создание на основе';
                    childConstraints = TO THE BOTTOM;
                }
                NEW machineryContainer {
                    title = 'Загрузка';
                    childConstraints = TO THE BOTTOM;
                }
            }
        }
    }
}

NAVIGATOR {
    stockNavigator {
        NEW revaluationNavigator 'Переоценка' BEFORE balanceSku {
            ADD revaluations;
            ADD revaluationCommitteeDialog;
        }
    }
}

// ---------------------------- Создание PriceList ----------------------------------- //

EXTEND CLASS RevaluationDetail : PriceListLedger;

fromDateTimePriceListLedger (ledger) += dateTimeRevaluationDetail(ledger);

isPostedPriceListLedger(ledger) += isPostedRevaluationDetail(ledger);
skipPriceListLedger(ledger) += skipChangeLedgerRevaluationDetail(ledger);

skuPriceListLedger (ledger) += skuRevaluationDetail(ledger);

descriptionPriceListLedger (ledger) += descriptionRevaluationDetail(ledger);

pricePriceListLedgerSystemLedgerPriceListType (ledger, type) += priceRevaluationDetail(ledger) WHEN CLASS(priceRevaluationDetail(ledger)) AND type == SystemLedgerPriceListType.accountPriceListType;

inPriceListLedgerStock (ledger, stock) += stockRevaluationDetail(ledger) == stock;

