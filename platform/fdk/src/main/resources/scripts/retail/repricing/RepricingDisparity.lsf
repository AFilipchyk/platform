MODULE RepricingDisparity;

REQUIRE Disparity,
        Repricing,
        DisparityOperation;

@defineDocumentHeaderCreate(disparity, createRepricing, 'Создать акт переоценки');
@defineDocumentDetailCreateCustom(disparity, disparityDetail, createRepricing, 'Создать акт переоценки');

//------------------------------ Создание аггрегированных объектов через операции -----------------------------//

createRepricingDisparity (disparity) <- createRepricingOperation(operationDisparity(disparity))
    WHEN CHANGED(operationDisparity(disparity));

// До
@defineDocumentTimeBeforePrefix (disparity, , ' до');

@defineDocumentDetailPricePrefix(disparity, curInput, ' поставщика до');
@defineDocumentDetailDataSumCustomPrefix (disparityDetail, curInput, ' поставщика до');
@deriveDocumentDetailSumPrefix(disparity, curInput, currency, inputQuantity);

@defineDocumentDetailPricePrefix(disparity, curInputRetail, ' розничная до');
@defineDocumentDetailDataSumCustomPrefix (disparityDetail, curInputRetail, ' розничная до');
@deriveDocumentDetailSumPrefix(disparity, curInputRetail, currency, inputQuantity);

@defineDocumentDetailVAT(disparity, countryStock, curInput, ' до');
@deriveDocumentDetailValueVAT(disparity, curInput);

@defineDocumentDetailMarkupPrefix (disparity, curInput, ' до');
curInputMarkupDisparityDetail(disparityDetail)  <- [round2((((X - X*Y/(100+Y))/Z)-1)*100)](
    0.0 IF disparityDetail IS disparityDetail OR curInputRetailPriceDisparityDetail(disparityDetail),
    0.0 IF disparityDetail IS disparityDetail OR valueCurInputVATDisparityDetail(disparityDetail),
    curInputPriceDisparityDetail(disparityDetail))
    WHEN CHANGED(curInputRetailPriceDisparityDetail(disparityDetail)) OR CHANGED (valueCurInputVATDisparityDetail(disparityDetail)) OR CHANGED(curInputPriceDisparityDetail(disparityDetail));

@defineDocumentDetailVATDataSumCustomPrefix (disparityDetail, curInput, ' до');
@deriveDocumentDetailReverseVATSumPrefix(disparity, curInput, curInputRetail);
@defineDocumentDetailMarkupSumCustomPrefix (disparityDetail, curInput, ' до');
@deriveDocumentDetailMarkupSumPrefix(disparity, curInput, curInputRetail, curInput);

@deriveDocumentDetailPriceSystemLedgerPriceListType(disparity, supplierPricingPriceListType, curInput, sku, stock);
@deriveDocumentDetailVAT (disparity, curInput, dateBefore, sku, stock);
@deriveDocumentDetailPriceSystemLedgerPriceListType(disparity, retailPricingPriceListType, curInputRetail, sku, stock);

@changeDocumentDetailMarkupCustomPrefix(disparityDetail, curInputRetail, curInput, curInput, curInput);
roundConditionDisparityDetail(disparityDetail) = roundConditionDepartmentStore(stockDisparityDetail(disparityDetail));
@changeDocumentDetailPriceCustomPrefix(disparityDetail, curInputRetail, curInput, curInput, curInput, currency);

// После
@defineDocumentDetailPricePrefix (disparity, afterInput, ' поставщика после');
@defineDocumentDetailDataSumCustomPrefix (disparityDetail, afterInput, ' поставщика после');
@deriveDocumentDetailSumPrefix(disparity, afterInput, currency, inputQuantity);

@defineDocumentDetailPricePrefix(disparity, afterInputRetail, ' розничная после');
@defineDocumentDetailDataSumCustomPrefix (disparityDetail, afterInputRetail, ' розничная после');
@deriveDocumentDetailSumPrefix(disparity, afterInputRetail, currency, inputQuantity);

@defineDocumentDetailVAT(disparity, countryStock, afterInput, ' после');
@deriveDocumentDetailValueVAT(disparity, afterInput);

@defineDocumentDetailVATDataSumCustomPrefix (disparityDetail, afterInput, ' после');
@deriveDocumentDetailReverseVATSumPrefix(disparity, afterInput, afterInputRetail);
@defineDocumentDetailMarkupPrefix (disparity, afterInput, ' после');
afterInputMarkupDisparityDetail(disparityDetail)  <- [round2((((X - X*Y/(100+Y))/Z)-1)*100)](
    0.0 IF disparityDetail IS disparityDetail OR afterInputRetailPriceDisparityDetail(disparityDetail),
    0.0 IF disparityDetail IS disparityDetail OR valueAfterInputVATDisparityDetail(disparityDetail),
    afterInputPriceDisparityDetail(disparityDetail))
    WHEN CHANGED(afterInputPriceDisparityDetail(disparityDetail)) OR CHANGED (valueAfterInputVATDisparityDetail(disparityDetail)) OR CHANGED(afterInputRetailPriceDisparityDetail(disparityDetail));

@defineDocumentDetailMarkupSumCustomPrefix (disparityDetail, afterInput, ' после');
@deriveDocumentDetailMarkupSumPrefix(disparity, afterInput, afterInputRetail, afterInput);

afterInputPriceDisparityDetail(detail) <- curInputPriceDisparityDetail(detail) WHEN CHANGED (curInputPriceDisparityDetail(detail));
afterInputVATDisparityDetail(detail) <- curInputVATDisparityDetail(detail) WHEN CHANGED (curInputPriceDisparityDetail(detail));
afterInputRetailPriceDisparityDetail(detail) <- curInputRetailPriceDisparityDetail(detail) WHEN CHANGED (curInputPriceDisparityDetail(detail));

@changeDocumentDetailMarkupCustomPrefix(disparityDetail, afterInputRetail, afterInput, afterInput, afterInput);
@changeDocumentDetailPriceCustomPrefix(disparityDetail, afterInputRetail, afterInput, afterInput, afterInput, currency);

@defineDocumentDetailDiffSumCustomPrefix (disparityDetail, retailSum, afterInput, curInput, ' переоценки');
@defineDocumentHeaderSumPrefix(disparity, diffRetail, ' переоценки');

needToRepricingDisparityDetail (disparityDetail) = curInputRetailPriceDisparityDetail(disparityDetail) != afterInputRetailPriceDisparityDetail(disparityDetail)
                                               AND inputQuantityDisparityDetail(disparityDetail) != 0 AND stockDisparityDetail(disparityDetail) IS departmentStore
                                               AND NOT costLedgerDepartmentStore(stockDisparityDetail(disparityDetail))
                                               AND createRepricingDisparityDetail(disparityDetail) PERSISTENT;// AND isPostedDisparityDetail(disparityDetail) ;

needToRepricingDisparity (disparity)= GROUP SUM 1 IF needToRepricingDisparityDetail(disparityDetail)
    BY disparityDisparityDetail(disparityDetail) PERSISTENT;

@defineDocumentHeaderRepricingCommittee(disparity, stock);

CLASS disparityRepricing 'Акт переоценки (сортность)': repricing;
CLASS disparityRepricingPosted 'Проведенный акт дооценки на основе инвойса': disparityRepricing, postedObject;
CLASS disparityRepricingDetail 'Строка акта дооценки на основе инвойса': repricingDetail;

@defineDocumentTables(disparityRepricing);

@defineDocumentAggregation(disparity, disparityRepricing, needToRepricingDisparity);
@defineDocumentAggregationTimeBefore(disparity, disparityRepricing);

repricingRepricingDetail(detail) += disparityRepricingDisparityRepricingDetail(detail);

printRepricingDisparity 'Акт переоценки' (disparity) = printRepricing(disparityRepricingDisparity(disparity)) IMAGE 'print.png' IN printGroup;
@defineDocumentDetailIndex(disparityRepricing);

dateRepricing(repricing) += dateDisparityRepricing(repricing);
timeRepricing(repricing) += timeDisparityRepricing(repricing);

dateBeforeRepricing(repricing) += dateBeforeDisparityRepricing(repricing);
timeBeforeRepricing(repricing) += timeBeforeDisparityRepricing(repricing);

@defineDocumentAggregationStockPrefix(disparity, disparityRepricing, stock, 'Склад', , );
departmentStoreRepricing(repricing) += stockDisparityRepricing(repricing) IF stockDisparityRepricing(repricing) IS departmentStore;

@defineDocumentAggregationPosted(disparity, disparityRepricing);
isPostedRepricing(repricing) += isPostedDisparityRepricing(repricing);

numberDisparityRepricing 'Номер документа' (disparityRepricing) = numberObject(disparityDisparityRepricing(disparityRepricing));
numberRepricing(repricing) += numberDisparityRepricing(repricing);

seriesDisparityRepricing 'Серия документа' (disparityRepricing) = seriesObject(disparityDisparityRepricing(disparityRepricing));
seriesRepricing(repricing) += seriesDisparityRepricing(repricing);

seriesNumberDisparityRepricing 'Серия/номер документа' (disparityRepricing) = seriesNumberObject(disparityDisparityRepricing(disparityRepricing));

noteDisparityDisparityRepricing 'Примечание' (disparityRepricing) = noteDisparity(disparityDisparityRepricing(disparityRepricing));
noteRepricing(repricing) += noteDisparityDisparityRepricing(repricing);

currencyDisparityRepricing  (disparityRepricing) = currencyDisparity(disparityDisparityRepricing(disparityRepricing));
currencyRepricing (repricing) += currencyDisparityRepricing(repricing);
repricingCommitteeRepricing(repricing) += repricingCommitteeDisparity(disparityDisparityRepricing(repricing));
numberDisposalRepricing(repricing) += numberDisposalDisparity(disparityDisparityRepricing(repricing));

@defineDocumentDescription(disparityRepricing, disparityRepricingDetail, seriesNumberDisparityRepricing, 'Акт переоценки (сортность)');
descriptionRepricing (repricing) += descriptionDisparityRepricing(repricing);

//skipChangeLedgerRepricing(repricing) += repricing IS disparityRepricing;
skuDisparityRepricingDetail (repricingDetail) = inputSkuDisparityDetail(disparityDetailDisparityRepricingDetail(repricingDetail));

skuRepricingDetail(repricingDetail) +=  skuDisparityRepricingDetail(repricingDetail);

@implementSkuLedger(disparityRepricingDetail, sku, stock);
//sumInSkuLedger (ledger) += diffRetailSumRepricingDetail(ledger);

backgroundCurDisparity 'Цвет' (disparity) = RGB(255, 255, 224) IF disparity IS disparity;
backgroundAfterDisparity 'Цвет' (disparity) = RGB(255, 255, 200) IF disparity IS disparity;

showCreateRepricingDisparity (disparity) = stockDisparity(disparity) IS departmentStore AND NOT costLedgerDepartmentStore(stockDisparity(disparity));

EXTEND FORM disparity
    PROPERTIES(dis)   SHOWIF showCreateRepricingDisparity(dis) BACKGROUND backgroundCurDisparity(dis) createRepricingDisparity
    PROPERTIES(dis)   BACKGROUND backgroundCurDisparity(dis) SHOWIF createRepricingDisparity(dis) nameRepricingCommitteeDisparity, numberDisposalDisparity, dateBeforeDisparity
    PROPERTIES(dis)   BACKGROUND backgroundAfterDisparity(dis) SHOWIF createRepricingDisparity(dis) diffRetailSumDisparityDetailDisparity

    PROPERTIES(d)   BACKGROUND backgroundCurDisparity(dis) SHOWIF createRepricingDisparity(dis) BEFORE delete(d)
                    curInputPriceDisparityDetail, curInputSumDisparityDetail,
                    curInputMarkupDisparityDetail ON CHANGE EXEC changeCurInputMarkupDisparityDetail(d), curInputMarkupSumDisparityDetail,
                    numberCurInputVATDisparityDetail, valueCurInputVATDisparityDetail, curInputVATSumDisparityDetail,
                    curInputRetailPriceDisparityDetail ON CHANGE EXEC changeCurInputRetailPriceDisparityDetail(d), curInputRetailSumDisparityDetail
    PROPERTIES(d)   BACKGROUND backgroundAfterDisparity(dis) SHOWIF createRepricingDisparity(dis) BEFORE delete(d)
                    afterInputPriceDisparityDetail, afterInputSumDisparityDetail,
                    afterInputMarkupDisparityDetail ON CHANGE EXEC changeAfterInputMarkupDisparityDetail(d), afterInputMarkupSumDisparityDetail,
                    numberAfterInputVATDisparityDetail, valueAfterInputVATDisparityDetail, afterInputVATSumDisparityDetail,
                    afterInputRetailPriceDisparityDetail ON CHANGE EXEC changeAfterInputRetailPriceDisparityDetail(d), afterInputRetailSumDisparityDetail
;
EXTEND DESIGN disparity {
    headerRow1 {
        NEW headerRow11 BEFORE dis.documentPrmGroup {
            title = 'Переоценка';
            childConstraints = TO THE RIGHTBOTTOM;
            ADD PROPERTY(createRepricingDisparity);
            ADD PROPERTY(nameRepricingCommitteeDisparity);
            ADD PROPERTY(numberDisposalDisparity);
            ADD PROPERTY(dateBeforeDisparity);
        }
    }
}

EXTEND FORM disparities
    PROPERTIES(dis) READONLY BACKGROUND backgroundCurDisparity(dis) createRepricingDisparity, diffRetailSumDisparityDetailDisparity AFTER inputSumDisparityDetailDisparity
    PROPERTIES(dis) FORCE PANEL  printRepricingDisparity SHOWIF createRepricingDisparity(dis)

    PROPERTIES(d)   READONLY BACKGROUND backgroundCurDisparity(dis) SHOWIF createRepricingDisparity(dis)
                    curInputPriceDisparityDetail, curInputSumDisparityDetail,
                    curInputMarkupDisparityDetail, curInputMarkupSumDisparityDetail,
                    numberCurInputVATDisparityDetail, valueCurInputVATDisparityDetail, curInputVATSumDisparityDetail,
                    curInputRetailPriceDisparityDetail, curInputRetailSumDisparityDetail
    PROPERTIES(d)   READONLY BACKGROUND backgroundAfterDisparity(dis) SHOWIF createRepricingDisparity(dis)
                    afterInputPriceDisparityDetail, afterInputSumDisparityDetail,
                    afterInputMarkupDisparityDetail, afterInputMarkupSumDisparityDetail,
                    numberAfterInputVATDisparityDetail, valueAfterInputVATDisparityDetail, afterInputVATSumDisparityDetail,
                    afterInputRetailPriceDisparityDetail, afterInputRetailSumDisparityDetail

;
EXTEND DESIGN disparities {
    printContainer {
        ADD dis.printGroup;
    }
}

//----------------------------------------------------------------------------------------------------------
quantityRepricingDetail(repricingDetail) += inputQuantityDisparityDetail(disparityDetailDisparityRepricingDetail(repricingDetail));

priceRepricingDetail(repricingDetail) += afterInputPriceDisparityDetail(disparityDetailDisparityRepricingDetail(repricingDetail));
curPriceRepricingDetail(repricingDetail) += curInputPriceDisparityDetail(disparityDetailDisparityRepricingDetail(repricingDetail));

retailPriceRepricingDetail(repricingDetail) += afterInputRetailPriceDisparityDetail(disparityDetailDisparityRepricingDetail(repricingDetail));
curRetailPriceRepricingDetail(repricingDetail) += curInputRetailPriceDisparityDetail(disparityDetailDisparityRepricingDetail(repricingDetail));

retailSumRepricingDetail(repricingDetail) += afterInputRetailSumDisparityDetail(disparityDetailDisparityRepricingDetail(repricingDetail));
curRetailSumRepricingDetail(repricingDetail) += curInputRetailSumDisparityDetail(disparityDetailDisparityRepricingDetail(repricingDetail));

markupRepricingDetail(repricingDetail) += afterInputMarkupDisparityDetail(disparityDetailDisparityRepricingDetail(repricingDetail));
curMarkupRepricingDetail(repricingDetail) += curInputMarkupDisparityDetail(disparityDetailDisparityRepricingDetail(repricingDetail));

VATRepricingDetail(repricingDetail) += afterInputVATDisparityDetail(disparityDetailDisparityRepricingDetail(repricingDetail));
curVATRepricingDetail(repricingDetail) += curInputVATDisparityDetail(disparityDetailDisparityRepricingDetail(repricingDetail));

valueVATRepricingDetail(repricingDetail) += valueAfterInputVATDisparityDetail(disparityDetailDisparityRepricingDetail(repricingDetail));
valueCurVATRepricingDetail(repricingDetail) += valueCurInputVATDisparityDetail(disparityDetailDisparityRepricingDetail(repricingDetail));

sumRepricingDetail(repricingDetail) += afterInputSumDisparityDetail(disparityDetailDisparityRepricingDetail(repricingDetail));
curSumRepricingDetail(repricingDetail) += curInputSumDisparityDetail(disparityDetailDisparityRepricingDetail(repricingDetail));

VATSumRepricingDetail(repricingDetail) += afterInputVATSumDisparityDetail(disparityDetailDisparityRepricingDetail(repricingDetail));
curVATSumRepricingDetail(repricingDetail) += curInputVATSumDisparityDetail(disparityDetailDisparityRepricingDetail(repricingDetail));

markupSumRepricingDetail(repricingDetail) += afterInputMarkupSumDisparityDetail(disparityDetailDisparityRepricingDetail(repricingDetail));
curMarkupSumRepricingDetail(repricingDetail) += curInputMarkupSumDisparityDetail(disparityDetailDisparityRepricingDetail(repricingDetail));

