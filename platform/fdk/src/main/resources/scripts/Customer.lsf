MODULE Customer;

REQUIRE System,
        Historizable,
        Utils,
        LegalEntity,
        Stock,
        Contract;


// ---------------------------------------- Договоры ------------------------------------ //

CLASS customer 'Оптовый покупатель' : legalEntity;
TABLE customer (customer);

CLASS contractSkuCustomer 'Договор с опт. покупателем' : contractSku;

companyContractSkuCustomer = DATA company (contractSkuCustomer) AUTOSET;
nameCompanyContractSkuCustomer 'Продавец' (contractSkuCustomer) = name(companyContractSkuCustomer(contractSkuCustomer)) IN recognizeGroup MAXCHARWIDTH 30 PREFCHARWIDTH 30;
partyAContract (contract) += companyContractSkuCustomer(contract);

customerContractSkuCustomer = DATA customer (contractSkuCustomer) AUTOSET;
nameCustomerContractSkuCustomer 'Покупатель' (contractSkuCustomer) = name(customerContractSkuCustomer(contractSkuCustomer)) IN recognizeGroup MAXCHARWIDTH 30 PREFCHARWIDTH 30;
partyBContract (contract) += customerContractSkuCustomer(contract);

TABLE companyCustomer(company, customer);
@defineContractDefault(contractSkuCustomer, company, customer);

// Формы
FORM contractSkuCustomer 'Договор с опт. покупателем'
    OBJECTS c=contractSkuCustomer FIXED PANEL
    PROPERTIES(c) nameCompanyContractSkuCustomer, nameCustomerContractSkuCustomer,
                  numberContract, dateFromContract, dateToContract,
                  nameCurrencyContract, noteContract

    OBJECTS pc = paymentCondition
    PROPERTIES(pc) READONLY datePaymentCondition, numberContractPaymentCondition, nameTypePaymentCondition,
                            nameFormPaymentCondition
    PROPERTIES(pc) ADDSESSIONFORM, EDITSESSIONFORM, delete
    ORDER BY datePaymentCondition

    FILTERS contractPaymentCondition(pc) == c

    EDIT contractSkuCustomer OBJECT c
;

FORM contractsSkuCustomer 'Договора'
    OBJECTS c=contractSkuCustomer
    PROPERTIES(c) READONLY numberContract, dateFromContract, dateToContract,
                           nameCompanyContractSkuCustomer, nameCustomerContractSkuCustomer

    PROPERTIES(c) ADDFORM, EDITFORM, delete
    ORDER BY dateFromContract

    DIALOG contractSkuCustomer OBJECT c
;

FORM customer 'Оптовый покупатель'
    OBJECTS cu=customer FIXED PANEL
    PROPERTIES(cu) name, nameOwnershipLegalEntity, shortNameOwnershipLegalEntity, fullNameLegalEntity,
                   addressLegalEntity ON CHANGE EXEC dialogAddressLegalEntity(cu),
                   postAddressLegalEntity ON CHANGE EXEC dialogPostAddressLegalEntity(cu),
                   managerLegalEntity ON CHANGE EXEC dialogManagerLegalEntity(cu),
                   accountantLegalEntity ON CHANGE EXEC dialogAccountantLegalEntity(cu),
                   phoneLegalEntity ON CHANGE EXEC dialogPhoneLegalEntity(cu),
                   UNPLegalEntity, OKPOLegalEntity, OKYLPLegalEntity, emailLegalEntity, siteLegalEntity

    OBJECTS a=account
    PROPERTIES(a)  numberAccount, nameBankAccount, addressBankAccount, departmentBankAccount, CBUBankAccount, MFOBankAccount, noteAccount, ADDOBJ, delete
    FILTERS legalEntityAccount(a) == cu

    OBJECTS co=company
    PROPERTIES(co)      name
    PROPERTIES(co, cu)   numberContractSkuCustomerCompanyCustomer

    OBJECTS c=contractSkuCustomer
    PROPERTIES(c)  READONLY numberContract, nameCompanyContractSkuCustomer, nameTypeContractSku, nameFormContractSku, dateFromContract,
                   dateToContract, nameCurrencyContract, noteContract
    PROPERTIES(c)  ADDFORM, EDITFORM, delete
    FILTERS companyContractSkuCustomer(c) == co,
            customerContractSkuCustomer(c) == cu

    FILTERGROUP filters
        FILTER 'Есть договор' 'F10' countContractPartyAPartyB(co, cu) DEFAULT

    EDIT customer OBJECT cu
;

DESIGN customer FROM DEFAULT {
    main{
       preferredSize = (1024, 768);
       cu.box {
            childConstraints = TO THE RIGHT;

            NEW column1 {
                childConstraints = TO THE BOTTOM;

                ADD PROPERTY(name(cu));
                ADD cu.lawGroup;
            }

            NEW column2 {
                childConstraints = TO THE BOTTOM;

                ADD cu.contactGroup;
                ADD cu.managementGroup;
                ADD cu.docGroup;
            }
       }

       NEW extendContainer BEFORE functions.box {
            type = TABBED;
            ADD a.box;
            NEW supplierContainer {
                title = 'Договоры с поставщиками';
                type = SPLITH;
                childConstraints = TO THE RIGHT;

                ADD co.box;
                ADD c.box {
                    fillHorizontal = 2;
                }
            }
       }
   }
}

FORM customers 'Оптовые покупатели'
    OBJECTS cu=customer
    PROPERTIES(cu) READONLY name, fullNameLegalEntity, shortNameOwnershipLegalEntity, UNPLegalEntity, numberAccountLegalEntity, addressLegalEntity, phoneLegalEntity
    PROPERTIES(cu) ADDFORM, EDITFORM, delete
;

// --------------------------------------------------- Макросы по добавлению покупателя в документы ------------------------------------ //
META defineDocumentHeaderCustomer (object)
    customer###object (object) = DATA customer (object);
    nameCustomer###object 'Покупатель' (object)= name(customer###object(object)) IN documentPrmGroup MINCHARWIDTH 10 PREFCHARWIDTH 20;
END
META defineDocumentAbstractHeaderCustomer (object)
    customer###object (object) = ABSTRACT customer (object);
    nameCustomer###object 'Покупатель' (object)= name(customer###object(object)) IN documentPrmGroup MINCHARWIDTH 10 PREFCHARWIDTH 20;
END
META defineDocumentInterfaceHeaderCustomer (object)
    @defineDocumentAbstractHeaderCustomer(object);
    @defineDocumentHeaderCustomer(user###object);
    customer###object (object) += customer###user###object(object);
END

META defineDocumentDetailCustomer (object, detail)
    customer###detail (idetail) = customer###object(object###detail(idetail));
    nameCustomer###detail 'Покупатель' (idetail) = nameCustomer###object(object###detail(idetail));
END

META defineDocumentCustomer (object, detail)
    @defineDocumentHeaderCustomer(object);
    @defineDocumentDetailCustomer(object, detail);
END
META defineDocumentAbstractCustomer (object, detail)
    @defineDocumentAbstractHeaderCustomer(object);
    @defineDocumentDetailCustomer(object, detail);
END
META defineDocumentInterfaceCustomer (object, detail)
    @defineDocumentInterfaceHeaderCustomer(object);
    @defineDocumentDetailCustomer(object, detail);
END

META defineDocumentCustomer (object)
    @defineDocumentCustomer(object, object##Detail);
END
META defineDocumentAbstractCustomer (object)
    @defineDocumentAbstractCustomer(object, object##Detail);
END
META defineDocumentInterfaceCustomer (object)
    @defineDocumentInterfaceCustomer(object, object##Detail);
END
