MODULE PriceChecker;

REQUIRE System, Machinery;

// Группы
CLASS groupPriceChecker 'Группы прайс чекеров' : groupMachinery;

stockGroupPriceChecker = DATA stock (groupPriceChecker);
stockGroupMachinery (groupMachinery) += stockGroupPriceChecker(groupMachinery);

// Модели
CLASS priceCheckerModel 'Модель прайс чекеров' : model;

FORM priceCheckerModel 'Модель прайс чекера'
    OBJECTS ch=priceCheckerModel FIXED PANEL
    PROPERTIES(ch) name, noteModel, handlerModel, maxProductModel
    EDIT priceCheckerModel OBJECT ch
;

FORM priceCheckerModels 'Модели прайс чекеров'
    OBJECTS m=priceCheckerModel
    PROPERTIES(m) READONLY objectClassName, name, maxProductModel, noteModel, handlerModel
    PROPERTIES(m) ADDFORM, EDITFORM, delete
;

// Прайс-чекеры
CLASS priceChecker 'Прайс чекер' : machinery;
isGroupPriceChecker (machinery) = machinery IS groupPriceChecker;

groupPriceCheckerPriceChecker = DATA groupPriceChecker (priceChecker);
groupMachineryMachinery(machinery) += groupPriceCheckerPriceChecker(machinery);

FORM priceChecker 'Прайс чекер'
    OBJECTS ch=priceChecker FIXED PANEL
    PROPERTIES(ch) nameGroupMachineryMachinery, nppMachinery, descriptionMachinery, portMachinery
    EDIT priceChecker OBJECT ch
;

FORM groupPriceChecker 'Группа прайс чекеров'
    OBJECTS grch=groupPriceChecker FIXED PANEL
    PROPERTIES(grch) nameStockGroupMachinery, nameEquipmentServerGroupMachinery, nameGroupMachinery,
                     filterSkuGroupMachinery, showFilterSkuGroupMachinery SHOWIF filterSkuGroupMachinery(grch)

    OBJECTS ch=priceChecker
    PROPERTIES(ch)  nameGroupMachineryMachinery, nppMachinery, descriptionMachinery, portMachinery, ADDOBJ, delete
    FILTERGROUP filters3
        FILTER 'Показывать только для данной группы' 'F10' groupPriceCheckerPriceChecker(ch) == grch DEFAULT
    EDIT groupPriceChecker OBJECT grch
;

FORM groupsPriceChecker 'Группы прайс чекеров'
    OBJECTS grch=groupPriceChecker
    PROPERTIES(grch) READONLY nameStockGroupMachinery, nameEquipmentServerGroupMachinery, nameGroupMachinery,
                              filterSkuGroupMachinery, showFilterSkuGroupMachinery SHOWIF filterSkuGroupMachinery(grch)
    PROPERTIES(grch)          ADDFORM, EDITFORM, delete

    OBJECTS ch=priceChecker
    PROPERTIES(ch)   READONLY nppMachinery, descriptionMachinery, portMachinery
    FILTERS groupPriceCheckerPriceChecker(ch) == grch
;

DESIGN groupsPriceChecker FROM DEFAULT {
    NEW topContainer{
        type = SPLITV;
        childConstraints = TO THE BOTTOM;

        ADD grch.box;
        ADD ch.box;
    }
    ADD functions.box;
}

// ----------------------------------------- Загрузка в ВУ -------------------------------------- //

CLASS priceCheckerPriceTransaction 'Загрузка прайса в прайс чекеры' : machineryPriceTransaction;
groupPriceCheckerPriceCheckerPriceTransaction 'Группа прайс чекеров' = DATA groupPriceChecker (priceCheckerPriceTransaction);
groupMachineryMachineryPriceTransaction (transaction) += groupPriceCheckerPriceCheckerPriceTransaction(transaction);

addPriceCheckerModel 'Добавить модель прайс-чекера' = ACTION (stringOne, stringTwo)  {
    ADDOBJ priceCheckerModel;
    FOR pcm == addedObject() DO {
         SET name(pcm) <- stringOne AS STRING[110];
         SET handlerModel(pcm) <- stringTwo AS STRING[200];
    }
}

fillPriceCheckerModelDefaultValues 'Заполнить значения моделей прайс-чекеров по умолчанию' = ACTION () {
    EXEC addPriceCheckerModel('Прайс-чекеры EasyCSV', 'equ.clt.handler.easy.EasyCSVHandler');
}

fillPriceCheckerDefaultValues 'Заполнить значения прайс-чекеров по умолчанию' = ACTION(equipmentServer, stock, num) {

    ADDOBJ groupPriceChecker;
    FOR g == addedObject() DO {
        SET stockGroupPriceChecker(g) <- stock AS stock;
        SET equipmentServerGroupMachinery(g) <- equipmentServer AS equipmentServer;
        SET nameGroupMachinery(g) <- 'Группа прайс-чекеров по умолчанию' AS STRING[110];

        LOCAL numPriceChecker = INTEGER();
        SET numPriceChecker() <- 0;
        WHILE numPriceChecker() < (num AS INTEGER) DO {
            ADDOBJ priceChecker;
            FOR pc == addedObject() DO {
                SET groupPriceCheckerPriceChecker(pc) <- g AS groupPriceChecker;
                SET numPriceChecker() <- numPriceChecker() + 1;
                SET nppMachinery(pc) <- numPriceChecker();
            }
        }
    }
}