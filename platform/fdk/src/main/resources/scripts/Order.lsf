MODULE Order;

REQUIRE System,
        Utils,
        Historizable,
        Stock,
        Numerator,
        Document,
        Currency,
        Barcode,
        PriceList,
        Agreement,
        Supply,
        StockTax;


PRIORITY Utils, Stock;

CLASS ABSTRACT order 'Заказ';
CLASS ABSTRACT orderDetail 'Строка заказа';

@defineDocumentAbstract(order);
@defineDocumentAbstractNumber(order);
//@defineDocumentDetailIndex(order);

@defineDocumentAbstractLegalEntity(order, supplier, 'Поставщик');
addressSupplierOrder 'Адрес поставщика' (order) = addressLegalEntity(supplierOrder(order));

@defineDocumentAbstractLegalEntity(order, customer, 'Покупатель');
addressCustomerOrder 'Адрес покупателя' (order) = addressLegalEntity(customerOrder(order));

toDateOrder 'Дата автоматического закрытия' = ABSTRACT DATE (order) IN documentPrmGroup PERSISTENT;

@defineDocumentAbstractDataStock(order, stock, 'Склад поставщика', supplier);
@defineDocumentAbstractDataStock(order, stock, 'Склад покупателя', customer);

@defineDocumentAbstractDataStock(order, stock, 'Склад (отправитель)', from);
@defineDocumentAbstractDataStock(order, stock, 'Склад (получатель)', to);

@defineDocumentAbstractPosted(order);

@defineDocumentAbstractDetailSku(order, sku);

@defineDocumentAbstractDetailPrice(order);
@defineDocumentAbstractDetailDataSumCustomPrefix (orderDetail, , );
@defineDocumentAbstractDetailVATPrefix(order, , );
@defineDocumentAbstractDetailVATDataSumCustom (orderDetail, invoice);

@defineDocumentAbstractDetailQuantity(order);
@defineDocumentDetailGrossWeight(order, sku);
@defineDocumentHeaderSkuQuantity(order, sku);

@defineDocumentHeaderQuantity(order);
@defineDocumentHeaderVATSumPrefix(order, orderDetail, invoice);
@defineDocumentHeaderSum (order);

@defineDocumentHeaderGrossWeight(order);
@defineDocumentAbstractHeaderCurrency (order);

quantityFromOrderStock 'Кол-во со склада' (order, stock) = GROUP SUM quantityOrderDetail(orderDetail) BY orderOrderDetail(orderDetail),
                                                                                                         fromStockOrderDetail(orderDetail);

quantityToOrderStock 'Кол-во на склад' (order, stock) = GROUP SUM quantityOrderDetail(orderDetail) BY orderOrderDetail(orderDetail),
                                                                                                      toStockOrderDetail(orderDetail);

editOrder 'Редактировать' = ABSTRACT ACTION (order) IMAGE 'edit.png' EDITKEY 'BACK_SPACE' HIDE TOOLBAR;

//----------------------------------------------- Заказ ---------------------------------------------------//

META defineOrder(sign, stockProp)

    CLASS ABSTRACT order 'Заказ'###sign : Order.order;
    CLASS ABSTRACT orderDetail 'Строка заказа'###sign : Order.orderDetail, named;

    CLASS userOrder 'Заказ (польз.)'###sign : order, historizable, numeratedObject;
    CLASS userOrderDetail 'Строка заказа (польз.)'###sign : orderDetail;
    CLASS userOrderPosted 'Проведенный заказ (польз.)'###sign : userOrder, postedObject;

    @defineDocumentInterface(order);
    Order.orderOrderDetail (detail) += orderOrderDetail(detail);
    Order.dateOrder (order) += dateOrder(order);
    Order.timeOrder (order) += timeOrder(order);

    @defineDocumentInterfaceNumber(order);
    Order.numberOrder (order) += numberOrder(order);
    Order.seriesOrder (order) += seriesOrder(order);

    @defineDocumentInterfaceLegalEntity (order, supplier, 'Поставщик');
    @defineDocumentInterfaceLegalEntity (order, customer, 'Покупатель');
    Order.supplierOrder(order) += supplierOrder(order);
    Order.customerOrder(order) += customerOrder(order);

    @defineDocumentInterfaceDataStock(order, stock, 'Склад поставщика', supplier);
    @defineDocumentInterfaceDataStock(order, stock, 'Склад покупателя', customer);
    Order.supplierStockOrder(order) += supplierStockOrder(order);
    Order.customerStockOrder(order) += customerStockOrder(order);
    Order.dataSupplierStockOrderDetail(detail) += dataSupplierStockOrderDetail(detail);
    Order.dataCustomerStockOrderDetail(detail) += dataCustomerStockOrderDetail(detail);

    CONSTRAINT supplierUserOrder(userOrder) AND supplierStockUserOrder(userOrder) AND NOT
    inLegalEntityStock(supplierUserOrder(userOrder), supplierStockUserOrder(userOrder))
        CHECKED BY supplierUserOrder, supplierStockUserOrder
            MESSAGE 'Поставщик и склад поставщика не имеют связи';
    CONSTRAINT customerUserOrder(userOrder) AND customerStockUserOrder(userOrder) AND NOT
    inLegalEntityStock(customerUserOrder(userOrder), customerStockUserOrder(userOrder))
        CHECKED BY customerUserOrder, customerStockUserOrder
            MESSAGE 'Покупатель и склад покупателя не имеют связи';

    @defineDocumentInterfacePosted(order);
    Order.isPostedOrder (order) += isPostedOrder(order);

    @defineDocumentInterfaceTimeShipment(order);
    toDateOrder 'Дата автоматического закрытия' = ABSTRACT DATE (order) IN documentPrmGroup PERSISTENT;
    toDateUserOrder 'Дата автоматического закрытия' = DATA DATE (userOrder) IN documentPrmGroup;
    toDateOrder(order) += toDateUserOrder(order);
    Order.toDateOrder (order) += toDateOrder(order);

    @defineDocumentClosed (order);

    @defineDocumentInterfaceDescription(order, 'Заказ'###sign);

    @defineDocumentInterfaceCurrency(order);
    @deriveDocumentCurrency(userOrder, stockProp);
    Order.currencyOrder(order) += currencyOrder(order);

    @defineDocumentInterfaceDataPriceListType(order);

    @defineDocumentInterfaceDetailSku(order, sku);
    Order.skuOrderDetail(detail) += skuOrderDetail(detail);

    @defineDocumentInterfaceDetailQuantity(order);
    Order.quantityOrderDetail(detail) += quantityOrderDetail(detail);

    @defineDocumentInterfaceDetailPrice(order);
    @deriveDocumentDetailPricePriceListType(userOrder, stockProp);
    Order.priceOrderDetail(detail) += priceOrderDetail(detail);

    @defineDocumentInterfaceDetailDataSum(order);
    @deriveDocumentDetailSum(userOrder, quantity);
    Order.sumOrderDetail(detail) += sumOrderDetail(detail);

    @defineDocumentInterfaceDetailVATPrefix(order, , country###stockProp, );
    @defineDocumentInterfaceDetailVATDataSumCustom (orderDetail, invoice);
    @deriveDocumentDetailPrefixSumCustom (userOrderDetail, invoice);
    @deriveDocumentDetailDirectVATSum(userOrder);
    Order.VATOrderDetail(detail) += VATOrderDetail(detail);
    Order.valueVATOrderDetail(detail) += valueVATOrderDetail(detail);
    Order.VATSumOrderDetail(detail) += VATSumOrderDetail(detail);

    @defineDocumentInterfaceDetailPricePrefix (order, invoice, ' с НДС');
    @deriveDocumentDetailVAT (userOrder, , date,  sku, stockProp);
    @deriveDocumentDetailValueVATPrefix(userOrder, );
    @deriveDocumentDetailPricePriceListTypeVAT (userOrder, stockProp);
    @deriveDocumentPriceDetailOnChangeInvoicePrice(userOrder);
    @deriveDocumentInvoicePriceDetailOnChangePrice(userOrder);
    @deriveDocumentInvoicePriceDetailOnChangeVAT(userOrder, stockProp);
    Order.invoiceSumOrderDetail(detail) += invoiceSumOrderDetail(detail);

    @defineDocumentInterfaceHeaderVATSumPrefix (order, orderDetail, invoice);

    @defineDocumentInterfaceHeaderQuantity(order);
    @defineDocumentHeaderSkuQuantity(order, sku);
    //Order.quantityOrderSku (order, sku) += quantityOrderDetailSkuOrder(sku, order);

    @defineDocumentHeaderSkuQuantity(userOrder, sku);
    @defineDocumentInterfaceHeaderSum(order);

    @defineAddDetailDialogSkuStock(userOrder, sku, stockProp, dialogSku);
    @defineAddDetailDialogBarcode(userOrder, sku);

    @defineDocumentInterfaceHeaderAgreement(order);
    @deriveDocumentHeaderAgreement (userOrder, supplierUserOrder, customerUserOrder);
    @deriveDocumentDetailPriceListTypeAgreement(order);

    noAgreementUserOrder (order) = order IS userOrder AND NOT agreementUserOrder(order);

    countOrderDetailStockOrder 'Кол-во строк по складу '(stock, order) = GROUP SUM 1 BY stockProp###orderDetail(orderDetail), orderOrderDetail(orderDetail);

// --------------------------- Формы Заказа ---------------------------------

    editOrder 'Редактировать' = ABSTRACT ACTION (order) IMAGE 'edit.png' EDITKEY 'BACK_SPACE' HIDE TOOLBAR;
    Order.editOrder (order) += editOrder(order);

    FORM userOrder 'Заказ'###sign
        OBJECTS o = userOrder FIXED PANEL
        PROPERTIES (o) objectClassName, nameSupplierUserOrder, nameCustomerUserOrder, nameSupplierStockUserOrder, nameCustomerStockUserOrder,
                       nameNumeratorObject, numberObject, seriesObject, dateUserOrder, timeUserOrder,
                       nameCurrencyUserOrder, nameAgreementUserOrder, namePriceListTypeUserOrder SHOWIF noAgreementUserOrder(o), noteUserOrder,
                       countUserOrderDetailUserOrder, quantityUserOrderDetailUserOrder, sumUserOrderDetailUserOrder,
                       VATSumUserOrderDetailUserOrder, invoiceSumUserOrderDetailUserOrder,
                       shipmentDateUserOrder, shipmentTimeUserOrder, toDateUserOrder

        OBJECTS d = userOrderDetail
        PROPERTIES (d) indexUserOrderDetail, idBarcodeSkuUserOrderDetail, nameSkuUserOrderDetail, shortNameUOMSkuUserOrderDetail,
                       quantityUserOrderDetail, namePriceListTypeUserOrderDetail, //priceUserOrderDetail, sumUserOrderDetail,
                       priceUserOrderDetail ON CHANGE EXEC changeInvoicePriceUserOrderDetail(d), sumUserOrderDetail,
                       numberVATUserOrderDetail ON CHANGE EXEC changeInvoicePriceVATUserOrderDetail(d),
                       valueVATUserOrderDetail, invoicePriceUserOrderDetail ON CHANGE EXEC changePriceUserOrderDetail(d),
                       VATSumUserOrderDetail, invoiceSumUserOrderDetail,
                       name###stockProp###userOrderDetail, shipmentDateUserOrderDetail,
                       shipmentTimeUserOrderDetail, ADDOBJ, delete

        PROPERTIES(o) TODRAW d addDetailDialogSkuStockUserOrderDetailUserOrder,
                               addDetailInputBarcodeUserOrderDetailUserOrder, deleteUserOrderDetailUserOrder
        FILTERS userOrderUserOrderDetail(d) == o

        EVENTS
            ON OK EXEC prePostUserOrder(o)

        EDIT userOrder OBJECT o
    ;

    DESIGN userOrder FROM DEFAULT{

        main {
            preferredSize = (1024, 768);
            NEW specification.box BEFORE functions.box{
                ADD d.box {
                    title = 'Спецификация';
                    d.panel {
                        childConstraints = TO THE BOTTOM;
                    }
                }
            }

            NEW header.box BEFORE specification.box {
                childConstraints = TO THE RIGHT;

                NEW headerRow1 {
                    childConstraints = TO THE BOTTOM;

                    ADD o.documentHeaderGroup {
                        childConstraints = TO THE RIGHTBOTTOM;
                        ADD PROPERTY(objectClassName) { preferredCharWidth = 10; }
                        ADD PROPERTY(nameNumeratorObject);
                        ADD PROPERTY(numberObject);
                        ADD PROPERTY(seriesObject);
                        ADD PROPERTY(dateUserOrder);
                        ADD PROPERTY(timeUserOrder);
                    }
                    NEW headerRow11 {

                        childConstraints = TO THE RIGHTBOTTOM;
                        NEW headerRow111 {
                            title = 'Поставщик';
                            childConstraints = TO THE RIGHTBOTTOM;
                            ADD PROPERTY(nameSupplierUserOrder);
                            ADD PROPERTY(nameSupplierStockUserOrder);

                        }
                        NEW headerRow112 {
                            title = 'Покупатель';
                            childConstraints = TO THE RIGHTBOTTOM;
                            ADD PROPERTY(nameCustomerUserOrder);
                            ADD PROPERTY(nameCustomerStockUserOrder);
                        }

                    }
                    NEW headerRow12 {
                        childConstraints = TO THE RIGHTBOTTOM;
                        ADD o.documentPrmGroup {
                            childConstraints = TO THE RIGHTBOTTOM;
                        }
                        ADD o.documentShipmentGroup {
                            childConstraints = TO THE RIGHTBOTTOM;
                        }
                    }
                }

                ADD o.documentSumGroup {
                    childConstraints = TO THE BOTTOM;
                }
            }

            PROPERTY(formOkAction) {
                caption = 'Провести';
            }
        }
    }

//-- SKU
    @defineDocumentSkuStock(userOrder, sku, stockProp);
    @extendFormDocumentSkuStockCustom(userOrder, userOrder, o, stockProp);
    @defineDocumentSupplierSkuStock (userOrder, userOrder, o, sts);

    addUserOrder 'Добавить' = ACTION ADDFORM userOrder;
    editUserOrder 'Редактировать' (userOrder) = ACTION EDITFORM userOrder;
    editOrder(order) += editUserOrder(order);

    FORM orders 'Заказы' TITLE 'Заказы'###sign
        OBJECTS o = order
        PROPERTIES (o) READONLY isPostedOrder FORCE GRID, isClosedOrder, objectClassName, numberOrder, seriesOrder, dateOrder, timeOrder,
                                nameSupplierOrder, nameSupplierStockOrder, nameCustomerOrder, nameCustomerStockOrder, nameCurrencyOrder,
                                nameAgreementOrder, namePriceListTypeOrder, noteOrder,
                                countOrderDetailOrder, quantityOrderDetailOrder, sumOrderDetailOrder,
                                VATSumOrderDetailOrder, invoiceSumOrderDetailOrder, shipmentDateOrder, shipmentTimeOrder, toDateOrder

        PROPERTIES (o) READONLY FORCE PANEL nameUserCreatedHistorizable, timeCreatedHistorizable, hostnameComputerCreatedHistorizable, nameUserClosed, timeClosed, hostnameComputerClosed

        PROPERTIES ()  addUserOrder TODRAW o
        PROPERTIES (o) editOrder
        PROPERTIES (o) closeOrder SHOWIF isOpendOrder(o), uncloseOrder SHOWIF isClosedOrder(o)
        PROPERTIES     delete(o) FORCE PANEL DRAWTOTOOLBAR  SHOWIF isUserOrder(o)

        OBJECTS d=orderDetail
        PROPERTIES (d) READONLY indexOrderDetail, idBarcodeSkuOrderDetail, nameSkuOrderDetail, shortNameUOMSkuOrderDetail,
                       quantityOrderDetail, namePriceListTypeOrderDetail, priceOrderDetail, sumOrderDetail,
                       numberVATOrderDetail, valueVATOrderDetail, VATSumOrderDetail, invoiceSumOrderDetail,
                       name###stockProp###orderDetail, shipmentDateOrderDetail, shipmentTimeOrderDetail


        FILTERS orderOrderDetail(d) == o
        DIALOG order OBJECT o
    ;

    DESIGN orders FROM DEFAULT {
        PROPERTY (delete(o)) {
            askConfirm = TRUE;
        }

        NEW documentContainer BEFORE functions.box {
            type = SPLITV;
            childConstraints = TO THE BOTTOM;

            ADD o.box;

            NEW documentDetail {
                type = TABBED;

                ADD d.box {
                    title = 'Спецификация';
                }
                NEW documentHistory {
                    title = 'История';

                    ADD o.historyGroup;
                    ADD o.postedGroup;
                }
                NEW printTab {
                    title = 'Печатные формы';
                    NEW printContainer {
                        title = 'Печать';
                        childConstraints = TO THE BOTTOM;
                        fillVertical = 1.0;
                    }
                }
            }
        }
    }
END

META defineOrderStockDestination(fromStock, toStock)
    Order.fromStockOrder(order) += fromStock##Order(order);
    Order.toStockOrder(order) += toStock##Order(order);
    Order.dataFromStockOrderDetail(detail) += data###fromStock##OrderDetail(detail);
    Order.dataToStockOrderDetail(detail) += data###toStock##OrderDetail(detail);
END

