MODULE Numerator;

REQUIRE System;

// ------------------------------------------- Нумераторы ----------------------------------------------- //

CLASS numerator 'Нумератор' : named;
TABLE numerator (numerator);

seriesNumerator 'Серия' = DATA STRING[2] (numerator) IN recognizeGroup FIXEDCHARWIDTH 3;

minValueNumerator 'Мин. значение' = DATA LONG (numerator) IN recognizeGroup;
maxValueNumerator 'Макс. значение' = DATA LONG (numerator) IN recognizeGroup;

stringLengthNumerator 'Длина' = DATA INTEGER (numerator) IN baseGroup;

curValueNumerator 'Тек. значение' = DATA LONG (numerator) IN recognizeGroup;
curValueNumerator(numerator) <- minValueNumerator(numerator) WHEN ASSIGNED(numerator IS numerator);

lpadStringWithZero = FORMULA STRING[18] 'lpad(CAST($1 AS text),$2,\'0\')';

curStringValueNumerator 'Тек. значение (строка)' (numerator) = lpadStringWithZero(curValueNumerator(numerator), stringLengthNumerator(numerator)) IN baseGroup;

incrementValueNumerator 'Увеличить значение' = ACTION (numerator) NEWSESSION {
    IF curValueNumerator(numerator) >= maxValueNumerator(numerator) THEN
        MESSAGE 'Счетчик нумератора достиг максимального значения. Обратитесь к администратору.'
    ELSE {
        SET curValueNumerator(numerator) <- curValueNumerator(numerator) + 1;
        EXEC apply();
    };
};

generateDefaultNumerators 'Сгенерировать нумераторы по умолчанию' = ABSTRACT ACTION();

FORM numerator 'Нумератор'
    OBJECTS n = numerator FIXED PANEL
    PROPERTIES(n) name, seriesNumerator, minValueNumerator, maxValueNumerator, stringLengthNumerator, curValueNumerator, curStringValueNumerator

    EDIT numerator OBJECT n
;

FORM numerators 'Нумераторы'
    OBJECTS n = numerator
    PROPERTIES(n) READONLY name, seriesNumerator, minValueNumerator, maxValueNumerator, stringLengthNumerator, curValueNumerator, curStringValueNumerator
    PROPERTIES(n)          ADDFORM, EDITFORM, delete

    DIALOG numerator OBJECT n
;

FORM defaultNumerators 'Нумераторы'
    OBJECTS n = numerator
    PROPERTIES(n) READONLY name, seriesNumerator, minValueNumerator, maxValueNumerator, stringLengthNumerator, curValueNumerator, curStringValueNumerator
    PROPERTIES(n)          ADDFORM, EDITFORM, delete

    PROPERTIES() generateDefaultNumerators
;

DESIGN defaultNumerators FROM DEFAULT {
    main {
        NEW defaultContainer AFTER n.box {
            title = 'Нумераторы по умолчанию';

            ADD PROPERTY(generateDefaultNumerators);
        }
    }
}

NAVIGATOR {
    catalogElement {
        ADD defaultNumerators;
    }
}

// ---------------------------------------------- Нумерованные объекты ----------------------------------------------- //

GROUP numberedGroup 'Нумератор' : baseGroup;

CLASS ABSTRACT numberedObject 'Нумерованный объект';
TABLE numberedObject (numberedObject);

numberObject 'Номер' = DATA STRING[18] (numberedObject) IN numberedGroup MINCHARWIDTH 7;
seriesObject 'Серия' = DATA STRING[2] (numberedObject) IN numberedGroup FIXEDCHARWIDTH 3;

seriesNumberObject 'Серия/Номер' (numberedObject) = ustring2(seriesObject(numberedObject), numberObject(numberedObject)) MINCHARWIDTH 7 PREFCHARWIDTH 10 MAXCHARWIDTH 20 PERSISTENT;

initValueNumberObject = ABSTRACT STRING[18] (numberedObject);
initValueSeriesObject = ABSTRACT STRING[2] (numberedObject);

initWhenNumberedObject = ABSTRACT BOOLEAN (numberedObject);

numberObject (object) <- initValueNumberObject(object) WHEN initWhenNumberedObject(object);
seriesObject (object) <- initValueSeriesObject(object) WHEN initWhenNumberedObject(object);

CLASS ABSTRACT numeratedObject 'Нумерируемый объект' : numberedObject;

numeratorObject 'Нумератор (ИД)' = DATA numerator (numeratedObject);
nameNumeratorObject 'Нумератор' (numeratedObject) = name(numeratorObject(numeratedObject)) IN numberedGroup MINCHARWIDTH 7 PREFCHARWIDTH 15;

initValueNumeratorObject = ABSTRACT numerator (numeratedObject);
initWhenNumeratorObject = ABSTRACT BOOLEAN (numeratedObject);

numeratorObject (object) <- initValueNumeratorObject (object) WHEN initWhenNumeratorObject(object);

setValueNumeratedObject 'Сгенерировать номер' = ACTION (numeratedObject) {
    SET numberObject(numeratedObject) <- curStringValueNumerator(numeratorObject(numeratedObject));
    SET seriesObject(numeratedObject) <- seriesNumerator(numeratorObject(numeratedObject));
    EXEC incrementValueNumerator(numeratorObject(numeratedObject));
} IN numberedGroup SHORTCUT numberObject;

WHEN CHANGED(numeratorObject(numeratedObject)) AND
     NOT CHANGED(numberObject(numeratedObject)) AND
     NOT CHANGED(seriesObject(numeratedObject))
     DO EXEC setValueNumeratedObject(numeratedObject) ;

// --------------------------------------------- Макрос по объявлению нумерируемого объекта ---------------------------- //

META defineNumeratedObject (object, caption, series)

    defaultNumerator###object = DATA numerator ();
    nameDefaultNumerator###object caption = name(defaultNumerator###object());

    initValueNumeratorObject(object) += defaultNumerator###object() IF object IS object;
    initWhenNumeratorObject(object) += ASSIGNED(object IS object);

    EXTEND FORM defaultNumerators
        PROPERTIES() nameDefaultNumerator###object
    ;
    EXTEND DESIGN defaultNumerators {
        defaultContainer {
            ADD PROPERTY(nameDefaultNumerator###object);
        }
    }

    generateDefaultNumerators() += ACTION () {
        ADDOBJ numerator;
        FOR n == addedObject() DO {
            SET name(n) <- caption;
            SET seriesNumerator(n) <- series;
            SET minValueNumerator(n) <- 1L;
            SET maxValueNumerator(n) <- 99999L;
            SET stringLengthNumerator(n) <- 5;

            SET defaultNumerator###object() <- n;
        }
    };
END
