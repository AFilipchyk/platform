MODULE Inventory;

REQUIRE System,
        Stock,
        Store,
        Numerator,
        Terminal,
        Barcode,
        Document,
        Employee,
        AccountDocument,
        Utils;

CLASS STATIC typeOfAddition 'Тип инвентаризации' {
    register 'Товары из описей',
    remains 'Товары по остаткам',
    many    'Множество товаров'
};

CLASS inventory 'Инвентаризация (открытая)' : historyObject, numeratedDocument;
TABLE inventory (inventory);

CLASS inventoryPosted 'Инвентаризация (закрытая)' : inventory, postedObject;

CLASS inventoryCommittee 'Комиссия для инвентаризации' : committee;

FORM inventoryCommittee 'Комиссия для инвентаризации'
    OBJECTS c=inventoryCommittee FIXED PANEL
    PROPERTIES(c)      name, nameChairmanCommittee

    TREE treeStore a=STRING[3], t=chainStores, st=storeType, s=store
    PROPERTIES         READONLY OBJVALUE(a), name(t), name(st), name(s)
    FILTERS            stringEqualsAll(a), inChainStoresStoreType (t, st), inStoreTypeStore(st, s)

    OBJECTS dep=departmentStore
    PROPERTIES(dep)    READONLY depName = name
    PROPERTIES(c, dep) inCommitteeEmployeeDivision
    FILTERS            inChainStoresStoreTypeStoreDepartment(t, st, s, dep)
    ORDER BY depName

    OBJECTS e=employee
    PROPERTIES(e)      READONLY name, userFirstName, userLastName, namePositionEmployee
    PROPERTIES(e)      ADDSESSIONFORM, EDITSESSIONFORM, delete

    PROPERTIES(c, e)   inCommitteeEmployee
    FILTERS            countDivisionEmployeeCommittee (e, c)
    FILTERGROUP filters6
        FILTER 'Показывать только членов комиссии' 'F10' inCommitteeEmployee(c, e)

    FILTERGROUP filters5
        FILTER 'Показывать отделы только для данной комиссии' 'F9' inCommitteeEmployeeDivision(c, dep)

    EDIT inventoryCommittee OBJECT c

;

DESIGN inventoryCommittee FROM DEFAULT {
    main {
        preferredSize = (1024, 768);

        NEW OneCase BEFORE e.box {
            ADD PROPERTY (nameChairmanCommittee);
        }

        NEW caseOne BEFORE OneCase {
            childConstraints = TO THE RIGHT;
            title = 'Отделы, для которых действуют комиссии';

            ADD treeStore.tree {
                fillHorizontal = 1;
            }

            ADD dep.box {
                fillHorizontal = 2;
            }
        };
    }
}

FORM inventoryCommitteeDialog 'Комиссии для инвентаризации'
    OBJECTS ic=inventoryCommittee
    PROPERTIES(ic)      READONLY name, nameEmployeeDivisionCommittee, nameEmployeeCommittee, nameChairmanCommittee
    PROPERTIES(ic)      ADDFORM, EDITFORM

    DIALOG inventoryCommittee OBJECT ic
;

@defineDocumentHeaderPosted (inventory) ;

@defineDocumentHeaderTime(inventory);
@defineDocumentHeaderNote(inventory);

nameInventory 'Название инвентаризации' = DATA STRING[100] (inventory) IN documentPrmGroup MINCHARWIDTH 50 PREFCHARWIDTH 50;
infoInventory 'Дополнительная информация по инвентаризации' = DATA STRING[500] (inventory) IN documentPrmGroup MINCHARWIDTH 50 PREFCHARWIDTH 50;

timeFromInventory 'Начато' (inventory) = DATA DATETIME (inventory) IN documentPrmGroup;
timeToInventory 'Закончено' (inventory) = DATA DATETIME (inventory) IN documentPrmGroup;

headManInventory 'Зав.маг.' (inventory) = DATA employee (inventory);
nameHeadManInventory  'Зав. магазином' (inventory) = commonName(headManInventory(inventory)) IN documentPrmGroup;

includeDepartmentStoreInventory 'Вкл' = DATA BOOLEAN (departmentStore, inventory) IN inventoryGroup;
nameDepartmentInventory 'Отделы документа' (inventory) =
    GROUP CONCAT name(departmentStore) IF includeDepartmentStoreInventory(departmentStore, inventory), ', ' BY inventory IN inventoryGroup MINCHARWIDTH 50 PREFCHARWIDTH 150;

typeOfAdditionInventory(inventory) = DATA typeOfAddition (inventory);
nameTypeOfAdditionInventory 'Тип инвентаризации' (inventory) = name(typeOfAdditionInventory(inventory)) IN documentPrmGroup MINCHARWIDTH 20 PREFCHARWIDTH 20;

userTypeOfAdditionDepartmentStoreInventory(departmentStore, inventory) = DATA typeOfAddition (departmentStore, inventory);
nameUserTypeOfAdditionDepartmentStoreInventory 'Тип инвентаризации' (departmentStore, inventory) = name(userTypeOfAdditionDepartmentStoreInventory(departmentStore, inventory)) IN inventoryGroup;

typeOfAdditionDepartmentStoreInventory(departmentStore, inventory) = UNION OVERRIDE typeOfAdditionInventory(inventory) AND departmentStore IS departmentStore,
                                                                                    userTypeOfAdditionDepartmentStoreInventory(departmentStore, inventory);

CONSTRAINT includeDepartmentStoreInventory(departmentStore, inventory) AND NOT typeOfAdditionDepartmentStoreInventory(departmentStore, inventory) MESSAGE 'Ошибка: Не задан тип сличительной ведомости для выбранного отдела';
userTypeOfAdditionDepartmentStoreInventory(departmentStore, inventory) => includeDepartmentStoreInventory(departmentStore, inventory) RESOLVE FALSE;

committeeInventory(inventory) = DATA inventoryCommittee (inventory) IN idGroup;
nameCommitteeInventory 'Название комиссии' (inventory) = commonName(committeeInventory(inventory)) IN inventoryCommitteeGroup MINCHARWIDTH 30 PREFCHARWIDTH 30;
nameChairmanCommitteeInventory 'Председатель комиссии' (inventory) = nameChairmanCommittee(committeeInventory(inventory)) IN inventoryCommitteeGroup MINCHARWIDTH 30 PREFCHARWIDTH 30;
namePositionChairmanInventory 'Должность председателя' (inventory)  = namePositionChairmanCommittee(committeeInventory(inventory)) IN inventoryCommitteeGroup MINCHARWIDTH 30 PREFCHARWIDTH 30;
nameEmployeeInventory 'Члены комиссии' (inventory) = nameEmployeeCommittee(committeeInventory(inventory)) IN inventoryCommitteeGroup MINCHARWIDTH 30 PREFCHARWIDTH 30;
inInventoryEmployee 'Является членом комиссии' (inventory, employee) = inCommitteeEmployee(committeeInventory(inventory), employee);


CLASS listInventory 'Опись (открытая)';
TABLE listInventory (listInventory);

CLASS listInventoryPosted 'Опись (закрытая)' : listInventory, postedObject;

@defineDocumentHeaderPosted(listInventory);
@defineDocumentHeaderDepartmentStore(listInventory);
@defineDocumentHeaderNote(listInventory);

inventoryListInventory = DATA inventory (listInventory) IN idGroup AUTOSET;
inInventoryListInventory(inventory, listInventory) = inventoryListInventory(listInventory) == inventory;

@defineDocumentDetailIndexCustom(inventory, listInventory);

nameInventoryListInventory 'Название инвентаризации' (listInventory) = nameInventory(inventoryListInventory(listInventory)) IN listInventoryGroup;
nameListInventory 'Номер описи' (listInventory) = [FORMULA STRING[30] '$1 || CAST ($2 AS character(20))']
                                                  ('Опись ', indexListInventory(listInventory)) IN listInventoryGroup;


userCommitteeListInventory(listInventory) = DATA inventoryCommittee (listInventory) IN idGroup;
committeeListInventory(listInventory) = UNION OVERRIDE committeeInventory(inventoryListInventory(listInventory)), userCommitteeListInventory(listInventory);
nameCommitteeListInventory 'Название комиссии' (listInventory) = commonName(committeeListInventory(listInventory)) IN inventoryCommitteeGroup MINCHARWIDTH 30 PREFCHARWIDTH 30;
nameChairmanCommitteeListInventory 'Председатель комиссии' (listInventory) = nameChairmanCommittee(committeeListInventory(listInventory)) IN inventoryCommitteeGroup MINCHARWIDTH 30 PREFCHARWIDTH 30;
namePositionChairmanListInventory 'Должность председателя' (listInventory)  = namePositionChairmanCommittee(committeeListInventory(listInventory)) IN inventoryCommitteeGroup MINCHARWIDTH 30 PREFCHARWIDTH 30;
nameEmployeeListInventory 'Члены комиссии' (listInventory) = nameEmployeeCommittee(committeeListInventory(listInventory)) IN inventoryCommitteeGroup MINCHARWIDTH 30 PREFCHARWIDTH 30;
inListInventoryEmployee 'Является членом комиссии' (listInventory, employee) = inCommitteeEmployee(committeeListInventory(listInventory), employee);

dateListInventory 'Дата' (listInventory) = dateInventory(inventoryListInventory(listInventory));

CLASS pageInventory 'Страница описи';
TABLE pageInventory (pageInventory);

@defineDocumentHeaderNote(pageInventory);

@defineDocumentRelationCustom(listInventory, pageInventory);
@defineDocumentDetailIndexCustom(listInventory, pageInventory);

namePageInventory 'Номер страницы' (pageInventory) = [FORMULA STRING[30] '$1 || CAST ($2 AS character(20))']
                                           ('Страница ', indexPageInventory(pageInventory)) IN baseGroup;

CLASS pageInventoryDetail 'Строка';
TABLE pageInventoryDetail (pageInventoryDetail);

@defineDocumentRelation(pageInventory);

listInventoryPageInventoryDetail(pageInventoryDetail) = listInventoryPageInventory(pageInventoryPageInventoryDetail(pageInventoryDetail)) PERSISTENT;
departmentStorePageInventoryDetail(pageInventoryDetail) = departmentStoreListInventory(listInventoryPageInventoryDetail(pageInventoryDetail)) PERSISTENT;
inventoryPageInventoryDetail(pageInventoryDetail) = inventoryListInventory(listInventoryPageInventoryDetail(pageInventoryDetail)) PERSISTENT;

dateTimePageInventoryDetail(pageInventoryDetail) = dateTimeInventory(inventoryPageInventoryDetail(pageInventoryDetail)) PERSISTENT;

barcodePageInventoryDetail(pageInventoryDetail) = DATA barcode (pageInventoryDetail) IN idGroup;

idBarcodePageInventoryDetail 'Штрих-код' (pageInventoryDetail) = idBarcode(barcodePageInventoryDetail(pageInventoryDetail));

@defineDocumentDetailSku(pageInventory, sku);

@defineDocumentDetailIndex(pageInventory);

@defineDocumentDetailQuantity(pageInventory);

@defineDocumentDetailPrice(pageInventory);
@derivePriceOnSkuChange(pageInventory, sku, departmentStore);

@defineDocumentDetailSum(pageInventory);

@defineDocumentHeaderQuantity(pageInventory);
@defineDocumentHeaderSum(pageInventory);

// Сличительная ведомость

CLASS ABSTRACT collationSheet 'Сличительная ведомость' : outAccountDocumentLedger;
TABLE collationSheet (collationSheet);

CLASS registerCollationSheet 'Сличительная ведомость по описи' : collationSheet;
CLASS remainsCollationSheet 'Сличительная ведомость по остаткам' : collationSheet;
CLASS manyCollationSheet 'Сличительная ведомость по множеству товаров' : collationSheet;

@defineDocumentHeaderDepartmentStore(collationSheet);

@defineDocumentRelationCustom(inventory, collationSheet);

@defineDocumentDetailPostedCustom(inventory, collationSheet);
@defineDocumentDetailIndexCustom(inventory, collationSheet);
@defineDocumentDetailTimeCustom(inventory, collationSheet);

nameInventoryCollationSheet 'Название инвентаризации' (collationSheet) = nameInventory(inventoryCollationSheet(collationSheet)) IN collationSheetGroup;

nameCollationSheet 'Внутренний номер' (collationSheet) = [FORMULA STRING[30] '$1 || \'-\' || CAST ($2 AS character(20))'](
        seriesNumberObject(inventoryCollationSheet(collationSheet)),
        indexCollationSheet(collationSheet)) IN collationSheetGroup;

collationSheetDepartmentStoreInventory 'Сличительная ведомость по складу и инвентаризации' (departmentStore, inventory) =
    GROUP UNIQUE collationSheet BY departmentStoreCollationSheet(collationSheet), inventoryCollationSheet(collationSheet);
collationSheetListInventory(listInventory) = collationSheetDepartmentStoreInventory(departmentStoreListInventory(listInventory), inventoryListInventory(listInventory));
nameCollationSheetListInventory 'Название сл. ведомости' (listInventory) = nameCollationSheet(collationSheetListInventory(listInventory)) IN listInventoryGroup;

collationSheetPageInventoryDetail (pageInventoryDetail) = collationSheetListInventory(listInventoryPageInventoryDetail(pageInventoryDetail)) PERSISTENT;

typeOfAdditionCollationSheet(collationSheet)= typeOfAdditionDepartmentStoreInventory(departmentStoreCollationSheet(collationSheet), inventoryCollationSheet(collationSheet));
nameTypeOfAdditionCollationSheet 'Тип сличительной ведомости' (collationSheet) = name(typeOfAdditionCollationSheet(collationSheet)) IN baseGroup MINCHARWIDTH 20 PREFCHARWIDTH 20;

inInventoryDepartmentStoreListInventoryPageInventoryPageInventoryDetail (inventory, departmentStore, listInventory, pageInventory, pageInventoryDetail) = UNION OVERRIDE
    pageInventoryPageInventoryDetail(pageInventoryDetail) == pageInventory AND listInventory AND departmentStore AND inventory,
    listInventoryPageInventoryDetail(pageInventoryDetail) == listInventory AND departmentStore AND NOT pageInventory AND inventory,
    departmentStorePageInventoryDetail(pageInventoryDetail) == departmentStore AND inventory == inventoryPageInventoryDetail(pageInventoryDetail) AND NOT pageInventory AND NOT listInventory;

descriptionCollationSheet 'Название документа' (collationSheet) =
    [FORMULA STRING[200] '\'Сличительная ведомость \' || CAST($1 AS TEXT) ||  \' от \' || CAST($2 AS TEXT)'] (
    nameCollationSheet(collationSheet), dateCollationSheet(collationSheet));

prevDateCollationSheet 'Дата предыдущей инвентаризации' (collationSheet) =DATA DATE (collationSheet) IN baseGroup;

inventoryPrevDepartmentStoreInventory (departmentStore, inventory) = PARTITION PREV inventory IF includeDepartmentStoreInventory(departmentStore, inventory) AND isPostedInventory(inventory)
    BY departmentStore ORDER DESC dateInventory(inventory);

datePrevCollationSheet 'Дата предыдущей инвентаризации' (collationSheet) = PARTITION PREV dateCollationSheet(collationSheet)
    //IF includeDepartmentStoreInventory(departmentStoreCollationSheet(collationSheet), inventoryCollationSheet(collationSheet)) AND isPostedInventory(inventoryCollationSheet(collationSheet))
    BY departmentStoreCollationSheet(collationSheet) ORDER  dateCollationSheet(collationSheet);

overDateCollationSheet 'Дата предыдущей инвентаризации' (collationSheet) = UNION OVERRIDE datePrevCollationSheet(collationSheet), prevDateCollationSheet(collationSheet);

GROUP inventoryGroup 'Информация об инвентаризации' : publicGroup;
GROUP collationSheetGroup 'Информация о сличительных ведомостях' : baseGroup;
GROUP listInventoryGroup 'Информация об описях' : baseGroup;
GROUP inventoryCommitteeGroup 'Комиссия' : baseGroup;

//---------------------------- Подсчет всех сумм ----------------------------//

countListInventoryCollationSheet 'К-во описей' (collationSheet) =
    GROUP SUM 1 IF listInventory IS listInventory BY collationSheetListInventory(listInventory);
countPageInventoryCollationSheet 'К-во страниц' (collationSheet) =
    GROUP SUM 1 IF pageInventory IS pageInventory BY collationSheetListInventory(listInventoryPageInventory(pageInventory));

countPageInventoryDetailListInventory 'Кол-во строк' (listInventory) = GROUP SUM countPageInventoryDetailPageInventory(pageInventory) BY listInventoryPageInventory(pageInventory) IN documentSumGroup;
quantityPageInventoryDetailListInventory 'Кол-во товара' (listInventory) = GROUP SUM quantityPageInventoryDetailPageInventory(pageInventory) BY listInventoryPageInventory(pageInventory) IN documentSumGroup;
sumPageInventoryDetailListInventory 'Сумма товара' (listInventory) = GROUP SUM sumPageInventoryDetailPageInventory(pageInventory) BY listInventoryPageInventory(pageInventory) IN documentSumGroup;

countPageInventoryDetailDepartmentStoreInventory 'Кол-во строк' (departmentStore, inventory) =
    GROUP SUM countPageInventoryDetailListInventory(listInventory) BY departmentStoreListInventory(listInventory), inventoryListInventory(listInventory) IN documentSumGroup;
quantityPageInventoryDetailDepartmentStoreInventory 'Кол-во по описям' (departmentStore, inventory) =
    GROUP SUM quantityPageInventoryDetailListInventory(listInventory) BY departmentStoreListInventory(listInventory), inventoryListInventory(listInventory) IN documentSumGroup;
sumPageInventoryDetailDepartmentStoreInventory 'Сумма по описям' (departmentStore, inventory) =
    GROUP SUM sumPageInventoryDetailListInventory(listInventory) BY departmentStoreListInventory(listInventory), inventoryListInventory(listInventory) IN documentSumGroup;

quantityPageInventoryDetailCollationSheetSku 'Кол-во по описям' (collationSheet, sku) = GROUP SUM quantityPageInventoryDetail(pageInventoryDetail)
    BY collationSheetPageInventoryDetail(pageInventoryDetail), skuPageInventoryDetail(pageInventoryDetail);
pricePageInventoryDetailCollationSheetSku 'Цена по описям' (collationSheet, sku) = GROUP EQUAL pricePageInventoryDetail(pageInventoryDetail)
    BY collationSheetListInventory(listInventoryPageInventoryDetail(pageInventoryDetail)), skuPageInventoryDetail(pageInventoryDetail);
sumPageInventoryDetailCollationSheetSku 'Сумма по описям' (collationSheet, sku) = GROUP SUM sumPageInventoryDetail(pageInventoryDetail)
    BY collationSheetPageInventoryDetail(pageInventoryDetail), skuPageInventoryDetail(pageInventoryDetail);

quantityPageInventoryDetailListInventorySku 'Кол-во в описи' (listInventory, sku) = GROUP SUM quantityPageInventoryDetail(pageInventoryDetail)
    BY listInventoryPageInventoryDetail(pageInventoryDetail), skuPageInventoryDetail(pageInventoryDetail);
pricePageInventoryDetailListInventorySku 'Цена в описи' (listInventory, sku) = GROUP EQUAL pricePageInventoryDetail(pageInventoryDetail)
    BY listInventoryPageInventoryDetail(pageInventoryDetail), skuPageInventoryDetail(pageInventoryDetail);
sumPageInventoryDetailListInventorySku 'Сумма в описи' (listInventory, sku) = GROUP SUM sumPageInventoryDetail(pageInventoryDetail)
    BY listInventoryPageInventoryDetail(pageInventoryDetail), skuPageInventoryDetail(pageInventoryDetail);

indexListInventorySku '№ п/п' (listInventory, sku) = PARTITION SUM 1 IF  quantityPageInventoryDetailListInventorySku(listInventory, sku) > 0 BY listInventory ORDER nameSku(sku);
countIndexListInventory 'Количество наименований товара'(listInventory) = GROUP SUM 1 IF quantityPageInventoryDetailListInventorySku(listInventory, sku) > 0
    BY listInventory IN documentSumGroup;

quantityPageInventoryDetailCollationSheet 'Кол-во по описям' (collationSheet) =
    GROUP SUM quantityPageInventoryDetailCollationSheetSku(collationSheet, sku) BY collationSheet;
sumPageInventoryDetailCollationSheet 'Сумма по описям' (collationSheet) =
    GROUP SUM sumPageInventoryDetailCollationSheetSku(collationSheet, sku) BY collationSheet;

quantityBalanceCollationSheetSku 'Кол-во по остаткам' (collationSheet, sku) = DATA NUMERIC[14,3] (collationSheet, sku);

//---------------------------- Состав сличительной ведомости ----------------------------//

inManyCollationSheetSku 'Вкл в ведомость' = DATA BOOLEAN (manyCollationSheet, sku) IN baseGroup;

includeCollationSheetSku(collationSheet, sku) = UNION EXCLUSIVE
    collationSheet IS registerCollationSheet IF quantityPageInventoryDetailCollationSheetSku(collationSheet, sku),
    (UNION OVERRIDE inManyCollationSheetSku(collationSheet, sku), collationSheet IS manyCollationSheet IF quantityPageInventoryDetailCollationSheetSku(collationSheet, sku)),
    (collationSheet IS remainsCollationSheet IF UNION OVERRIDE quantityBalanceCollationSheetSku(collationSheet, sku) != 0, TRUE IF quantityPageInventoryDetailCollationSheetSku(collationSheet, sku));

priceBalanceCollationSheetSku 'Цена по остаткам' (collationSheet, sku) = DATA NUMERIC[14,2] (collationSheet, sku);
priceBalanceCollationSheetSku(collationSheet, sku) <- priceSkuStockDateTime(
                sku, departmentStoreCollationSheet(collationSheet), dateTimeInventory(inventoryCollationSheet(collationSheet)))
                WHEN ASSIGNED(includeCollationSheetSku(collationSheet, sku));

sumBalanceCollationSheetSku 'Сумма по остаткам' (collationSheet, sku) =
    quantityBalanceCollationSheetSku(collationSheet, sku) * priceBalanceCollationSheetSku(collationSheet, sku);

quantityBalanceCollationSheet 'Кол-во по остаткам' (collationSheet) =
    GROUP SUM quantityBalanceCollationSheetSku(collationSheet, sku) IF includeCollationSheetSku(collationSheet, sku) BY collationSheet PERSISTENT;
sumBalanceCollationSheet 'Сумма по остаткам' (collationSheet) =  round0(
    [GROUP SUM sumBalanceCollationSheetSku(collationSheet, sku) IF includeCollationSheetSku(collationSheet, sku) BY collationSheet](collationSheet)) PERSISTENT;


quantityShortageCollationSheetSku 'Кол-во недостачи' (collationSheet, sku) =
    quantityBalanceCollationSheetSku(collationSheet, sku) (-) quantityPageInventoryDetailCollationSheetSku(collationSheet, sku) PERSISTENT;
sumShortageCollationSheetSku 'Сумма недостачи' (collationSheet, sku) =
    sumBalanceCollationSheetSku(collationSheet, sku) (-) sumPageInventoryDetailCollationSheetSku(collationSheet, sku) PERSISTENT;

quantityShortageCollationSheet 'Кол-во недостачи' (collationSheet) =
    GROUP SUM quantityShortageCollationSheetSku(collationSheet, sku) IF includeCollationSheetSku(collationSheet, sku) BY collationSheet PERSISTENT;
sumShortageCollationSheet 'Сумма недостачи' (collationSheet) = round0(
    [GROUP SUM sumShortageCollationSheetSku(collationSheet, sku) IF includeCollationSheetSku(collationSheet, sku) BY collationSheet](collationSheet)) PERSISTENT;

sumSkuBalanceCollationSheet 'Сумма по остаткам, товар' (collationSheet) = round0(
    [GROUP SUM sumBalanceCollationSheetSku(collationSheet, sku) IF includeCollationSheetSku(collationSheet, sku) IF NOT isContainerSku(sku) BY collationSheet](collationSheet)) PERSISTENT;
sumContainerBalanceCollationSheet 'Сумма по остаткам, тара' (collationSheet) = round0(
    [GROUP SUM sumBalanceCollationSheetSku(collationSheet, sku) IF includeCollationSheetSku(collationSheet, sku) IF isContainerSku(sku) BY collationSheet](collationSheet)) PERSISTENT;

sumSkuPageInventoryDetailCollationSheet 'Сумма по факту, товар' (collationSheet) = round0(
    [GROUP SUM sumPageInventoryDetailCollationSheetSku(collationSheet, sku) IF includeCollationSheetSku(collationSheet, sku) IF NOT isContainerSku(sku) BY collationSheet](collationSheet));
sumContainerPageInventoryDetailCollationSheet 'Сумма по факту, тара' (collationSheet) = round0(
    [GROUP SUM sumPageInventoryDetailCollationSheetSku(collationSheet, sku) IF includeCollationSheetSku(collationSheet, sku) IF isContainerSku(sku) BY collationSheet](collationSheet));

sumSkuShortageCollationSheet 'Сумма недостачи, товар' (collationSheet) = round0(
    [GROUP SUM sumShortageCollationSheetSku(collationSheet, sku) IF includeCollationSheetSku(collationSheet, sku) IF NOT isContainerSku(sku) BY collationSheet](collationSheet));
sumContainerShortageCollationSheet 'Сумма недостачи, тара' (collationSheet) = round0(
    [GROUP SUM sumShortageCollationSheetSku(collationSheet, sku) IF includeCollationSheetSku(collationSheet, sku) IF isContainerSku(sku) BY collationSheet](collationSheet));

@implementAccountDocumentLedger(collationSheet, departmentStore);
sumOutAccountDocumentLedger (ledger) += sumShortageCollationSheet(ledger);
sumItemOutAccountDocumentLedger (ledger) += sumSkuShortageCollationSheet(ledger);
sumContainerOutAccountDocumentLedger (ledger) += sumContainerShortageCollationSheet(ledger);

differentPriceCollationSheetSku(collationSheet, sku) = pricePageInventoryDetailCollationSheetSku(collationSheet, sku) != priceBalanceCollationSheetSku(collationSheet, sku);


fillBalanceInventory 'Заполнить остатки' (inventory) = ACTION(inventory) {
    SET quantityBalanceCollationSheetSku(collationSheet, sku) AND inventoryCollationSheet(collationSheet)==inventory  AND sku IS sku
        <- balanceBSkuStockDateTime(sku, departmentStoreCollationSheet(collationSheet), dateTimeInventory(inventoryCollationSheet(collationSheet)));

} CONFIRM;
//  todo: зацикливается на includeCollationSheetSku, пока на action поставили - переделать потом

convertPriceInventory 'Пересчитать цены по всей инвентаризации' (inventory) = ACTION(inventory) {
    SET pricePageInventoryDetail(pageInventoryDetail) AND inventoryPageInventoryDetail(pageInventoryDetail) == inventory <- priceSkuStockDateTime(
            skuPageInventoryDetail(pageInventoryDetail), departmentStorePageInventoryDetail(pageInventoryDetail), dateTimePageInventoryDetail(pageInventoryDetail))
            AND inventoryPageInventoryDetail(pageInventoryDetail) == inventory;
    SET priceBalanceCollationSheetSku(collationSheet, sku) AND inventoryCollationSheet(collationSheet) == inventory <- priceSkuStockDateTime(
            sku, departmentStoreCollationSheet(collationSheet), dateTimeInventory(inventoryCollationSheet(collationSheet)))
            AND inventoryCollationSheet(collationSheet) == inventory;
} CONFIRM;

// todo: какой-то баг, не всегда срабатывает action

convertPriceCollationSheet 'Пересчитать цены в сличительной ведомости' (collationSheet) = ACTION(collationSheet) {
    SET pricePageInventoryDetail(pageInventoryDetail) AND collationSheetListInventory(listInventoryPageInventoryDetail(pageInventoryDetail)) == collationSheet <- priceSkuStockDateTime(
            skuPageInventoryDetail(pageInventoryDetail), departmentStorePageInventoryDetail(pageInventoryDetail), dateTimePageInventoryDetail(pageInventoryDetail))
            AND collationSheetListInventory(listInventoryPageInventoryDetail(pageInventoryDetail)) == collationSheet;
    SET priceBalanceCollationSheetSku(collationSheet, sku) <- priceSkuStockDateTime(
            sku, departmentStoreCollationSheet(collationSheet), dateTimeInventory(inventoryCollationSheet(collationSheet)));
} CONFIRM;

//---------------------------- Генерация сличительных ведомостей ----------------------------//

// автоматическое создание сличительной ведомости (товары из описей) //
includeRegisterDepartmentStoreInventory(departmentStore, inventory) =
    includeDepartmentStoreInventory(departmentStore, inventory) AND typeOfAdditionDepartmentStoreInventory(departmentStore, inventory) == typeOfAddition.register;

@defineAggregationDoubleCustom(departmentStoreCollationSheet, inventoryCollationSheet, departmentStore, inventory, registerCollationSheet, includeRegisterDepartmentStoreInventory);

// автоматическое создание сличительной ведомости (по остаткам) //
includeRemainsDepartmentStoreInventory(departmentStore, inventory) =
    includeDepartmentStoreInventory(departmentStore, inventory) AND typeOfAdditionDepartmentStoreInventory(departmentStore, inventory) == typeOfAddition.remains;

@defineAggregationDoubleCustom(departmentStoreCollationSheet, inventoryCollationSheet, departmentStore, inventory, remainsCollationSheet, includeRemainsDepartmentStoreInventory);

// автоматическое создание сличительной ведомости (по множеству товаров) //
includeManyDepartmentStoreInventory(departmentStore, inventory) =
    includeDepartmentStoreInventory(departmentStore, inventory) AND typeOfAdditionDepartmentStoreInventory(departmentStore, inventory) == typeOfAddition.many;

@defineAggregationDoubleCustom(departmentStoreCollationSheet, inventoryCollationSheet, departmentStore, inventory, manyCollationSheet, includeManyDepartmentStoreInventory);

//---------------------------- Изменение остатка инвентаризации ----------------------------//

CLASS ABSTRACT inventoryDetail 'Изменение остатка инвентаризации' : skuLedger;
TABLE inventoryDetail (inventoryDetail);

CLASS outInventoryDetail 'Недостача инвентаризации' : inventoryDetail, outFIFOSkuLedger;
CLASS inInventoryDetail 'Излишки инвентаризации' : inventoryDetail, inLIFOSkuLedger;

needToOutLedgerCollationSheetSku (collationSheet, sku) = quantityShortageCollationSheetSku(collationSheet, sku) > 0
    AND includeCollationSheetSku(collationSheet, sku) AND isPostedCollationSheet(collationSheet);

needToInLedgerCollationSheetSku (collationSheet, sku) = quantityShortageCollationSheetSku(collationSheet, sku) < 0
    AND includeCollationSheetSku(collationSheet, sku) AND isPostedCollationSheet(collationSheet);

@defineAggregationDouble(collationSheet, sku, outInventoryDetail, needToOutLedgerCollationSheetSku);
@defineAggregationDouble(collationSheet, sku, inInventoryDetail, needToInLedgerCollationSheetSku);

collationSheetInventoryDetail(inventoryDetail) = UNION EXCLUSIVE collationSheetOutInventoryDetail(inventoryDetail),
                                                                 collationSheetInInventoryDetail(inventoryDetail);

inventoryInventoryDetail(inventoryDetail) = inventoryCollationSheet(collationSheetInventoryDetail(inventoryDetail)) PERSISTENT;

@defineDocumentDetailTimeCustom(inventory, inventoryDetail);
@defineDocumentDetailPostedCustom(inventory, inventoryDetail);

@defineDocumentDetailDepartmentStoreCustom(collationSheet, inventoryDetail);
departmentStoreInInventoryDetail(detail) = departmentStoreInventoryDetail(detail) AND detail IS inInventoryDetail;
departmentStoreOutInventoryDetail(detail) = departmentStoreInventoryDetail(detail) AND detail IS outInventoryDetail;

quantityOutInventoryDetail (inventoryDetail) = quantityShortageCollationSheetSku(collationSheetOutInventoryDetail(inventoryDetail), skuOutInventoryDetail(inventoryDetail));
quantityInInventoryDetail (inventoryDetail) = -quantityShortageCollationSheetSku(collationSheetInInventoryDetail(inventoryDetail), skuInInventoryDetail(inventoryDetail));

sumOutInventoryDetail (inventoryDetail) = sumShortageCollationSheetSku(collationSheetOutInventoryDetail(inventoryDetail), skuOutInventoryDetail(inventoryDetail));
sumInInventoryDetail (inventoryDetail) = -sumShortageCollationSheetSku(collationSheetInInventoryDetail(inventoryDetail), skuInInventoryDetail(inventoryDetail));

skuInventoryDetail(inventoryDetail) = UNION EXCLUSIVE skuOutInventoryDetail(inventoryDetail),
                                                       skuInInventoryDetail(inventoryDetail) PERSISTENT;
nameSkuInventoryDetail 'Товар' (inventoryDetail) = nameSku(skuInventoryDetail(inventoryDetail)) MINCHARWIDTH 15 PREFCHARWIDTH 15;
idBarcodeInventoryDetail 'Штрих-код' (inventoryDetail) =  idBarcodeSku(skuInventoryDetail(inventoryDetail));

quantityInventoryDetail 'Кол-во недостачи' (inventoryDetail) = quantityShortageCollationSheetSku(collationSheetInventoryDetail(inventoryDetail), skuInventoryDetail(inventoryDetail)) PERSISTENT;
sumInventoryDetail 'Сумма недостачи' (inventoryDetail) = sumShortageCollationSheetSku(collationSheetInventoryDetail(inventoryDetail), skuInventoryDetail(inventoryDetail)) PERSISTENT;

includeSkuInventoryDetail(inventoryDetail) = includeCollationSheetSku(collationSheetInventoryDetail(inventoryDetail), skuInventoryDetail(inventoryDetail)) PERSISTENT;

descriptionOutInventoryDetail 'Название документа' (inventoryDetail) =
    [FORMULA STRING[200] '\'Недостача по инвентаризации \' || CAST($1 AS TEXT) ||  \' от \' || CAST($2 AS TEXT)'] (
    nameCollationSheet(collationSheetOutInventoryDetail(inventoryDetail)), dateCollationSheet(collationSheetOutInventoryDetail(inventoryDetail)));

descriptionInInventoryDetail 'Название документа' (inventoryDetail) =
    [FORMULA STRING[200] '\'Излишек по инвентаризации \' || CAST($1 AS TEXT) ||  \' от \' || CAST($2 AS TEXT)'] (
    nameCollationSheet(collationSheetInInventoryDetail(inventoryDetail)), dateCollationSheet(collationSheetInInventoryDetail(inventoryDetail)));

descriptionInventoryDetail 'Название документа' (inventoryDetail) = descriptionOutInventoryDetail(inventoryDetail) OR descriptionInInventoryDetail(inventoryDetail);

@implementSkuLedger(inventory, sku, departmentStore);

quantityOutFIFOSkuLedger (ledger) += quantityOutInventoryDetail(ledger);
@implementSkuLedgerOutFIFOBalance(outInventory, sku, departmentStore);
sumOutSkuLedger (ledger) += sumOutInventoryDetail(ledger);

quantityInLIFOSkuLedger (ledger) += quantityInInventoryDetail(ledger);
@implementSkuLedgerInLIFOBalance(inInventory, sku, departmentStore);
sumInSkuLedger (ledger) += sumInInventoryDetail(ledger);

//------------------------------------Печатная форма описи------------------------------------------//

nameCompanyListInventory 'Компания' (listInventory) = name(companyDepartmentStore(departmentStoreListInventory(listInventory)));
nameStoreListInventory 'Магазин' (listInventory) = name(storeDepartmentStore(departmentStoreListInventory(listInventory)));

FORM listInventoryPrint 'Опись' PRINT

    OBJECTS         li=listInventory FIXED PANEL
    PROPERTIES (li) dateListInventory, nameCompanyListInventory, nameStoreListInventory, nameDepartmentStoreListInventory,
                    nameInventoryListInventory, nameListInventory, noteListInventory, committeeListInventory,
                    nameCommitteeListInventory, nameChairmanCommitteeListInventory, namePositionChairmanListInventory, nameEmployeeListInventory,
                    countPageInventoryListInventory, countPageInventoryDetailListInventory, quantityPageInventoryDetailListInventory,
                    sumPageInventoryDetailListInventory, countIndexListInventory

    OBJECTS t=DATETIME FIXED PANEL
    PROPERTIES(t) OBJVALUE

    OBJECTS         i=sku
    PROPERTIES (li,i) indexListInventorySku
    PROPERTIES (i)    idBarcodeSku, nameSku
    PROPERTIES (li,i) quantityPageInventoryDetailListInventorySku, pricePageInventoryDetailListInventorySku, sumPageInventoryDetailListInventorySku

    OBJECTS e=employee
    PROPERTIES(e) READONLY   commonName, namePositionEmployee

    FILTERS        inListInventoryEmployee(li, e),
                   quantityPageInventoryDetailListInventorySku(li,i)>0

;

DESIGN listInventoryPrint FROM DEFAULT {
    main{
        preferredSize = (1024, 768);
        childConstraints = TO THE BOTTOM;
        ADD li.box {
            childConstraints = TO THE RIGHTBOTTOM;
            NEW row {
                childConstraints = TO THE BOTTOM;
                ADD li.documentHeaderGroup {
                    childConstraints = TO THE RIGHTBOTTOM;
                    ADD PROPERTY(nameInventoryListInventory);
                    ADD PROPERTY(nameListInventory);
                }
                ADD li.inventoryCommitteeGroup {
                    childConstraints = TO THE RIGHTBOTTOM;
                }
                ADD li.documentPrmGroup;


            }
            ADD li.documentSumGroup {
                childConstraints = TO THE BOTTOM;
                PROPERTY(countPageInventoryListInventory) {
                    caption = 'Количество страниц';
                }
            }
        }

        ADD i.box;
        ADD e.box;
        ADD functions.box;
    }
}

toPrintListInventoryTime 'Опись' (listInventory, time) =
    ACTION FORM listInventoryPrint OBJECTS li=(listInventory AS listInventory), t=(time AS DATETIME) IMAGE 'print.png' IN printGroup;

toPrintListInventory 'Опись' (listInventory) = toPrintListInventoryTime(listInventory, currentDateTime());


addDetailDialogTerminalListInventory 'Заполнить из документа ТСД' (listInventory) = ACTION (listInventory) {
    FORM terminalDocuments MODAL;
    IF formResult() == formResult.ok THEN {
        LOCAL document = terminalDocument ();
        SET document() <- chosenObject('td');
        SET usedTerminalDocument(terminalDocument) IF terminalDocument == document()  <- TRUE;

        LOCAL page = pageInventory ();
        LOCAL detailCount = INTEGER();
        SET detailCount() <- 0;

        FOR terminalDocumentTerminalDocumentDetail(tdd) == document() DO {
            IF detailCount() == 0 THEN {
                ADDOBJ pageInventory;
                FOR pi == addedObject() DO {
                    SET listInventoryPageInventory(pi) <- listInventory AS listInventory;
                    SET page() <- pi AS pageInventory;
                }
            }

            ADDOBJ pageInventoryDetail;
            FOR pid == addedObject() DO {
                SET pageInventoryPageInventoryDetail(pid) <- page();
                SET barcodePageInventoryDetail(pid) <- barcodeIdDate(barcodeTerminalDocumentDetail(tdd), dateListInventory(listInventory));
                SET quantityPageInventoryDetail(pid) <- quantityTerminalDocumentDetail(tdd);

                SET detailCount() <- detailCount() + 1;

                IF detailCount() >= 20 THEN {
                    SET detailCount() <- 0;
                }
            }
        }

    }
} TOOLBAR;


//------------------------------------Формы для инвентаризации------------------------------------------//

FORM nameDepartmentInventory 'Подразделения для инвентаризации'
    OBJECTS in=inventory FIXED PANEL
    PROPERTIES (in) READONLY seriesNumberObject, nameInventory, dateInventory

    TREE treeStore t=chainStores, st=storeType, s=store, ds=departmentStore
    PROPERTIES READONLY name(t), name(st), name(s), name(ds)

    FILTERS inChainStoresStoreType (t, st),
            inStoreTypeStore (st, s),
            inStoreDepartment (s, ds)

    PROPERTIES (ds, in) includeDepartmentStoreInventory, nameUserTypeOfAdditionDepartmentStoreInventory

;

dialogDepartmentByInventory 'Подразделения для инвентаризации' (inventory) =
    ACTION FORM nameDepartmentInventory OBJECTS in MODAL SHORTCUT nameDepartmentInventory DEFAULT;

FORM collationSheetSku 'Товары для добавления в сличительную ведомость'
    OBJECTS cs=manyCollationSheet FIXED PANEL
    PROPERTIES (cs) READONLY nameCollationSheet, nameTypeOfAdditionCollationSheet, nameDepartmentStoreCollationSheet

    TREE treeGroup g=skuGroup PARENT parentSkuGroup
    PROPERTIES READONLY name(g)
    ORDER BY name

    OBJECTS i=sku
    PROPERTIES(i) READONLY idBarcodeSku, nameSku, shortNameUOMSku

    PROPERTIES(cs, i) inManyCollationSheetSku

    FILTERS isParentSkuGroupSku(g, i)
    ORDER BY nameSku
;

DESIGN collationSheetSku FROM DEFAULT {
    POSITION treeGroup.tree.box TO THE LEFT i.box;
        treeGroup.tree.box{ fillHorizontal = 1.5;}
        i.box{ fillHorizontal = 3.5;}

}

dialogSkuByCollationSheet 'Добавить товар' (collationSheet) = [ACTION FORM collationSheetSku OBJECTS cs MODAL](collationSheet) AND collationSheet IS manyCollationSheet;

FORM listInventory 'Опись'
    OBJECTS         li=listInventory FIXED PANEL
    PROPERTIES (li) nameDepartmentStoreListInventory, nameInventoryListInventory, nameListInventory, noteListInventory,
                    nameCommitteeListInventory, nameChairmanCommitteeListInventory, nameEmployeeListInventory,
                    countPageInventoryListInventory, countPageInventoryDetailListInventory, quantityPageInventoryDetailListInventory,
                    sumPageInventoryDetailListInventory

    OBJECTS         pl=pageInventory
    PROPERTIES(pl)  namePageInventory, notePageInventory FORCE PANEL, countPageInventoryDetailPageInventory, quantityPageInventoryDetailPageInventory, sumPageInventoryDetailPageInventory, ADDOBJ, delete

    OBJECTS         dp=pageInventoryDetail
    PROPERTIES (dp) indexPageInventoryDetail, idBarcodePageInventoryDetail, nameSkuPageInventoryDetail, quantityPageInventoryDetail, pricePageInventoryDetail,
                    sumPageInventoryDetail, ADDOBJ, delete

    OBJECTS         i=sku
    PROPERTIES (li,i) indexListInventorySku
    PROPERTIES (i)    idBarcodeSku, nameSku
    PROPERTIES (li,i) quantityPageInventoryDetailListInventorySku, pricePageInventoryDetailListInventorySku, sumPageInventoryDetailListInventorySku

    PROPERTIES      addDetailDialogTerminalListInventory(li) TODRAW dp

    FILTERS listInventoryPageInventory(pl) == li,
            pageInventoryPageInventoryDetail(dp) == pl,
            quantityPageInventoryDetailListInventorySku(li,i)>0

    EDIT listInventory OBJECT li
;

DESIGN listInventory FROM DEFAULT {
    main{
        preferredSize = (1024, 768);
        childConstraints = TO THE BOTTOM;
        ADD li.box {
            childConstraints = TO THE RIGHT;
            NEW row {
                childConstraints = TO THE BOTTOM;
                ADD li.documentHeaderGroup {
                    childConstraints = TO THE RIGHT;
                    ADD PROPERTY(nameInventoryListInventory);
                    ADD PROPERTY(nameListInventory);
                }
                ADD li.inventoryCommitteeGroup {
                    childConstraints = TO THE RIGHT;
                }
                ADD li.documentPrmGroup;


            }
            ADD li.documentSumGroup {
                childConstraints = TO THE BOTTOM;
                PROPERTY(countPageInventoryListInventory) {
                    caption = 'Количество страниц';
                }
            }
        }
        NEW wor {
            childConstraints = TO THE RIGHT;
            ADD pl.box {
                fillHorizontal = 1;
            }
            NEW case1 {
                fillHorizontal = 2;
                type = TABBED;

                ADD dp.box;
                ADD i.box {
                    title = 'Опись-товар';
                }
            }
        }
        ADD functions.box;
    }
}
nameCompanyCollationSheet 'Компания' (collationSheet) = nameCompanyDepartmentStore(departmentStoreCollationSheet(collationSheet));
nameStoreCollationSheet 'Магазин' (collationSheet) = nameStoreDepartmentStore(departmentStoreCollationSheet(collationSheet));
committeeCollationSheet = committeeInventory(inventoryCollationSheet(collationSheet));
nameCommitteeCollationSheet 'Название комиссии' (collationSheet) = commonName(committeeCollationSheet(collationSheet)) IN inventoryCommitteeGroup MINCHARWIDTH 30 PREFCHARWIDTH 30;
nameChairmanCommitteeCollationSheet 'Председатель комиссии' (collationSheet) = nameChairmanCommittee(committeeCollationSheet(collationSheet)) IN inventoryCommitteeGroup MINCHARWIDTH 30 PREFCHARWIDTH 30;
namePositionChairmanCollationSheet 'Должность председателя' (collationSheet)  = namePositionChairmanCommittee(committeeCollationSheet(collationSheet)) IN inventoryCommitteeGroup MINCHARWIDTH 30 PREFCHARWIDTH 30;
nameEmployeeCollationSheet 'Члены комиссии' (collationSheet) = nameEmployeeCommittee(committeeCollationSheet(collationSheet)) IN inventoryCommitteeGroup MINCHARWIDTH 30 PREFCHARWIDTH 30;
inCollationSheetEmployee 'Является членом комиссии' (collationSheet, employee) = inCommitteeEmployee(committeeCollationSheet(collationSheet), employee);

timeFromCollationSheet 'Снятие остатков начато' (collationSheet) = timeFromInventory(inventoryCollationSheet(collationSheet));
timeToCollationSheet 'Снятие остатков закончено' (collationSheet) = timeToInventory(inventoryCollationSheet(collationSheet));
nameHeadManCollationSheet  'Зав. магазином' (collationSheet) = nameHeadManInventory(inventoryCollationSheet(collationSheet));

FORM  collationSheetPrint 'Результирующая ведомость' PRINT

    OBJECTS          cs=collationSheet FIXED PANEL

    PROPERTIES (cs)  SELECTOR nameCollationSheet, nameCompanyCollationSheet, nameStoreCollationSheet, nameCommitteeCollationSheet,
                     nameChairmanCommitteeCollationSheet, namePositionChairmanCollationSheet, nameEmployeeCollationSheet,
                     timeFromCollationSheet, timeToCollationSheet, dateCollationSheet, nameHeadManCollationSheet
    PROPERTIES (cs)  SELECTOR nameTypeOfAdditionCollationSheet, nameDepartmentStoreCollationSheet,
                     quantityPageInventoryDetailCollationSheet, quantityBalanceCollationSheet, quantityShortageCollationSheet,
                     sumPageInventoryDetailCollationSheet, sumBalanceCollationSheet, sumShortageCollationSheet,
                     countListInventoryCollationSheet, countPageInventoryCollationSheet, overDateCollationSheet
    PROPERTIES (cs)  SELECTOR sumSkuBalanceCollationSheet, sumContainerBalanceCollationSheet, sumSkuPageInventoryDetailCollationSheet,
                     sumContainerPageInventoryDetailCollationSheet, sumSkuShortageCollationSheet, sumContainerShortageCollationSheet

;

toPrintCollationSheet 'Резул. в-ть' (collationSheet) =
    ACTION FORM collationSheetPrint OBJECTS cs IMAGE 'print.png' IN printGroup;

FORM  detailCollationSheetPrint 'Сличительная ведомость' PRINT

    OBJECTS          cs=collationSheet FIXED PANEL
    PROPERTIES (cs)  SELECTOR nameCollationSheet, nameCompanyCollationSheet, nameStoreCollationSheet, nameCommitteeCollationSheet,
                     nameChairmanCommitteeCollationSheet, namePositionChairmanCollationSheet, nameEmployeeCollationSheet,
                     nameTypeOfAdditionCollationSheet, nameDepartmentStoreCollationSheet, dateCollationSheet,
                     quantityPageInventoryDetailCollationSheet, quantityBalanceCollationSheet, quantityShortageCollationSheet,
                     sumPageInventoryDetailCollationSheet, sumBalanceCollationSheet, sumShortageCollationSheet,
                     countListInventoryCollationSheet, countPageInventoryCollationSheet, overDateCollationSheet,
                     sumSkuPageInventoryDetailCollationSheet, sumContainerPageInventoryDetailCollationSheet,
                     sumSkuBalanceCollationSheet, sumContainerBalanceCollationSheet,
                     sumSkuShortageCollationSheet, sumContainerShortageCollationSheet

    OBJECTS          i=sku
    PROPERTIES (i)   SELECTOR nameSku, idBarcodeSku

    PROPERTIES(cs, i) SELECTOR quantityPageInventoryDetailCollationSheetSku, quantityBalanceCollationSheetSku, quantityShortageCollationSheetSku
    PROPERTIES       pricePageInventoryDetailCollationSheetSku (cs,i) BACKGROUND differentPriceCollationSheetSku(cs, i),
                     priceBalanceCollationSheetSku(cs, i) BACKGROUND differentPriceCollationSheetSku(cs, i)

    PROPERTIES(cs, i) SELECTOR sumPageInventoryDetailCollationSheetSku, sumBalanceCollationSheetSku, sumShortageCollationSheetSku

    FILTERS         includeCollationSheetSku(cs, i)

    ORDER BY nameSku
;

toPrintDetailCollationSheet 'Слич. в-ть' (collationSheet) =
    ACTION FORM detailCollationSheetPrint OBJECTS cs IMAGE 'print.png' IN printGroup;

FORM inventory 'Инвентаризация'
    OBJECTS          in=inventory FIXED PANEL
    PROPERTIES (in)  nameNumeratorObject, numberObject, seriesObject, setValueNumeratedObject,
                     nameInventory, nameTypeOfAdditionInventory, dateInventory, timeInventory,
                     noteInventory, infoInventory, nameDepartmentInventory, dialogDepartmentByInventory, convertPriceInventory,
                     fillBalanceInventory, timeFromInventory, timeToInventory, nameHeadManInventory,
                     nameCommitteeInventory, nameChairmanCommitteeInventory, nameEmployeeInventory

    TREE treeDepartmentStore ds=departmentStore, li=listInventory, pl=pageInventory
    PROPERTIES       READONLY name(ds),  nameListInventory(li), namePageInventory(pl)

    PROPERTIES(ds, in) READONLY countPageInventoryDetailDepartmentStoreInventory, quantityPageInventoryDetailDepartmentStoreInventory, sumPageInventoryDetailDepartmentStoreInventory

    PROPERTIES(li)   READONLY countPageInventoryDetailListInventory, quantityPageInventoryDetailListInventory, sumPageInventoryDetailListInventory, objectClassName

    PROPERTIES(li)   ADDFORM, editLI = EDITFORM FORCE PANEL SHOWIF isDraftListInventory(li), delete FORCE PANEL SHOWIF isDraftListInventory(li), //delete SHOWIF isDraftListInventory(li),      //FORCE PANEL
                     postListInventory FORCE PANEL SHOWIF isDraftListInventory(li), unpostListInventory FORCE PANEL SHOWIF isPostedListInventory(li)


    PROPERTIES(pl)   READONLY countPageInventoryDetailPageInventory, quantityPageInventoryDetailPageInventory, sumPageInventoryDetailPageInventory, dumb1

    OBJECTS          dp=pageInventoryDetail
    PROPERTIES (dp)  READONLY indexPageInventoryDetail, idBarcodePageInventoryDetail, nameSkuPageInventoryDetail, quantityPageInventoryDetail,
                     pricePageInventoryDetail, sumPageInventoryDetail

    OBJECTS         it=sku
    PROPERTIES (li,it) indexListInventorySku
    PROPERTIES (it)    idBarcodeSku, nameSku
    PROPERTIES (li,it) quantityPageInventoryDetailListInventorySku, pricePageInventoryDetailListInventorySku, sumPageInventoryDetailListInventorySku


    OBJECTS          cs=collationSheet

    PROPERTIES (cs)  READONLY nameCollationSheet
    PROPERTIES (cs)  READONLY nameTypeOfAdditionCollationSheet, nameDepartmentStoreCollationSheet,
                     quantityPageInventoryDetailCollationSheet, quantityBalanceCollationSheet, quantityShortageCollationSheet,
                     sumPageInventoryDetailCollationSheet, sumBalanceCollationSheet, sumShortageCollationSheet,
                     countListInventoryCollationSheet, countPageInventoryCollationSheet
    PROPERTIES (cs)  dialogSkuByCollationSheet, overDateCollationSheet, convertPriceCollationSheet, delete
    PROPERTIES (cs)  FORCE PANEL sumSkuPageInventoryDetailCollationSheet, sumContainerPageInventoryDetailCollationSheet,
                     sumSkuBalanceCollationSheet, sumContainerBalanceCollationSheet,
                     sumSkuShortageCollationSheet, sumContainerShortageCollationSheet



    TREE treeGroup g=skuGroup PARENT parentSkuGroup
    PROPERTIES READONLY name(g)
    ORDER BY name

    OBJECTS          i=sku
    PROPERTIES (i)   READONLY nameSku, idBarcodeSku

    PROPERTIES(cs, i) quantityPageInventoryDetailCollationSheetSku, quantityBalanceCollationSheetSku, quantityShortageCollationSheetSku
    PROPERTIES       pricePageInventoryDetailCollationSheetSku (cs,i) BACKGROUND differentPriceCollationSheetSku(cs, i),
                     priceBalanceCollationSheetSku(cs, i) BACKGROUND differentPriceCollationSheetSku(cs, i)

    PROPERTIES(cs, i) sumPageInventoryDetailCollationSheetSku, sumBalanceCollationSheetSku, sumShortageCollationSheetSku

    FILTERS inInventoryDepartmentStoreListInventoryPageInventoryPageInventoryDetail(in, ds, li, pl, dp),
            inventoryListInventory(li) == in,
            departmentStoreListInventory(li) == ds,
            listInventoryPageInventory(pl) == li,
            includeDepartmentStoreInventory(ds, in),
            inventoryCollationSheet(cs) == in,
            includeCollationSheetSku(cs, i),
            isParentSkuGroupSku(g, i),
            quantityPageInventoryDetailListInventorySku(li,it)>0

    ORDER BY nameSku

    FILTERGROUP notEqualsPriceFilters
            FILTER 'Показать товар с разными ценами' 'F10' differentPriceCollationSheetSku(cs, i)

    EDIT inventory OBJECT in
;

DESIGN inventory FROM DEFAULT {
    main{
        NEW header.box BEFORE in.box {
            childConstraints = TO THE BOTTOM;

            ADD in.documentHeaderGroup {
                childConstraints = TO THE RIGHT;
                ADD PROPERTY(nameDepartmentInventory);
                ADD PROPERTY(nameNumeratorObject);
                ADD PROPERTY(numberObject);
                ADD PROPERTY(seriesObject);
                ADD PROPERTY(dateInventory);
                ADD PROPERTY(timeInventory);
            }

            NEW headerRow2 {
                childConstraints = TO THE RIGHT;
                ADD in.documentPrmGroup {
                    childConstraints = TO THE BOTTOM;
                    NEW headerRow2Col1Row1 {
                        childConstraints = TO THE RIGHT;
                        ADD PROPERTY(nameTypeOfAdditionInventory);
                        ADD PROPERTY(nameInventory);
                    }
                    NEW headerRow2Col1Row2 {
                        childConstraints = TO THE RIGHT;
                        ADD PROPERTY(noteInventory);
                        ADD PROPERTY(infoInventory);
                    }
                    NEW headerRow2Col1Row3 {
                        ADD in.inventoryCommitteeGroup {
                            childConstraints = TO THE RIGHT;
                        }
                    }

                    NEW headerRow2Col1Row4 {
                        childConstraints = TO THE RIGHT;

                        NEW headerRow2Col1Row41 {
                            title = 'Снятие остатков';
                            childConstraints = TO THE RIGHT;
                            ADD PROPERTY(timeFromInventory);
                            ADD PROPERTY(timeToInventory);
                        }
                        NEW headerRow2Col1Row42 {
                            title = 'Руководство';
                            ADD PROPERTY(nameHeadManInventory);
                        }
                    }
                }
                NEW actionContainer {
                    title = 'Действия';
                    childConstraints = TO THE BOTTOM;
                    ADD PROPERTY(fillBalanceInventory);
                    ADD PROPERTY(convertPriceInventory);
                }
            }
        }

        NEW secondCase BEFORE functions.box {
            type = TABBED;
            NEW z.box { title = 'Описи';
                fillVertical = 5;
                childConstraints = TO THE RIGHT;
                ADD treeDepartmentStore.tree.box {
                    fillHorizontal = 2;

                    PROPERTY(objectClassName) {
                            preferredCharWidth = 15;
                    }
                    PROPERTY (dumb1) {
                        caption = 'Статус';
                        minimumCharWidth = 15;
                    }
                    PROPERTY (postListInventory) {
                        caption = 'Закрыть';
                    }
                    PROPERTY (unpostListInventory) {
                        caption = 'Открыть';
                    }
                    PROPERTY (editLI) {
                        caption = 'Редактировать';
                    }
                    PROPERTY (delete(li)) {
                        caption = 'Удалить';
                        panelLocation = TOOLBAR;
                        askConfirm = TRUE;
                    }
                }
                NEW case1  {
                    type = TABBED;
                    fillHorizontal = 3;
                    ADD dp.box;
                    ADD it.box {
                        title = 'Опись-товар';
                    }
                }
            }

            NEW x.box { title = 'Сличительные ведомости';
                fillVertical = 5;
                NEW pop1 {
                    childConstraints = TO THE RIGHT;
                    ADD cs.grid.box  {
                        fillVertical = 1;
                        fillHorizontal = 4;
                    }
                    ADD cs.panel {
                        title = 'Суммы товар/тара';
                        childConstraints = TO THE BOTTOM;
                        fillHorizontal = 1;
                    }
                }
                NEW firstCase { title = 'Пересчитанный товар';
                    fillVertical = 4;
                    ADD treeGroup.tree.box { title = 'Товарные группы';};
                    ADD i.box;
                    POSITION treeGroup.tree.box TO THE LEFT i.box;
                        treeGroup.tree.box{ fillHorizontal = 1.5;}
                        i.box{ fillHorizontal = 3.5;}

                ADD PROPERTY(dialogSkuByCollationSheet(cs)) IN i.panel;
                }
            }

        }
    }
}

FORM inventories 'Инвентаризации'
    OBJECTS in=inventory
    PROPERTIES(in) READONLY objectClassName, numberObject, seriesObject, dateInventory, timeInventory,
                            nameDepartmentInventory, nameInventory, noteInventory

    PROPERTIES(in) FORCE PANEL nameUserCreated, timeCreated, hostnameComputerCreated, nameUserClosed, timeClosed, hostnameComputerClosed

    PROPERTIES(in)  ADDFORM, EDITFORM SHOWIF isDraftInventory(in), delete FORCE PANEL SHOWIF isDraftInventory(in),
                    postInventory SHOWIF isDraftInventory(in), unpostInventory SHOWIF isPostedInventory(in)//(in) ADDFORM, EDITFORM, delete

    OBJECTS il=inventoryDetail
    PROPERTIES(il) READONLY nameDepartmentStoreInventoryDetail, idBarcodeInventoryDetail, nameSkuInventoryDetail, quantityInventoryDetail, sumInventoryDetail

    OBJECTS li=listInventory

    PROPERTIES(li) READONLY nameListInventory, nameDepartmentStoreListInventory, countIndexListInventory,
                   quantityPageInventoryDetailListInventory, sumPageInventoryDetailListInventory

    OBJECTS         i=sku
    PROPERTIES (li,i) indexListInventorySku
    PROPERTIES (i)    idBarcodeSku, nameSku
    PROPERTIES (li,i) quantityPageInventoryDetailListInventorySku, pricePageInventoryDetailListInventorySku, sumPageInventoryDetailListInventorySku

    PROPERTIES(li)  toPrintListInventory

    OBJECTS          cs=collationSheet

    PROPERTIES (cs)  READONLY nameCollationSheet, nameTypeOfAdditionCollationSheet, nameDepartmentStoreCollationSheet,
                     quantityPageInventoryDetailCollationSheet, quantityBalanceCollationSheet, quantityShortageCollationSheet,
                     sumPageInventoryDetailCollationSheet, sumBalanceCollationSheet, sumShortageCollationSheet

    PROPERTIES (cs)  FORCE PANEL sumSkuPageInventoryDetailCollationSheet, sumContainerPageInventoryDetailCollationSheet,
                     sumSkuBalanceCollationSheet, sumContainerBalanceCollationSheet,
                     sumSkuShortageCollationSheet, sumContainerShortageCollationSheet

    OBJECTS          it=sku
    PROPERTIES (it)   READONLY nASku=nameSku, idBarcodeSku

    PROPERTIES(cs, it) READONLY quantityPageInventoryDetailCollationSheetSku, quantityBalanceCollationSheetSku, quantityShortageCollationSheetSku
    PROPERTIES       pricePageInventoryDetailCollationSheetSku (cs,it) BACKGROUND differentPriceCollationSheetSku(cs, it),
                     priceBalanceCollationSheetSku(cs, it) BACKGROUND differentPriceCollationSheetSku(cs, it)

    PROPERTIES(cs, it) READONLY sumPageInventoryDetailCollationSheetSku, sumBalanceCollationSheetSku, sumShortageCollationSheetSku
    PROPERTIES(cs)  toPrintCollationSheet, toPrintDetailCollationSheet

    FILTERS         inventoryInventoryDetail(il)==in,
                    inventoryListInventory(li)==in,
                    quantityPageInventoryDetailListInventorySku(li,i)>0,
                    inventoryCollationSheet(cs) == in,
                    includeCollationSheetSku(cs, it),
                    includeSkuInventoryDetail(il)

    ORDER BY        nameDepartmentStoreInventoryDetail, nameSkuInventoryDetail, nameDepartmentStoreListInventory,
                    nameDepartmentStoreCollationSheet, indexListInventorySku, nASku
;

DESIGN inventories FROM DEFAULT {
    main {
        childConstraints = TO THE BOTTOM;

        NEW topContainer{

            type = SPLITV;

            ADD in.box {
                fillVertical = 1;
                PROPERTY(objectClassName) {
                    preferredCharWidth = 25;
                }
                PROPERTY (delete(in)) {
                    panelLocation = TOOLBAR;
                    askConfirm = TRUE;
                }
            }

            NEW wor {
                fillVertical = 2;
                type = TABBED;

                NEW wor1 {
                    title = 'Товары';
                    ADD il.box {
                        title = 'Товары с недостачей (излишком)';
                    }
                }

                NEW wor2 {
                    title = 'Описи';
                    childConstraints = TO THE RIGHT;
                    ADD li.box;
                    ADD i.box;
                }

                NEW wor3 {
                    title = 'Ведомости';
                    childConstraints = TO THE RIGHT;
                    ADD cs.box;
                    ADD it.box;
                }
            }
        }
        NEW row {
            childConstraints = TO THE RIGHT;

            ADD in.historyGroup {
                childConstraints = TO THE BOTTOM;
                fillHorizontal = 1;
            }
            ADD in.postedGroup {
                childConstraints = TO THE BOTTOM;
                fillHorizontal = 1;
            }
        }
        ADD functions.box;
    }
}
