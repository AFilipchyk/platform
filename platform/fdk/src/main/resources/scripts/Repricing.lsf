MODULE Repricing;

REQUIRE Employee, Store, Pricing;


// ----------------------------------- Комиссия ------------------------------------------ //

CLASS repricingCommittee 'Комиссия переоценки' : committee;

// ----------------------------------- Комиссия по умолчанию для отдела ------------------------------------------ //

repricingCommitteeDepartmentStore = DATA repricingCommittee (departmentStore);
nameRepricingCommitteeDepartmentStore 'Комиссия переоценки' (departmentStore) = name(repricingCommitteeDepartmentStore(departmentStore));
isDefaultRepricingCommitteeDepartmentStore 'По умолчанию' (repricingCommittee, departmentStore) = repricingCommitteeDepartmentStore(departmentStore) == repricingCommittee;
CONSTRAINT repricingCommitteeDepartmentStore(departmentStore) AND NOT inCommitteeEmployeeDivision(repricingCommitteeDepartmentStore(departmentStore), departmentStore)
    CHECKED BY repricingCommitteeDepartmentStore MESSAGE 'Для отдела выбрана комиссия, которая для него не действует';

EXTEND FORM departmentStore PROPERTIES nameRepricingCommitteeDepartmentStore(d);

// ----------------------------------- Формы для комиссий переоценки ------------------------------------------ //

FORM repricingCommittee 'Комиссия переоценки'
    OBJECTS c=repricingCommittee FIXED PANEL
    PROPERTIES(c)      name, nameChairmanCommittee

    TREE treeStore a=STRING[3], t=chainStores, st=storeType, s=store
    PROPERTIES         READONLY OBJVALUE(a), name(t), name(st), name(s)
    FILTERS            stringEqualsAll(a), inChainStoresStoreType (t, st), inStoreTypeStore(st, s)

    OBJECTS dep=departmentStore
    PROPERTIES(dep)    READONLY depName = name
    PROPERTIES(c, dep) inCommitteeEmployeeDivision, isDefaultRepricingCommitteeDepartmentStore
    FILTERS            inChainStoresStoreTypeStoreDepartment(t, st, s, dep)
    ORDER BY depName

    OBJECTS e=employee
    PROPERTIES(e)      READONLY name, userFirstName, userLastName, namePositionEmployee
    PROPERTIES(e)      ADDSESSIONFORM, EDITSESSIONFORM, delete

    PROPERTIES(c, e)   inCommitteeEmployee
    FILTERS            countDivisionEmployeeCommittee (e, c)
    FILTERGROUP filters6
        FILTER 'Показывать только членов комиссии' 'F10' inCommitteeEmployee(c, e)

    FILTERGROUP filters5
        FILTER 'Показывать отделы только для данной комиссии' 'F9' inCommitteeEmployeeDivision(c, dep)

    EDIT repricingCommittee OBJECT c
;

DESIGN repricingCommittee FROM DEFAULT {
    main {
        preferredSize = (1024, 768);

        NEW OneCase BEFORE e.box {
            ADD PROPERTY (nameChairmanCommittee);
        }

        NEW caseOne BEFORE OneCase {
            childConstraints = TO THE RIGHT;
            title = 'Отделы, для которых действуют комиссии';

            ADD treeStore.tree {
                fillHorizontal = 1;
            }

            ADD dep.box {
                fillHorizontal = 2;
            }
        };
    }
}

FORM repricingCommitteeDialog 'Комиссии переоценки'
    OBJECTS rc=repricingCommittee
    PROPERTIES(rc)      READONLY name, nameEmployeeDivisionCommittee, nameEmployeeCommittee, nameChairmanCommittee
    PROPERTIES(rc)      ADDFORM, EDITFORM

    DIALOG repricingCommittee OBJECT rc
;

// ----------------------------------- Макрос для задания комиссии для документов ------------------------------------------ //


META defineDocumentHeaderRepricingCommittee(object, stockProp)
    numberDisposal###object '№ распоряжения на переоценку' (object) = DATA STRING[30] (object) IN documentPrmGroup;

    repricingCommittee###object (object) = DATA repricingCommittee(object) IN idGroup;
    nameRepricingCommittee###object 'Комиссия переоценки' (object) = commonName(repricingCommittee###object(object)) IN documentPrmGroup MINCHARWIDTH 20 PREFCHARWIDTH 40;
    repricingCommittee###object (object) <- repricingCommitteeDepartmentStore(stockProp###object(object))
        WHEN ASSIGNED(object IS object);

    inCommittee###object##Employee (object, employee) = inCommitteeEmployee(repricingCommittee###object (object), employee);
    commonNameEmployeeCommittee###object 'Сотрудники комиссии' (object) = namePositionEmployeeCommittee(repricingCommittee###object (object));
    commonNameChairman###object 'Председатель комиссии' (object) = nameChairmanCommittee(repricingCommittee###object (object));
    namePositionChairman###object 'Должность' (object) = namePositionChairmanCommittee(repricingCommittee###object (object));


END
META defineDocumentHeaderAbstractRepricingCommittee(object)
    numberDisposal###object '№ распоряжения на переоценку' (object) = ABSTRACT STRING[30] (object) PERSISTENT IN documentPrmGroup;
    repricingCommittee###object (object) = ABSTRACT repricingCommittee(object) PERSISTENT IN idGroup;
    nameRepricingCommittee###object 'Комиссия переоценки' (object) = commonName(repricingCommittee###object(object)) IN documentPrmGroup MINCHARWIDTH 20 PREFCHARWIDTH 40;

    inCommittee###object##Employee (object, employee) = inCommitteeEmployee(repricingCommittee###object (object), employee);
    commonNameEmployeeCommittee###object 'Сотрудники комиссии' (object) = namePositionEmployeeCommittee(repricingCommittee###object (object));
    commonNameChairman###object 'Председатель комиссии' (object) = nameChairmanCommittee(repricingCommittee###object (object));
    namePositionChairman###object 'Должность' (object) = namePositionChairmanCommittee(repricingCommittee###object (object));
END

META defineDocumentInterfaceHeaderRepricingCommittee (object, stockProp)
    @defineDocumentHeaderAbstractRepricingCommittee (object);
    @defineDocumentHeaderRepricingCommittee (user###object, stockProp);
    repricingCommittee###object (object) += repricingCommittee###user###object(object);
    numberDisposal###object (object) += numberDisposal###user###object(object);
END

//----------------------------------------------- Переоценка ---------------------------------------------------//

CLASS ABSTRACT repricing 'Акт переоценки';
CLASS ABSTRACT repricingDetail 'Строка акта переоценки';

CLASS userRepricing 'Акт переоценки (польз.)' : repricing, historyObject, numeratedDocument;
CLASS userRepricingDetail 'Строка акта переоценки (польз.)' : repricingDetail;
CLASS userRepricingPosted 'Закрытый акт переоценки (польз.)' : userRepricing, postedObject;

@defineDocumentInterface(repricing);

@defineDocumentInterfaceNumber(repricing);

@defineDocumentInterfaceDataStock(repricing, departmentStore, 'Склад');
@defineDocumentInterfacePosted(repricing);

@defineDocumentInterfaceDescription(repricing, 'Акт переоценки');

@defineDocumentInterfaceCurrency(repricing);
@deriveDocumentCurrency(userRepricing, departmentStore);

@defineDocumentInterfaceDetailSku(repricing, sku);

@defineDocumentInterfaceDetailQuantity(repricing);

@defineDocumentInterfaceDetailPricePrefix(repricing, cur, ' поставщика до');
@defineDocumentInterfaceDetailDataSumPrefix (repricing, cur, ' поставщика до');
@deriveDocumentDetailSumPrefix(userRepricing, cur, currency, quantity);

@defineDocumentInterfaceDetailPricePrefix(repricing, , ' поставщика после');
@defineDocumentInterfaceDetailDataSumPrefix (repricing, , ' поставщика после');
@deriveDocumentDetailSumPrefix(userRepricing, , currency, quantity);

@defineDocumentInterfaceDetailPricePrefix(repricing, curRetail, ' розничная до');
@defineDocumentInterfaceDetailDataSumPrefix (repricing, curRetail, ' розничная до');
@deriveDocumentDetailSumPrefix(userRepricing, curRetail, currency, quantity);

@defineDocumentInterfaceDetailPricePrefix(repricing, retail, ' розничная после');
@defineDocumentInterfaceDetailDataSumPrefix (repricing, retail, ' розничная после');
@deriveDocumentDetailSumPrefix(userRepricing, retail, currency, quantity);

@defineDocumentInterfaceHeaderQuantity(repricing);
@defineDocumentHeaderSkuQuantity(repricing, sku);
@defineDocumentHeaderSkuQuantity(userRepricing, sku);

@defineDocumentInterfaceDetailVATPrefix(repricing, cur, countryDepartmentStore, ' до');
@deriveDocumentDetailValueVATPrefix(userRepricing, cur);

@defineDocumentInterfaceDetailVATPrefix(repricing, , countryDepartmentStore, ' после');
@deriveDocumentDetailValueVATPrefix(userRepricing, );

@defineDocumentInterfaceDetailMarkupPrefix (repricing, cur, ' до');
curMarkupUserRepricingDetail(userRepricingDetail)  <- [round2((((X - X*Y/(100+Y))/Z)-1)*100)](
    0.0 IF userRepricingDetail IS userRepricingDetail OR curRetailPriceUserRepricingDetail(userRepricingDetail),
    0.0 IF userRepricingDetail IS userRepricingDetail OR valueCurVATUserRepricingDetail(userRepricingDetail),
    curPriceUserRepricingDetail(userRepricingDetail))
    WHEN CHANGED(curRetailPriceUserRepricingDetail(userRepricingDetail)) OR CHANGED (curVATUserRepricingDetail(userRepricingDetail)) OR CHANGED(curPriceUserRepricingDetail(userRepricingDetail));
@defineDocumentInterfaceDetailMarkupPrefix (repricing, , ' после');
markupUserRepricingDetail(userRepricingDetail)  <- [round2((((X - X*Y/(100+Y))/Z)-1)*100)](
    0.0 IF userRepricingDetail IS userRepricingDetail OR retailPriceUserRepricingDetail(userRepricingDetail),
    0.0 IF userRepricingDetail IS userRepricingDetail OR valueVATUserRepricingDetail(userRepricingDetail),
    priceUserRepricingDetail(userRepricingDetail))
    WHEN CHANGED(curRetailPriceUserRepricingDetail(userRepricingDetail)) OR CHANGED (curVATUserRepricingDetail(userRepricingDetail)) OR CHANGED(curPriceUserRepricingDetail(userRepricingDetail));

@defineDocumentInterfaceDetailVATDataSumPrefix (repricing, cur, ' до');
@deriveDocumentDetailReverseVATSumPrefix(userRepricing, cur, curRetail);

@defineDocumentInterfaceDetailVATDataSumPrefix (repricing, , ' после');
@deriveDocumentDetailReverseVATSumPrefix(userRepricing, , retail);

@defineDocumentInterfaceDetailMarkupSumPrefix (repricing, cur, ' до');
@deriveDocumentDetailMarkupSumPrefix(userRepricing, cur, curRetail, cur);

@defineDocumentInterfaceDetailMarkupSumPrefix (repricing, , ' после');
@deriveDocumentDetailMarkupSumPrefix(userRepricing, , retail, );

@defineDocumentInterfaceDetailDiffSumPrefix (repricing, sum, , cur, ' изменения поставщика ');
@defineDocumentInterfaceDetailDiffSumPrefix (repricing, markupSum, , cur, ' изменения надбавки');
@defineDocumentInterfaceDetailDiffSumPrefix (repricing, VATSum, , cur, ' изменения НДС');
@defineDocumentInterfaceDetailDiffSumPrefix (repricing, retailSum, , cur, ' изменения розничной');

@defineDocumentInterfaceHeaderSumPrefix (repricing, cur, ' поставщика  до');
@defineDocumentInterfaceHeaderSumPrefix (repricing, curMarkup, ' надбавки до');
@defineDocumentInterfaceHeaderSumPrefix (repricing, curVAT, ' НДС до');
@defineDocumentInterfaceHeaderSumPrefix (repricing, curRetail, ' розничная до');

@defineDocumentInterfaceHeaderSumPrefix (repricing, , ' поставщика после');
@defineDocumentInterfaceHeaderSumPrefix (repricing, markup, ' надбавки после');
@defineDocumentInterfaceHeaderSumPrefix (repricing, VAT, ' НДС после');
@defineDocumentInterfaceHeaderSumPrefix (repricing, retail, ' розничная после');

@defineDocumentInterfaceHeaderSumPrefix (repricing, diff, ' изменения поставщика');
@defineDocumentInterfaceHeaderSumPrefix (repricing, diffMarkup, ' изменения надбавки');
@defineDocumentInterfaceHeaderSumPrefix (repricing, diffVAT, ' изменения НДС');
@defineDocumentInterfaceHeaderSumPrefix (repricing, diffRetail, ' изменения розничной');

@defineAddDetailDialogSkuStock(userRepricing, sku, departmentStore, dialogSku);
@defineAddDetailDialogBarcode(userRepricing, sku);
@defineAddDetailDialogTerminal(userRepricing, sku);
@defineDocumentInterfaceHeaderRepricingCommittee (repricing, departmentStore);

@derivePriceLedgerOnSkuChangePrefix(supplierPrice, userRepricing, curPrice, sku, departmentStore);
@derivePriceLedgerOnSkuChangePrefix(retailVAT, userRepricing, curVAT, sku, departmentStore);
@deriveDocumentDetailValueVATPrefix(userRepricing, cur);
@derivePriceLedgerOnSkuChangePrefix(retailPrice, userRepricing, curRetailPrice, sku, departmentStore);


//------------------------------------ Печатные формы акт расценки ------------------------------------------------ //
nameStoreRepricing 'Магазин' (repricing) = nameStoreDepartmentStore(departmentStoreRepricing(repricing));

FORM repricing 'Акт переоценки (печать)' PRINT

    OBJECTS p = repricing FIXED PANEL
    PROPERTIES (p)  SELECTOR objectClassName

    PROPERTIES (p) numberRepricing, seriesRepricing, dateRepricing, timeRepricing, nameStoreRepricing,
               nameDepartmentStoreRepricing, countRepricingDetailRepricing, quantityRepricingDetailRepricing, nameCompanyRepricing,
               curSumRepricingDetailRepricing, curMarkupSumRepricingDetailRepricing, curVATSumRepricingDetailRepricing,
               curRetailSumRepricingDetailRepricing,
               sumRepricingDetailRepricing, markupSumRepricingDetailRepricing, VATSumRepricingDetailRepricing,
               retailSumRepricingDetailRepricing,
               diffSumRepricingDetailRepricing, diffMarkupSumRepricingDetailRepricing, diffVATSumRepricingDetailRepricing,
               diffRetailSumRepricingDetailRepricing,
               noteRepricing, numberDisposalRepricing, repricingCommitteeRepricing, nameRepricingCommitteeRepricing,
               commonNameChairmanRepricing, namePositionChairmanRepricing, commonNameEmployeeCommitteeRepricing


    OBJECTS d = repricingDetail
    PROPERTIES (d)  indexRepricingDetail, idBarcodeSkuRepricingDetail, nameSkuRepricingDetail, shortNameUOMSkuRepricingDetail, quantityRepricingDetail,
               curPriceRepricingDetail, curSumRepricingDetail,
               curMarkupRepricingDetail, curMarkupSumRepricingDetail,
               numberCurVATRepricingDetail, valueCurVATRepricingDetail, curVATSumRepricingDetail,
               curRetailPriceRepricingDetail, curRetailSumRepricingDetail,
               priceRepricingDetail, sumRepricingDetail,
               markupRepricingDetail, markupSumRepricingDetail,
               numberVATRepricingDetail, valueVATRepricingDetail, VATSumRepricingDetail,
               retailPriceRepricingDetail, retailSumRepricingDetail,
               diffSumRepricingDetail, diffMarkupSumRepricingDetail, diffVATSumRepricingDetail,
               diffRetailSumRepricingDetail

    OBJECTS e=employee
    PROPERTIES(e) READONLY   commonName, namePositionEmployee

    FILTERS    repricingRepricingDetail(d) == p,
               inCommitteeRepricingEmployee(p, e)

;

printRepricing 'Акт переоценки' (repricing) = ACTION FORM repricing OBJECTS p IMAGE 'print.png' IN printGroup;

// --------------------------- Формы --------------------------------- //
    
FORM userRepricing 'Акт переоценки'
    OBJECTS p=userRepricing FIXED PANEL
    PROPERTIES (p) objectClassName, nameNumeratorObject, numberObject, seriesObject,
                   dateUserRepricing, timeUserRepricing, nameDepartmentStoreUserRepricing,
                   diffSumUserRepricingDetailUserRepricing, diffMarkupSumUserRepricingDetailUserRepricing, diffVATSumUserRepricingDetailUserRepricing,
                   diffRetailSumUserRepricingDetailUserRepricing,
                   noteUserRepricing, numberDisposalUserRepricing, nameRepricingCommitteeUserRepricing

    OBJECTS d=userRepricingDetail
    PROPERTIES (d) indexUserRepricingDetail, idBarcodeSkuUserRepricingDetail, nameSkuUserRepricingDetail, shortNameUOMSkuUserRepricingDetail, quantityUserRepricingDetail,

                   curPriceUserRepricingDetail, curSumUserRepricingDetail,                    
                   curMarkupUserRepricingDetail, curMarkupSumUserRepricingDetail,
                   numberCurVATUserRepricingDetail, valueCurVATUserRepricingDetail, curVATSumUserRepricingDetail,
                   curRetailPriceUserRepricingDetail, curRetailSumUserRepricingDetail,
                   
                   priceUserRepricingDetail, sumUserRepricingDetail,                    
                   markupUserRepricingDetail, markupSumUserRepricingDetail,
                   numberVATUserRepricingDetail, valueVATUserRepricingDetail, VATSumUserRepricingDetail,
                   retailPriceUserRepricingDetail, retailSumUserRepricingDetail, ADDOBJ, delete         

//    PROPERTIES dialogAddPercMarkupUserRepricing(p) TODRAW d SHOWIF toShowMarkupUserRepricing(p),
//               dialogAddPercDiscountUserRepricing(p) TODRAW d SHOWIF toShowDiscountUserRepricing(p)

    PROPERTIES(p) TODRAW d addDetailDialogSkuStockUserRepricingDetailUserRepricing, addDetailDialogTerminalUserRepricingDetailUserRepricing,
                           addDetailInputBarcodeUserRepricingDetailUserRepricing, deleteUserRepricingDetailUserRepricing

    FILTERS userRepricingUserRepricingDetail(d)==p

    EVENTS
        ON OK EXEC prePostUserRepricing(p)

    EDIT userRepricing OBJECT p
;

DESIGN userRepricing FROM DEFAULT {
    main {
        preferredSize = (1024, 768);

        NEW header.box BEFORE d.box {
            childConstraints = TO THE RIGHT;

            NEW headerCol1 {
                childConstraints = TO THE BOTTOM;
                ADD p.documentHeaderGroup {
                    childConstraints = TO THE RIGHT;
                    ADD PROPERTY(objectClassName);
                    ADD PROPERTY(nameDepartmentStoreUserRepricing);
                    ADD PROPERTY(nameNumeratorObject);
                    ADD PROPERTY(numberObject);
                    ADD PROPERTY(seriesObject);
                    ADD PROPERTY(dateUserRepricing);
                    ADD PROPERTY(timeUserRepricing);
                }
                ADD p.documentPrmGroup {
                    childConstraints = TO THE RIGHT;
                }
            }

            ADD p.documentSumGroup {
                childConstraints = TO THE BOTTOM;
            }
        }

        PROPERTY(priceUserRepricingDetail) { background = #FFFFCC; }
        PROPERTY(sumUserRepricingDetail) { background = #FFFFCC; }
        PROPERTY(markupUserRepricingDetail) { background = #FFFFCC; }
        PROPERTY(markupSumUserRepricingDetail) { background = #FFFFCC; }
        PROPERTY(numberVATUserRepricingDetail) { background = #FFFFCC; }
        PROPERTY(valueVATUserRepricingDetail) { background = #FFFFCC; }
        PROPERTY(VATSumUserRepricingDetail) { background = #FFFFCC; }
        PROPERTY(retailPriceUserRepricingDetail) { background = #FFFFCC; }
        PROPERTY(retailSumUserRepricingDetail) { background = #FFFFCC; }

        PROPERTY(formOkAction) {
            caption = 'Провести';
        }
    }
}

addUserRepricing 'Добавить' = ACTION ADDFORM userRepricing;
editUserRepricing 'Редактировать' (userRepricing) = ACTION EDITFORM userRepricing;

FORM repricings 'Акты переоценки' TITLE 'Акты переоценки'
    OBJECTS p = repricing
    PROPERTIES (p) READONLY isPostedRepricing FORCE GRID, objectClassName, numberRepricing, seriesRepricing, dateRepricing, timeRepricing,
               nameDepartmentStoreRepricing, countRepricingDetailRepricing,
               diffSumRepricingDetailRepricing, diffMarkupSumRepricingDetailRepricing, diffVATSumRepricingDetailRepricing,
               diffRetailSumRepricingDetailRepricing,
               noteRepricing, numberDisposalRepricing, nameRepricingCommitteeRepricing

    PROPERTIES (p) READONLY FORCE PANEL nameUserCreated, timeCreated, hostnameComputerCreated, nameUserClosed, timeClosed, hostnameComputerClosed

    PROPERTIES ()  addUserRepricing TODRAW p
    PROPERTIES (p) editUserRepricing
    PROPERTIES (p) delete FORCE PANEL DRAWTOTOOLBAR SHOWIF isUserRepricing(p)
    PROPERTIES (p) printRepricing FORCE PANEL

    OBJECTS d = repricingDetail
    PROPERTIES (d) READONLY indexRepricingDetail, idBarcodeSkuRepricingDetail, nameSkuRepricingDetail, shortNameUOMSkuRepricingDetail, quantityRepricingDetail,

               curPriceRepricingDetail, curSumRepricingDetail,
               curMarkupRepricingDetail, curMarkupSumRepricingDetail,
               numberCurVATRepricingDetail, valueCurVATRepricingDetail, curVATSumRepricingDetail,
               curRetailPriceRepricingDetail, curRetailSumRepricingDetail,

               priceRepricingDetail, sumRepricingDetail,
               markupRepricingDetail, markupSumRepricingDetail,
               numberVATRepricingDetail, valueVATRepricingDetail, VATSumRepricingDetail,
               retailPriceRepricingDetail, retailSumRepricingDetail

    FILTERS repricingRepricingDetail(d) == p

    DIALOG repricing OBJECT p
;
DESIGN repricings FROM DEFAULT {
    PROPERTY (delete(p)) {
        askConfirm = TRUE;
    }

    NEW documentContainer BEFORE functions.box {
        type = SPLITV;
        childConstraints = TO THE BOTTOM;

        ADD p.box;

        NEW documentDetail {
            type = TABBED;

            ADD d.box {
                title = 'Спецификация';
            }
            NEW documentHistory {
                title = 'История';

                ADD p.historyGroup;
                ADD p.postedGroup;
            }
            NEW printTab {
                title = 'Печатные формы';
                NEW printContainer {
                    title = 'Печать';
                    childConstraints = TO THE BOTTOM;
                    fillVertical = 1.0; // todo : иначе кнопка не всегда показывается, нужно будет пофиксить как-нибудь
                        ADD p.printGroup;
                }
            }
        }
    }
}

// ------------------------------------- Проведение по регистру ------------------------------ //

@implementSkuDepartmentStoreLedgerCustom(supplierPrice, repricing, sku, departmentStore, price);
@implementSkuDepartmentStoreLedgerCustom(retailVAT, repricing, sku, departmentStore, VAT);
@implementSkuDepartmentStoreLedger(retailPrice, repricing, sku, departmentStore);

// ------------------------------------- Автоматическое создание дооценки для документа -------------------- //

META defineRepricing(sign)
//-- аггр.объект

    createRepricingInvoice 'Создавать акт дооценки' = ABSTRACT BOOLEAN (invoice) PERSISTENT IN documentPrmGroup;
    createRepricingUserInvoice 'Создавать акт дооценки' = DATA BOOLEAN (userInvoice) IN documentPrmGroup;
    createRepricingInvoice (invoice) += createRepricingUserInvoice(invoice);

    @defineDocumentInterfaceDetailSkuBalance (invoice);
    @deriveDocumentDetailSkuBalance (userInvoice, sku, stock);
// До
    @defineDocumentInterfaceDetailPricePrefix(invoice, cur, ' поставщика до');
    @defineDocumentInterfaceDetailDataSumPrefix (invoice, cur, ' поставщика до');
    @deriveDocumentDetailSumPrefix(userInvoice, cur, currency, balanceBSku);

    @defineDocumentInterfaceDetailPricePrefix(invoice, curRetail, ' розничная до');
    @defineDocumentInterfaceDetailDataSumPrefix (invoice, curRetail, ' розничная до');
    @deriveDocumentDetailSumPrefix(userInvoice, curRetail, currency, balanceBSku);

    @defineDocumentInterfaceDetailVATPrefix(invoice, cur, countryStock, ' до');
    @deriveDocumentDetailValueVATPrefix(userInvoice, cur);

    @defineDocumentInterfaceDetailMarkupPrefix (invoice, cur, ' до');
    curMarkupUserInvoiceDetail(userInvoiceDetail)  <- [round2((((X - X*Y/(100+Y))/Z)-1)*100)](
        0.0 IF userInvoiceDetail IS userInvoiceDetail OR curRetailPriceUserInvoiceDetail(userInvoiceDetail),
        0.0 IF userInvoiceDetail IS userInvoiceDetail OR valueCurVATUserInvoiceDetail(userInvoiceDetail),
        curPriceUserInvoiceDetail(userInvoiceDetail))
        WHEN CHANGED(curRetailPriceUserInvoiceDetail(userInvoiceDetail)) OR CHANGED (curVATUserInvoiceDetail(userInvoiceDetail)) OR CHANGED(curPriceUserInvoiceDetail(userInvoiceDetail));

    @defineDocumentInterfaceDetailVATDataSumPrefix (invoice, cur, ' до');
    @deriveDocumentDetailReverseVATSumPrefix(userInvoice, cur, curRetail);
    @defineDocumentInterfaceDetailMarkupSumPrefix (invoice, cur, ' до');
    @deriveDocumentDetailMarkupSumPrefix(userInvoice, cur, curRetail, cur);

    @derivePriceLedgerOnSkuChangePrefix(supplierPrice, userInvoice, curPrice, sku, stock);
    @derivePriceLedgerOnSkuChangePrefix(retailVAT, userInvoice, curVAT, sku, stock);
    @deriveDocumentDetailValueVATPrefix(userInvoice, cur);
    @derivePriceLedgerOnSkuChangePrefix(retailPrice, userInvoice, curRetailPrice, sku, stock);

// После
    @defineDocumentInterfaceDetailDataSumPrefix (invoice, after, ' поставщика после');
    afterSumUserInvoiceDetail (detail)  <- roundCurrency(balanceBSkuUserInvoiceDetail(detail) * priceUserInvoiceDetail(detail), currencyUserInvoiceDetail(detail))
                        WHEN CHANGED(balanceBSkuUserInvoiceDetail(detail)) OR CHANGED (priceUserInvoiceDetail(detail)) OR CHANGED(currencyUserInvoiceDetail(detail));
    @defineDocumentInterfaceDetailDataSumPrefix (invoice, afterRetail, ' розничная после');
    afterRetailSumUserInvoiceDetail (detail)  <- roundCurrency(balanceBSkuUserInvoiceDetail(detail) * retailPriceUserInvoiceDetail(detail), currencyUserInvoiceDetail(detail))
                        WHEN CHANGED(balanceBSkuUserInvoiceDetail(detail)) OR CHANGED (retailPriceUserInvoiceDetail(detail)) OR CHANGED(currencyUserInvoiceDetail(detail));

    @defineDocumentInterfaceDetailVATDataSumPrefix (invoice, afterRetail, ' после');

    afterRetailVATSumUserInvoiceDetail (detail)  <- roundCurrency([X*Y/(100+Y)](afterRetailSumUserInvoiceDetail(detail), valueRetailVATUserInvoiceDetail(detail)), currencyUserInvoiceDetail(detail))
                    WHEN CHANGED(afterRetailSumUserInvoiceDetail(detail)) OR CHANGED (valueRetailVATUserInvoiceDetail(detail)) OR CHANGED (currencyUserInvoiceDetail(detail));

    @defineDocumentInterfaceDetailMarkupSumPrefix (invoice, afterRetail, ' после');
    afterRetailMarkupSumUserInvoiceDetail(detail) <- afterRetailSumUserInvoiceDetail(detail) (-) afterRetailVATSumUserInvoiceDetail (detail) (-) afterSumUserInvoiceDetail(detail)
                    WHEN CHANGED(afterRetailVATSumUserInvoiceDetail(detail)) OR CHANGED (afterRetailVATSumUserInvoiceDetail (detail)) OR CHANGED (afterSumUserInvoiceDetail(detail));

    createRepricingInvoiceDetail 'Создавать акт дооценки' (invoiceDetail) = createRepricingInvoice(invoiceInvoiceDetail(invoiceDetail));
    createRepricingUserInvoiceDetail 'Создавать акт дооценки' (userInvoiceDetail) = createRepricingUserInvoice(userInvoiceUserInvoiceDetail(userInvoiceDetail));

    needToRepricingInvoiceDetail (invoiceDetail) = curRetailPriceInvoiceDetail(invoiceDetail) != retailPriceInvoiceDetail(invoiceDetail)
                                                   AND balanceBSkuInvoiceDetail(invoiceDetail) != 0 AND stockInvoiceDetail(invoiceDetail) IS departmentStore
                                                   AND NOT costLedgerDepartmentStore(stockInvoiceDetail(invoiceDetail))
                                                   AND createRepricingInvoiceDetail(invoiceDetail);// AND isPostedInvoiceDetail(invoiceDetail) ;

    needToRepricingInvoice (invoice)= GROUP SUM 1 IF needToRepricingInvoiceDetail(invoiceDetail)
        BY invoiceInvoiceDetail(invoiceDetail);

    @defineDocumentInterfaceHeaderRepricingCommittee (invoice, stock);

    CLASS invoiceRepricing 'Акт дооценки на основе инвойса'###sign : repricing;
    CLASS invoiceRepricingPosted 'Закрытый акт дооценки на основе инвойса'###sign : invoiceRepricing, postedObject;
    CLASS invoiceRepricingDetail 'Строка акта дооценки на основе инвойса'###sign : repricingDetail;

    @defineDocumentTables(invoiceRepricing);

    @defineDocumentAggregation(invoice, invoiceRepricing, needToRepricingInvoice);


    repricingRepricingDetail(detail) += invoiceRepricingInvoiceRepricingDetail(detail);

    printRepricing 'Акт переоценки' (repricing) = ACTION FORM repricing OBJECTS p IMAGE 'print.png' IN printGroup;
    printRepricingInvoice 'Акт дооценки' (invoice) = printRepricing(invoiceRepricingInvoice(invoice)) IMAGE 'print.png' IN printGroup;
    @defineDocumentDetailIndex(invoiceRepricing);

    dateRepricing(repricing) += dateInvoiceRepricing(repricing);
    timeRepricing(repricing) += timeInvoiceRepricing(repricing);

    @defineDocumentAggregationStockPrefix(invoice, invoiceRepricing, stock, 'Склад', , );
    departmentStoreRepricing(repricing) += stockInvoiceRepricing(repricing) IF stockInvoiceRepricing(repricing) IS departmentStore;
    dataDepartmentStoreRepricingDetail(repricingDetail) += dataStockInvoiceDetail(invoiceDetailInvoiceRepricingDetail(repricingDetail))
                                                           IF dataStockInvoiceDetail(invoiceDetailInvoiceRepricingDetail(repricingDetail)) IS departmentStore;

    @defineDocumentAggregationPosted(invoice, invoiceRepricing);
    isPostedRepricing(repricing) += isPostedInvoiceRepricing(repricing);

    numberInvoiceRepricing 'Номер документа' (invoiceRepricing) = numberInvoice(invoiceInvoiceRepricing(invoiceRepricing));
    numberRepricing(repricing) += numberInvoiceRepricing(repricing);

    seriesInvoiceRepricing 'Серия документа' (invoiceRepricing) = seriesInvoice(invoiceInvoiceRepricing(invoiceRepricing));
    seriesRepricing(repricing) += seriesInvoiceRepricing(repricing);

    seriesNumberInvoiceRepricing 'Серия/номер документа' (invoiceRepricing) = seriesNumberInvoice(invoiceInvoiceRepricing(invoiceRepricing));

    noteInvoiceInvoiceRepricing 'Примечание' (invoiceRepricing) = noteInvoice(invoiceInvoiceRepricing(invoiceRepricing));
    noteRepricing(repricing) += noteInvoiceInvoiceRepricing(repricing);

    currencyInvoiceRepricing  (invoiceRepricing) = currencyInvoice(invoiceInvoiceRepricing(invoiceRepricing));
    currencyRepricing (repricing) += currencyInvoiceRepricing(repricing);
    repricingCommitteeRepricing(repricing) += repricingCommitteeInvoice(invoiceInvoiceRepricing(repricing));
    numberDisposalRepricing(repricing) += numberDisposalInvoice(invoiceInvoiceRepricing(repricing));

    @defineDocumentDescription(invoiceRepricing, invoiceRepricingDetail, seriesNumberInvoiceRepricing, 'Акт дооценки на основе инвойса');
    descriptionRepricing (repricing) += descriptionInvoiceRepricing(repricing);

    @defineDocumentAggregationDetailSku(invoice, invoiceRepricing, sku);
    skuRepricingDetail(repricingDetail) +=  skuInvoiceRepricingDetail(repricingDetail);

    backgroundCurInvoice 'Цвет' (invoice) = RGB(255, 255, 224) IF invoice IS userInvoice;
    backgroundAfterInvoice 'Цвет' (invoice) = RGB(255, 255, 200) IF invoice IS userInvoice;
    EXTEND FORM userInvoice
        PROPERTIES(i)   BACKGROUND backgroundCurInvoice(i) createRepricingUserInvoice
        PROPERTIES(i)   BACKGROUND backgroundCurInvoice(i) SHOWIF createRepricingUserInvoice(i) nameRepricingCommitteeUserInvoice, numberDisposalUserInvoice
        PROPERTIES(d)   BACKGROUND backgroundCurInvoice(i) SHOWIF createRepricingUserInvoice(i) BEFORE nameStockUserInvoiceDetail(d)
                        balanceBSkuUserInvoiceDetail, curPriceUserInvoiceDetail, curSumUserInvoiceDetail,
                        curMarkupUserInvoiceDetail, curMarkupSumUserInvoiceDetail,
                        numberCurVATUserInvoiceDetail, valueCurVATUserInvoiceDetail, curVATSumUserInvoiceDetail,
                        curRetailPriceUserInvoiceDetail, curRetailSumUserInvoiceDetail
        PROPERTIES(d)   BACKGROUND backgroundAfterInvoice(i) SHOWIF createRepricingUserInvoice(i) BEFORE nameStockUserInvoiceDetail(d)
                        afterSumUserInvoiceDetail, afterRetailVATSumUserInvoiceDetail, afterRetailMarkupSumUserInvoiceDetail, afterRetailSumUserInvoiceDetail
    ;
    EXTEND DESIGN userInvoice {
        headerRow3 {
            NEW wor2 {
                title = 'Дооценка';
                ADD PROPERTY(createRepricingUserInvoice);
                ADD PROPERTY(nameRepricingCommitteeUserInvoice);
                ADD PROPERTY(numberDisposalUserInvoice);
            }
        }
    }

    EXTEND FORM invoices
        PROPERTIES(i) createRepricingInvoice
        PROPERTIES(i) FORCE PANEL  printRepricingInvoice SHOWIF createRepricingInvoice(i)

    ;

//----------------------------------------------------------------------------------------------------------
    quantityRepricingDetail(repricingDetail) += balanceBSkuInvoiceDetail(invoiceDetailInvoiceRepricingDetail(repricingDetail));

    @defineDocumentAggregationDetailProperty (invoice, invoiceRepricing, price, 'Цена поставщика после');
    priceRepricingDetail(repricingDetail) += priceInvoiceRepricingDetail(repricingDetail);
    @defineDocumentAggregationDetailProperty (invoice, invoiceRepricing, curPrice, 'Цена поставщика до');
    curPriceRepricingDetail(repricingDetail) += curPriceInvoiceRepricingDetail(repricingDetail);

    @defineDocumentAggregationDetailProperty (invoice, invoiceRepricing, retailPrice, 'Цена розничная после');
    retailPriceRepricingDetail(repricingDetail) += retailPriceInvoiceRepricingDetail(repricingDetail);
    @defineDocumentAggregationDetailProperty (invoice, invoiceRepricing, curRetailPrice, 'Цена розничная до');
    curRetailPriceRepricingDetail(repricingDetail) += curRetailPriceInvoiceRepricingDetail(repricingDetail);

    @defineDocumentAggregationDetailProperty (invoice, invoiceRepricing, afterRetailSum, 'Сумма розничная после');
    retailSumRepricingDetail(repricingDetail) += afterRetailSumInvoiceRepricingDetail(repricingDetail);
    @defineDocumentAggregationDetailProperty (invoice, invoiceRepricing, curRetailSum, 'Сумма розничная до');
    curRetailSumRepricingDetail(repricingDetail) += curRetailSumInvoiceRepricingDetail(repricingDetail);

    @defineDocumentAggregationDetailProperty (invoice, invoiceRepricing, retailMarkup, 'Надбавка после');
    markupRepricingDetail(repricingDetail) += retailMarkupInvoiceRepricingDetail(repricingDetail);
    @defineDocumentAggregationDetailProperty (invoice, invoiceRepricing, curMarkup, 'Надбавка до');
    curMarkupRepricingDetail(repricingDetail) += curMarkupInvoiceRepricingDetail(repricingDetail);

    @defineDocumentAggregationDetailProperty (invoice, invoiceRepricing, retailVAT, 'НДС после');
    VATRepricingDetail(repricingDetail) += retailVATInvoiceRepricingDetail(repricingDetail);
    @defineDocumentAggregationDetailProperty (invoice, invoiceRepricing, curVAT, 'НДС до');
    curVATRepricingDetail(repricingDetail) += curVATInvoiceRepricingDetail(repricingDetail);

    @defineDocumentAggregationDetailProperty (invoice, invoiceRepricing, valueRetailVAT, 'НДС,% после');
    valueVATRepricingDetail(repricingDetail) += valueRetailVATInvoiceRepricingDetail(repricingDetail);
    @defineDocumentAggregationDetailProperty (invoice, invoiceRepricing, valueCurVAT, 'НДС,% до');
    valueCurVATRepricingDetail(repricingDetail) += valueCurVATInvoiceRepricingDetail(repricingDetail);

    @defineDocumentAggregationDetailProperty (invoice, invoiceRepricing, afterSum, 'Сумма поставщика после');
    sumRepricingDetail(repricingDetail) += afterSumInvoiceRepricingDetail(repricingDetail);
    @defineDocumentAggregationDetailProperty (invoice, invoiceRepricing, curSum, 'Сумма поставщика до');
    curSumRepricingDetail(repricingDetail) += curSumInvoiceRepricingDetail(repricingDetail);

    @defineDocumentAggregationDetailProperty (invoice, invoiceRepricing, afterRetailVATSum, 'Сумма НДС после');
    VATSumRepricingDetail(repricingDetail) += afterRetailVATSumInvoiceRepricingDetail(repricingDetail);
    @defineDocumentAggregationDetailProperty (invoice, invoiceRepricing, curVATSum, 'Сумма НДС до');
    curVATSumRepricingDetail(repricingDetail) += curVATSumInvoiceRepricingDetail(repricingDetail);

    @defineDocumentAggregationDetailProperty (invoice, invoiceRepricing, afterRetailMarkupSum, 'Сумма надбавки после');
    markupSumRepricingDetail(repricingDetail) += afterRetailMarkupSumInvoiceRepricingDetail(repricingDetail);
    @defineDocumentAggregationDetailProperty (invoice, invoiceRepricing, curMarkupSum, 'Сумма надбавки до');
    curMarkupSumRepricingDetail(repricingDetail) += curMarkupSumInvoiceRepricingDetail(repricingDetail);

END
