MODULE  BOM;

REQUIRE Stock,
        Numerator,
        Barcode,
        Document,
        Utils,
        Manufacturing;


// ---------------- Материалы ------------------- //
CLASS ABSTRACT material 'Материал';
TABLE material(material);

nameMaterial 'Наименование' (material) = ABSTRACT STRING[255] (material) PERSISTENT MINCHARWIDTH 40 PREFCHARWIDTH 80;

UOMMaterial (material) = ABSTRACT UOM (material) PERSISTENT;
shortNameUOMMaterial 'Ед. изм.' (material) = shortName(UOMMaterial(material)) IN recognize;

editMaterial 'Редактировать' = ABSTRACT ACTION (material) IMAGE 'edit.png' EDITKEY 'BACK_SPACE' HIDE TOOLBAR;
addMaterial 'Добавить' = ABSTRACT ACTION () IMAGE 'add.png' EDITKEY 'INSERT' HIDE TOOLBAR;

skuGroupMaterial (material) = ABSTRACT skuGroup (material) PERSISTENT;
isParentSkuGroupMaterial (skuGroup, material) = isParentSkuGroupSkuGroup(skuGroupMaterial(material), skuGroup) PERSISTENT;

FORM materials 'Материалы'

    TREE skuTree sg = skuGroup PARENT parentSkuGroup
    PROPERTIES READONLY skuGroupName = name(sg)

    OBJECTS m = material
    PROPERTIES(m) READONLY objectClassName, nameMaterial, shortNameUOMMaterial
    PROPERTIES() addMaterial TODRAW m
    PROPERTIES(m) editMaterial
    FILTERS isParentSkuGroupMaterial(sg, m)
    ORDER BY nameMaterial

    DIALOG material OBJECT m
;

DESIGN materials FROM DEFAULT {
    main{
        preferredSize = (1024, 768);

        NEW topContainer {
            type = SPLITH;
            childConstraints = TO THE RIGHT;

            ADD skuTree.tree.box {
                title = 'Группы Материалов';
            }

            ADD m.box {
                m.grid {
                    defaultComponent = TRUE;
                    fillHorizontal = 4;
                }
            }
        }

        ADD functions.box;
    }
}


// --------------- Товары ----------------- //
EXTEND CLASS sku : material;

nameMaterial(material) += nameSku(material);
UOMMaterial(material) += UOMSku(material);

editMaterial(sku) += editSku(sku);
addMaterial () += addSku();

skuGroupMaterial(material) += skuGroupSku(material);

// -----------  Технологии -------------- //
CLASS technology 'Технология' : named;
TABLE technology (technology);

@defineHistorizable(wastageTechnologyMaterial, '% потерь', NUMERIC[8,3], technology, name, material, nameMaterial, base);


FORM technology 'Технология'

    OBJECTS dt = DATE FIXED PANEL
    PROPERTIES valDt = OBJVALUE(dt) BACKGROUND dateDiffersCurrent(dt)

    OBJECTS t=technology FIXED PANEL
    PROPERTIES(t) name

    TREE skuTree sg = skuGroup PARENT parentSkuGroup
    PROPERTIES READONLY skuGroupName = name(sg)

    OBJECTS m = material
    PROPERTIES(m) nameMaterial, shortNameUOMMaterial
    PROPERTIES overWastageTechnologyMaterialDate(t,m,dt), overDialogWastageTechnologyMaterialDate(t,m)

    FILTERS isParentSkuGroupMaterial(sg, m)
    ORDER BY nameMaterial

    FILTERGROUP filters
        FILTER 'С % потерь' 'F9' wastageTechnologyMaterialDate(t,m,dt)

    OBJECTS d=DATE
    PROPERTIES  READONLY OBJVALUE(d), dataWastageTechnologyMaterialDate(t,m,d)
    FILTERS dataWastageTechnologyMaterialDate(t,m,d)

    EDIT technology OBJECT t
;

DESIGN technology FROM DEFAULT{
    main {
        preferredSize = (1024, 768);
        NEW specification.box BEFORE functions.box {
            childConstraints = TO THE RIGHT;
            ADD skuTree.tree.box {title = 'Группа материалов'; fillHorizontal=1; }
            NEW row {
                childConstraints = TO THE BOTTOM;
                ADD m.box {
                    title = 'Материал';
                    fillHorizontal=2;
                    fillVertical=3;
                }
                ADD d.box {
                    title = 'История изменений';
                    fillVertical=1;
                }
            }
        }
        NEW headerBox BEFORE specification.box {
            childConstraints = TO THE RIGHT;
            ADD t.box { childConstraints = TO THE RIGHT;}
            ADD dt.box {childConstraints = TO THE RIGHT;}
        }
    }
}

FORM technologies 'Технологии'

    OBJECTS t=technology
    PROPERTIES(t)  READONLY name

    PROPERTIES (t) ADDFORM, EDITFORM, delete FORCE PANEL DRAWTOTOOLBAR

    OBJECTS m=material
    PROPERTIES     READONLY nameMaterial(m), shortNameUOMMaterial(m), wastageTechnologyMaterial(t,m)
    ORDER BY nameMaterial

    FILTERS        wastageTechnologyMaterial(t,m)
;
DESIGN technologies FROM DEFAULT{
    main {
        ADD t.box;
        ADD m.box { title = 'Материалы с % потерь на текущую дату';}
        ADD functions.box;
    }
}

// ---------------------- BOM'ы ----------------------

CLASS BOM 'Спецификация' : named, numeratedObject, historizable;
TABLE BOM (BOM);

CLASS BOMPosted 'Проведенная спецификация' : BOM;

@defineDocumentHeaderNote(BOM);
@defineNumeratedObjectDefault(BOM, 'Нумератор для спецификаций', 'СП');
@defineDocumentHeaderPosted (BOM);

descriptionBOM 'Название документа' (BOM) =
    [FORMULA STRING[200]  ' CAST($1 AS TEXT) || \' / \' || CAST($2 AS TEXT) || \' № \' || CAST($3 AS TEXT)'](
    'Спецификация', name(BOM), seriesNumberObject(BOM)) MINCHARWIDTH 30 PREFCHARWIDTH 50;

// ------------- Изделия ----------- //
CLASS product 'Изделие' : externalizable, material;
TABLE product (product);

EXTEND FORM materials

    FILTERGROUP filters
        FILTER 'Изделие' 'F11' m AS product
        FILTER 'Sku' 'F10' m AS sku
;

EXTEND FORM technology

    FILTERGROUP filters
        FILTER 'Изделие' 'F11' m AS product
        FILTER 'Sku' 'F10' m AS sku
;

skuProduct = DATA sku (product);
nameSkuProduct 'SKU' (product) = nameSku(skuProduct(product)) IN recognize;
UOMProduct = DATA UOM (product);
shortNameUOMProduct 'Ед.изм.' (product) = shortName(UOMProduct(product)) IN recognize;
UOMProduct(product) <-UOMSku(skuProduct(product)) WHEN CHANGED (skuProduct(product));


@defineDocumentRelation (BOM, product, ' (изделие)');
descriptionProduct 'Название документа' (product)= descriptionBOM(BOMProduct(product));
@defineDocumentDetailPosted (BOM, product);

@defineDocumentDetailIndex (BOM, product);
@defineDocumentDetailActionsCustom (BOM, product);

@defineDocumentDetailQuantityCustomPrefix (product, , );

@defineDocumentHeaderQuantityCustomPrefix (BOM, product, , ' (изделие)');

pricePercentProduct 'Удельный вес цены,%' = DATA NUMERIC[8,3] (product);
priceCoeffProduct (product) = pricePercentProduct(product) / 100;

pricePercentBOM 'Удельный вес цен,%'= GROUP SUM pricePercentProduct(product) BY BOMProduct(product) IN documentSumGroup;

nameMaterial(material) += [FORMULA STRING[255]  ' CAST($1 AS TEXT) || \' / \' ||  CAST($2 AS TEXT)'](
                                      name(BOMProduct(material)),
                                      nameSkuProduct(material));

UOMMaterial(material) += UOMSku(skuProduct(material));
skuGroupMaterial(material) += skuGroupSku(skuProduct(material));

FORM products 'Изделия'
    OBJECTS p=product
    PROPERTIES(p) READONLY descriptionProduct, indexProduct, nameSkuProduct, shortNameUOMProduct, quantityProduct
    PROPERTIES (p) ADDSESSIONFORM, EDITSESSIONFORM, delete

    DIALOG product OBJECT p
;


// ------------- Компоненты ----------- //
CLASS component 'Компонент' : named;
TABLE component (component);

@defineDocumentRelation (BOM, component, ' (компонент)');
descriptionComponent 'Название документа' (component)= descriptionBOM(BOMComponent(component));

@defineDocumentDetailPosted (BOM, component);
@defineDocumentDetailIndex (BOM, component);
@defineDocumentDetailActionsCustom (BOM, component);

materialComponent = DATA material (component);
nameMaterialComponent 'Материал' (component) = nameMaterial(materialComponent(component));

nameComponent 'Компонент' (component) = [FORMULA STRING[255]  ' CAST($1 AS TEXT) || \' / \' ||  CAST($2 AS TEXT)'](
                                      name(BOMComponent(component)),
                                      nameMaterialComponent(component));

UOMComponent = DATA UOM (component);
shortNameUOMComponent 'Ед. изм.' (component) = shortName(UOMComponent(component));
UOMComponent(component) <-UOMSku(materialComponent(component)) WHEN CHANGED (materialComponent(component));

@defineDocumentDetailQuantityCustomPrefix (component, netto, ' (нетто)');
@defineDocumentHeaderQuantityCustomPrefix (BOM, component, netto, ' (нетто компонент)');

technologyComponent = DATA technology (component);
nameTechnologyComponent 'Технология' (component) = name(technologyComponent(component));

wastageComponent '% потерь'= DATA NUMERIC[8,3] (component);

wastageComponentDate '% потерь' (component, date) = IF technologyComponent(component) THEN wastageTechnologyMaterialDate(technologyComponent(component),materialComponent(component), date)
                                                    ELSE wastageComponent(component) AND date IS DATE;
curWastageComponent '% потерь' (component) =  wastageComponentDate(component, currentDate());

overCurWastageComponent '% потерь' (component) =  wastageTechnologyMaterialDate(technologyComponent(component),materialComponent(component), currentDate()) OR
                                                  wastageComponent(component);
changeWastageComponent = ACTION (component) {
    REQUEST NUMERIC[8,3] INPUT;

    IF requestedNumeric() AND NOT technologyComponent(component) THEN {
        SET wastageComponent(component) <- requestedNumeric();
    } ELSE {
        SET wastageComponent(component) <- NULL;
    }
}
backgroundWastageComponent 'Цвет' (component) = RGB(229,229,229) IF technologyComponent(component);


@defineDocumentDetailQuantityCustomPrefix (component, brutto, ' (брутто)');
@defineDocumentHeaderQuantityCustomPrefix (BOM, component, brutto, ' (брутто компонент)');

bruttoQuantityComponent(component) <- (nettoQuantityComponent(component)/(1 - (wastageComponent(component)/100))) WHEN CHANGED (wastageComponent(component)) OR
                                                                                                                       CHANGED (nettoQuantityComponent(component));

inTechnologyMaterial 'Связь' (technology,material) = GROUP SUM 1 IF dataWastageTechnologyMaterialDate(technology, material, date) BY technology, material;

CONSTRAINT technologyComponent(component) AND NOT inTechnologyMaterial(technologyComponent(component),materialComponent(component))
    CHECKED BY technologyComponent MESSAGE 'Для компонента выбрана технология, у которой нет значения % потерь для SKU';

bruttoQuantityComponentDate(component, date)= IF technologyComponent(component) THEN (nettoQuantityComponent(component)/(1 - (wastageTechnologyMaterialDate(technologyComponent(component),materialComponent(component), date)/100)))
    ELSE bruttoQuantityComponent(component) AND date IS DATE;
curBruttoQuantityComponent 'Кол-во (брутто)' (component) =  bruttoQuantityComponentDate(component, currentDate());

overCurBruttoQuantityComponent 'Кол-во (брутто)' (component) = (nettoQuantityComponent(component)/(1 - (wastageTechnologyMaterialDate(technologyComponent(component),materialComponent(component), currentDate())/100))) OR
                                                            bruttoQuantityComponent(component);
changeBruttoQuantityComponent = ACTION (component) {
    REQUEST NUMERIC[14,3] INPUT;

    IF requestedNumeric() AND NOT technologyComponent(component) THEN {
        SET bruttoQuantityComponent(component) <- requestedNumeric();
    } ELSE {
        SET bruttoQuantityComponent(component) <- NULL;
    }
}
backgroundBruttoQuantityComponent 'Цвет' (component) = RGB(229,229,229) IF technologyComponent(component);

FORM components 'Компоненты'
    OBJECTS c=component
    PROPERTIES(c) READONLY descriptionComponent, indexComponent, nameMaterialComponent, shortNameUOMComponent, nettoQuantityComponent
    PROPERTIES (c) ADDSESSIONFORM, EDITSESSIONFORM, delete

    DIALOG component OBJECT c
;

//------------------------------- Формы -------------------------------------//
FORM BOM 'Спецификация'

    OBJECTS b=BOM FIXED PANEL
    OBJECTS dt = DATE FIXED PANEL

    PROPERTIES(b) objectClassName, name, nameNumeratorObject, numberObject, seriesObject, noteBOM
    PROPERTIES(b) READONLY quantityProductBOM, nettoQuantityComponentBOM, pricePercentBOM//, bruttoQuantityComponentBOM
    OBJECTS p = product
    PROPERTIES(p) indexProduct, nameSkuProduct, shortNameUOMProduct, quantityProduct, pricePercentProduct

    PROPERTIES(p) ADDOBJ, delete
    PROPERTIES(b) TODRAW p deleteProductBOM
    FILTERS       BOMProduct(p) == b

    OBJECTS c = component
    PROPERTIES(c) indexComponent, nameMaterialComponent, shortNameUOMComponent, nameTechnologyComponent, nettoQuantityComponent,
                  overCurWastageComponent ON CHANGE EXEC changeWastageComponent(c) BACKGROUND backgroundWastageComponent(c) READONLYIF technologyComponent(c),
                  overCurBruttoQuantityComponent ON CHANGE EXEC changeBruttoQuantityComponent(c) BACKGROUND backgroundBruttoQuantityComponent(c) READONLYIF technologyComponent(c)

    PROPERTIES(c) ADDOBJ, delete
    PROPERTIES(b) TODRAW c deleteComponentBOM
    FILTERS       BOMComponent(c) == b

    EVENTS
        ON OK EXEC prePostBOM(b)

    EDIT BOM OBJECT b
;

DESIGN BOM FROM DEFAULT{

    main {
        preferredSize = (1024, 768);
        NEW specification.box BEFORE functions.box{
            type = TABBED;
            ADD p.box {title = 'Изделие';}
            ADD c.box {title = 'Компонент';}
        }

        ADD b.box BEFORE specification.box {
            childConstraints = TO THE RIGHT;
            NEW headerRow1 {
                childConstraints = TO THE BOTTOM;

                NEW headerRow11 {
                    title = 'Шапка';
                    childConstraints = TO THE RIGHTBOTTOM;
                    ADD PROPERTY(objectClassName) { preferredCharWidth = 10; }
                    ADD PROPERTY(name) { preferredCharWidth = 20; }
                    ADD PROPERTY(nameNumeratorObject);
                    ADD PROPERTY(numberObject);
                    ADD PROPERTY(seriesObject);
                }
                ADD b.documentPrmGroup {
                    childConstraints = TO THE RIGHTBOTTOM;
                }

            }
            ADD b.documentSumGroup {
                childConstraints = TO THE BOTTOM;
            }
        }
        PROPERTY(formOk) {
            caption = 'Провести';
        }
    }
}

FORM BOMs 'Спецификации'

    OBJECTS b=BOM

    PROPERTIES(b) READONLY isPostedBOM FORCE GRID, objectClassName, name, numberObject, seriesObject, noteBOM, quantityProductBOM, nettoQuantityComponentBOM, pricePercentBOM
//                  bruttoQuantityComponentBOM
    PROPERTIES (b) ADDFORM, EDITFORM, delete FORCE PANEL DRAWTOTOOLBAR
    PROPERTIES (b) READONLY FORCE PANEL nameUserCreatedHistorizable, timeCreatedHistorizable, hostnameComputerCreatedHistorizable, nameUserClosed, timeClosed, hostnameComputerClosed

    OBJECTS p = product
    PROPERTIES(p) READONLY indexProduct, nameSkuProduct, shortNameUOMProduct, quantityProduct, pricePercentProduct
    FILTERS       BOMProduct(p) == b

    OBJECTS c = component
    PROPERTIES(c) READONLY indexComponent, nameMaterialComponent, shortNameUOMComponent, nameTechnologyComponent, nettoQuantityComponent,
                  overCurWastageComponent, overCurBruttoQuantityComponent
    FILTERS       BOMComponent(c) == b
;

DESIGN BOMs FROM DEFAULT {
    main {
        preferredSize = (1024, 768);
        PROPERTY (delete(b)) {
            askConfirm = TRUE;
        }

        NEW documentContainer BEFORE functions.box {
            type = SPLITV;
            childConstraints = TO THE BOTTOM;

            ADD b.box;

            NEW documentDetail {
                type = TABBED;

                ADD p.box {
                    title = 'Изделие';
                }
                ADD c.box {
                    title = 'Компонент';
                }

                NEW documentHistory {
                    title = 'История';

                    ADD b.historyGroup;
                    ADD b.postedGroup;
                }
                NEW printTab {
                    title = 'Печатные формы';
                    NEW printContainer {
                        title = 'Печать';
                        childConstraints = TO THE BOTTOM;
                        fillVertical = 2.0; // todo : иначе кнопка не всегда показывается, нужно будет пофиксить как-нибудь
                    }
                }
            }
        }
    }
}

// ----- Рекурсивный расчет потребностей ---------- //

TABLE BOMMaterial(BOM, material, DATE);
// кол-во требуемых материалов материалов
bruttoQuantityBOMMaterialDate (BOM, material, date) = GROUP SUM bruttoQuantityComponentDate(component, date) BY BOMComponent(component), materialComponent(component), date;
bruttoQuantityBOMSkuDate(BOM, sku, date) = bruttoQuantityBOMMaterialDate(BOM, sku, date) AND sku IS sku;

bruttoQuantityBOMBOMDate (parent, child, date) = GROUP MAX bruttoQuantityBOMMaterialDate(BOM, material, date) / quantityProduct(material) BY BOM, BOMProduct(material), date;

recBruttoQuantityBOMBOMDateResult (parent, child, date, q) = RECURSION 1.0 AND q == 1.0 AND child == (parent AS BOM) AND date IS DATE STEP 1.0 AND q == $q * bruttoQuantityBOMBOMDate($child, child, date) CYCLES;
recBruttoQuantityBOMBOMDate (parent, child, date) = GROUP SUM recBruttoQuantityBOMBOMDateResult(parent, child, date, q) * q BY parent, child, date;
//recBruttoQuantityBOMBOMDate (parent, child, date) = 1.0 IF (parent AS BOM) == (child AS BOM) AND date IS DATE;

recBruttoQuantityBOMSkuDate (BOM, sku, date) = GROUP SUM recBruttoQuantityBOMBOMDate(BOM, childBOM, date) * bruttoQuantityBOMSkuDate(childBOM, sku, date) BY BOM, sku, date; //](BOM, sku);

// Расчет цены
priceCoeffBOMBOMDate(parent, child, date) = GROUP SUM bruttoQuantityBOMMaterialDate(BOM, material, date) * priceCoeffProduct(material) / quantityProduct(material) BY BOM, BOMProduct(material), date;

recPriceCoeffBOMBOMDateResult (parent, child, date, q) = RECURSION 1.0 AND q == 1.0 AND child == (parent AS BOM) AND date IS DATE STEP 1.0 AND q == $q * priceCoeffBOMBOMDate($child, child, date) CYCLES;
recPriceCoeffBOMBOMDate (parent, child, date) = GROUP SUM recPriceCoeffBOMBOMDateResult(parent, child, date, q) * q BY parent, child, date;
//recPriceCoeffBOMBOMDate (parent, child, date) = 1.0 IF (parent AS BOM) == (child AS BOM) AND date IS DATE;

//
recPriceCoeffBOMSkuDate (BOM, sku, date) = GROUP SUM recPriceCoeffBOMBOMDate(BOM, childBOM, date) * bruttoQuantityBOMSkuDate(childBOM, sku, date) BY BOM, sku, date;
recPricePercentProductSkuDate (product, sku, date) = recPriceCoeffBOMSkuDate (BOMProduct(product), sku, date) * pricePercentProduct(product);

NAVIGATOR {
    manufacturingMasterData {
        ADD BOMs;
        ADD technologies;
    }
}