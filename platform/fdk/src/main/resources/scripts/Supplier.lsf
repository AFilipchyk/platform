MODULE Supplier;

REQUIRE System,
        Historizable,
        Utils,
        LegalEntity,
        Stock;

CLASS supplier 'Поставщик' : legalEntity;
TABLE supplier (supplier);

GROUP orderGroup 'Заказ' : publicGroup;

dataSurePercentSupplier 'Обязательный % заказанных товаров в прих. накладной' = DATA INTEGER (supplier) IN orderGroup;
surePercentSupplier 'Обязательный % заказанных товаров в прих. накладной' = (0 IF supplier IS supplier) OR dataSurePercentSupplier(supplier) IN orderGroup;

allowablePercentSupplier 'Допустимый % изменения цен 1го поставщика' = DATA INTEGER (supplier) IN orderGroup;
afterDaysSupplier 'Максимальное число дней до поставки после заказа' = DATA INTEGER (supplier) IN orderGroup;

periodicitySupply 'Переодичность поставок, дней (при поставках не по графику)' = DATA INTEGER (supplier) IN orderGroup;

returnLossSupplier '% потерь при возврате' (supplier) = DATA NUMERIC[8,3] (supplier) IN orderGroup;
emailOrderSupplierStock 'e-mail для передачи заказа' = DATA STRING[100] (supplier, stock) IN orderGroup MINCHARWIDTH 50 PREFCHARWIDTH 50;
contactSupplierStock 'Контактная информация' = DATA STRING[500] (supplier, stock) IN orderGroup MINCHARWIDTH 50 PREFCHARWIDTH 50;

@defineHistorizableDoubleYesNo(controlSupplierStock, 'Контролировать ассортимент поставщика', supplier, name, stock, name, orderGroup);
@defineHistorizableDoubleYesNo(sureSupplierStock, 'Обязателен заказ поставщику', supplier, name, stock, name, orderGroup);

// ---------------------------------------- Договора ------------------------------------ //

CLASS contract 'Договор';
TABLE contract (contract);
TABLE contractDate (contract, DATE);

CLASS STATIC contractType 'Тип договора' {
    sale 'Договор купли-продажи',
    commission 'Договор комиссии'
}

CLASS STATIC contractForm 'Порядок оплаты' {
    prepayment 'С отсрочкой платежа',
    implement 'По факту реализации',
    requirement 'Платежное требование'
}

supplierContract = DATA supplier (contract) AUTOSET;
nameSupplierContract 'Поставщик' (contract) = name(supplierContract(contract)) IN recognizeGroup MAXCHARWIDTH 30 PREFCHARWIDTH 30;

companyContract = DATA company (contract) AUTOSET;
nameCompanyContract 'Компания' (contract) = name(companyContract(contract)) IN recognizeGroup MAXCHARWIDTH 30 PREFCHARWIDTH 30;

countContractCompanySupplier 'Кол-во договоров' (company, supplier) =
    GROUP SUM 1 IF companyContract(contract) == company AND supplierContract(contract) == supplier BY company, supplier;

numberContract 'Номер договора' = DATA STRING[30] (contract) IN recognizeGroup;
dateFromContract 'Дата начала договора' = DATA DATE (contract) IN recognizeGroup;
dateToContract 'Дата окончания договора' = DATA DATE (contract) IN recognizeGroup;
activeContract 'Действуюший' (contract, date) =
    (dateFromContract(contract) < (date AS DATE)) AND (dateToContract(contract) > (date AS DATE));

GROUP paymentGroup 'Взаиморасчеты' : publicGroup;
dataTypeContract(contract) = DATA contractType (contract);
typeContract(contract) = contractType.sale IF contract IS contract OR dataTypeContract(contract) PERSISTENT;
nameTypeContract 'Тип договора' (contract) = name(contractType.sale IF contract IS contract OR typeContract(contract)) IN paymentGroup;

@defineHistorizableCustom(formContract, 'Порядок оплаты по договору', contractForm, name, contract, name, paymentGroup);
CONSTRAINT contract IS contract AND NOT formContract(contract)  MESSAGE 'Не выбран порядок оплаты по договору';

@defineHistorizable(delayContract, 'Отсрочка платежа (календ. дней)', INTEGER, contract, numberContract, paymentGroup);

currencyContract = DATA currency (contract);
nameCurrencyContract 'Валюта взаиморасчетов' (contract) = name(currencyContract(contract)) IN paymentGroup;
shortNameCurrencyContract 'Валюта взаиморасчетов' (contract) = shortNameCurrency(currencyContract(contract)) IN paymentGroup;
symbolCurrencyContract 'Символ' (contract) = symbolCurrency(currencyContract(contract)) IN paymentGroup;

noteContract 'Примечание' = DATA TEXT (contract) MINCHARWIDTH 50 PREFCHARWIDTH 50;

dataContractCompanySupplier = DATA contract (company, supplier);
CONSTRAINT supplier != supplierContract(dataContractCompanySupplier(company, supplier)) CHECKED BY dataContractCompanySupplier
    MESSAGE 'Договор по умолчанию для поставщика должен соответствовать договорам поставщика';
CONSTRAINT company != companyContract(dataContractCompanySupplier(company, supplier)) CHECKED BY dataContractCompanySupplier
    MESSAGE 'Договор по умолчанию для компании должен соответствовать договорам компании';

contractCompanySupplier (company, supplier) = [GROUP MAX contract IF dateFromContract(contract) <= currentDate() AND NOT dateToContract(contract) < currentDate()
                                                     BY companyContract(contract), supplierContract(contract)](company, supplier) OR
                                              dataContractCompanySupplier(company, supplier);
numberContractCompanySupplier 'Основной договор' (company, supplier) = numberContract(contractCompanySupplier(company, supplier));

equalsCompanySupplierContract 'Основной' (company, supplier, contract) = contractCompanySupplier(company, supplier) == contract;

// ------------------------------------------ Формы для договоров --------------------------------------- //

FORM contract 'Договор'
    OBJECTS c=contract FIXED PANEL
    PROPERTIES(c) nameCompanyContract, nameSupplierContract,
                  numberContract, dateFromContract, dateToContract,
                  nameTypeContract,
                  nameFormContract, dialogFormContract,
                  delayContract, dialogDelayContract,
                  nameCurrencyContract, noteContract

    EDIT contract OBJECT c
;

DESIGN contract FROM DEFAULT {
    main{
//        preferredSize = (1024, 768);
        c.panel {
            childConstraints = TO THE BOTTOM;
            NEW HeaderContainer {
                childConstraints = TO THE RIGHT;
                NEW contractor {
                    title = 'Контрагенты';
                    childConstraints = TO THE RIGHT;
                    ADD PROPERTY(nameCompanyContract);
                    ADD PROPERTY(nameSupplierContract);
                }
                NEW attributes {
                    childConstraints = TO THE RIGHT;
                    title = 'Реквизиты';
                    ADD PROPERTY(numberContract);
                    ADD PROPERTY(dateFromContract);
                    ADD PROPERTY(dateToContract);
                }
            }
            ADD c.paymentGroup {
                childConstraints = TO THE RIGHT;
            }

            ADD PROPERTY(noteContract) {
                panelLabelAbove = TRUE;
                fillHorizontal = 1;
            }
        }
    }
}

FORM contracts 'Договоры'
    OBJECTS c=contract
    PROPERTIES(c) READONLY numberContract, dateFromContract, dateToContract,
                           nameCompanyContract, nameSupplierContract,
                           nameTypeContract

    PROPERTIES(c) ADDFORM, EDITFORM, delete
    ORDER BY dateFromContract

    DIALOG contract OBJECT c
;

// ------------------------------------------ Формы для поставщика --------------------------------------- //

FORM supplier 'Поставщик'
    OBJECTS s=supplier FIXED PANEL
    PROPERTIES(s) name, fullNameLegalEntity, nameOwnershipLegalEntity, shortNameOwnershipLegalEntity,
                  UNPLegalEntity, OKPOLegalEntity, OKYLPLegalEntity, emailLegalEntity, siteLegalEntity,
                  addressLegalEntity, dialogAddressLegalEntity,
                  postAddressLegalEntity, dialogPostAddressLegalEntity,
                  managerLegalEntity, dialogManagerLegalEntity,
                  accountantLegalEntity, dialogAccountantLegalEntity,
                  phoneLegalEntity, dialogPhoneLegalEntity,
                  surePercentSupplier, allowablePercentSupplier,
                  afterDaysSupplier, periodicitySupply,
                  returnLossSupplier

    OBJECTS a=account
    PROPERTIES(a) numberAccount, nameBankAccount, addressBankAccount, departmentBankAccount, CBUBankAccount, MFOBankAccount, noteAccount,
                  ADDOBJ, delete
    FILTERS legalEntityAccount(a) == s

    OBJECTS co=company
    PROPERTIES(co) READONLY name

    OBJECTS c=contract
    PROPERTIES(c)  READONLY numberContract, dateFromContract, dateToContract, nameTypeContract, nameFormContract, delayContract,
                            nameCurrencyContract, noteContract
    PROPERTIES(c)  ADDFORM, EDITFORM, delete
    FILTERS supplierContract(c) == s,
            companyContract(c) == co

    OBJECTS l=license
    PROPERTIES(l) numberLicense, dateFromLicense, dateToLicense, ADDOBJ, delete
    FILTERS legalEntityLicense(l) == s

    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES (dt) OBJVALUE BACKGROUND dateDiffersCurrent(dt)

    TREE stockTree sg = stockGroup PARENT parentStockGroup
    PROPERTIES READONLY name(sg)

    OBJECTS st=stock
    PROPERTIES(st) READONLY name, addressStock
    FILTERS stockGroupStock(st) == sg

    PROPERTIES(s, st) emailOrderSupplierStock, contactSupplierStock
    PROPERTIES       overNameControlSupplierStockDate(s, st, dt) BACKGROUND dataControlSupplierStockDate(s, st, dt), overDialogControlSupplierStockDate(s, st),
                     overNameSureSupplierStockDate(s, st, dt) BACKGROUND dataSureSupplierStockDate(s, st, dt), overDialogSureSupplierStockDate(s, st)

    PROPERTIES(s, a) equalsLegalEntityAccount

    PROPERTIES(co, s)    numberContractCompanySupplier
    PROPERTIES(co, s, c) equalsCompanySupplierContract

    FILTERGROUP filtersCompany
        FILTER 'Показывать юр. лица с которыми есть договор' 'F5' countContractCompanySupplier(co, s)

    EDIT supplier OBJECT s
;

DESIGN supplier FROM DEFAULT {
    main{
        preferredSize = (1024, 768);
        s.box {
            childConstraints = TO THE BOTTOM;

            NEW row1 {
                childConstraints = TO THE RIGHT;
                ADD s.lawGroup{
                    childConstraints = TO THE BOTTOM;
                }
                ADD s.orderGroup {
                    childConstraints = TO THE BOTTOM;
                }
            }
            NEW row2{
                childConstraints = TO THE RIGHT;
                ADD s.contactGroup {
                    childConstraints = TO THE BOTTOM;
                }
                ADD s.managementGroup {
                    childConstraints = TO THE BOTTOM;
                }
                ADD s.docGroup {
                    childConstraints = TO THE BOTTOM;
                }
            }
        }

        NEW prop.box BEFORE functions.box{
            type = TABBED;
            ADD a.box;
            NEW firstCase {
                title = 'Договоры';
                childConstraints = TO THE RIGHT;
                ADD co.box;
                ADD c.box;
            }

            ADD l.box;

            ADD st.box {

                ADD dt.box BEFORE st.grid.box;
                ADD stockTree.box BEFORE st.grid.box;
                POSITION stockTree.box TO THE LEFT st.grid.box;
                st.grid.box {
                    fillHorizontal = 3;
                };
            }

        }
    }
}

FORM suppliers 'Поставщики'
    OBJECTS s=supplier
    PROPERTIES(s) READONLY name, fullNameLegalEntity, shortNameOwnershipLegalEntity, UNPLegalEntity, numberAccountLegalEntity, addressLegalEntity, phoneLegalEntity
    PROPERTIES(s) ADDFORM, EDITFORM, delete

    DIALOG supplier OBJECT s
;

// -------------------------------------------- Макросы --------------------------------------------- //
META defineDocumentHeaderSupplierContract(object)
    supplier###object (object) = DATA supplier (object);
    nameSupplier###object 'Поставщик' (object) = name(supplier###object(object)) IN documentPrmGroup MINCHARWIDTH 30 PREFCHARWIDTH 40;
    UNPSupplier###object 'УНП поставщика' (object) = UNPLegalEntity(supplier###object(object)) IN documentPrmGroup;

    supplier###object##Detail (detail) = supplier###object(object###object##Detail(detail));

    contract###object (object) = DATA contract (object);
    numberContract###object 'Договор' (object) = numberContract(contract###object(object)) IN documentPrmGroup;

    dateFromContract###object 'Договор от' (object) = dateFromContract(contract###object(object)) IN documentPrmGroup;

    CONSTRAINT contract###object(object) AND NOT supplier###object(object) == supplierContract(contract###object(object))
        CHECKED BY contract###object MESSAGE 'Выберите договор данного поставщика';
    CONSTRAINT contract###object(object) AND NOT activeContract(contract###object(object), date###object(object))
        CHECKED BY contract###object MESSAGE 'Выберите действующий договор';
END
