MODULE Terminal;

REQUIRE System, Machinery;

// Группы
CLASS groupTerminal 'Группы ТСД' : groupMachinery;
TABLE groupTerminal (groupTerminal);

stockGroupTerminal = DATA stock (groupTerminal);
stockGroupMachinery (groupMachinery) += stockGroupTerminal(groupMachinery);

// Модели
CLASS terminalModel 'Модель ТСД' : model;
TABLE terminalModel (terminalModel);

FORM terminalModel 'Модель ТСД'
    OBJECTS t=terminalModel FIXED PANEL
    PROPERTIES(t) name, noteModel, handlerModel, maxProductModel
    EDIT terminalModel OBJECT t
;

FORM terminalModels 'Модели ТСД'
    OBJECTS m=terminalModel
    PROPERTIES(m) READONLY objectClassName, name, maxProductModel, noteModel, handlerModel
    PROPERTIES(m) ADDFORM, EDITFORM, delete
;

// Терминалы
CLASS terminal 'ТСД' : machinery;
TABLE terminal (terminal);

isTerminal (machinery) = machinery IS terminal;

groupTerminalTerminal = DATA groupTerminal (terminal);
groupMachineryMachinery(machinery) += groupTerminalTerminal(machinery);

terminalModelTerminal = DATA terminalModel (terminal);
modelMachinery(machinery) += terminalModelTerminal(machinery);

directoryTerminal 'Директория обмена с ТСД' = DATA STRING[100] (terminal) IN baseGroup;

FORM terminal 'ТСД'
    OBJECTS t=terminal FIXED PANEL
    PROPERTIES(t) nameGroupMachineryMachinery, nppMachinery, descriptionMachinery, portMachinery, directoryTerminal, nameModelMachinery
    EDIT terminal OBJECT t
;

// ------------------------ Группы типов документов ------------------------- //
CLASS groupTerminalDocumentType 'Группа типов документов';
TABLE groupTerminalDocumentType (groupTerminalDocumentType);

nameGroupTerminalDocumentType 'Наименование группы' = DATA STRING[200] (groupTerminalDocumentType) IN baseGroup MINCHARWIDTH 10 PREFCHARWIDTH 20;
groupTerminalDocumentTypeGroupTerminal 'Группа типов документов (ИД)' = DATA groupTerminalDocumentType (groupTerminal);
nameGroupTerminalDocumentTypeGroupTerminal 'Группа типов документов' (groupTerminal) = nameGroupTerminalDocumentType(groupTerminalDocumentTypeGroupTerminal(groupTerminal));

// ------------------------------------- Виды справочников ТСД --------------------------------- //

CLASS STATIC terminalHandbookType 'Вид справочника ТСД' {
    terminalHandbookTypeSupplier 'Поставщик',
    terminalHandbookTypeCustomer 'Покупатель'
};

idTerminalHandbookType 'Код' = DATA STRING[10] (terminalHandbookType) IN baseGroup;
terminalHandbookTypeID (terminalHandbookType) = GROUP UNIQUE terminalHandbookType BY idTerminalHandbookType (terminalHandbookType) WHERE terminalHandbookType IS terminalHandbookType;

FORM handbooksTerminalDocumentType 'Виды справочников ТСД'
    OBJECTS h=terminalHandbookType
    PROPERTIES(h)  name, idTerminalHandbookType
    PROPERTIES(h)  ADDFORM, EDITFORM, delete
;

//---------------------------- типы документов ----------------------------------------//

CLASS terminalDocumentType 'Тип документов';
TABLE terminalDocumentType (terminalDocumentType);

groupTerminalDocumentTypeTerminalDocumentType = DATA groupTerminalDocumentType (terminalDocumentType);
nameGroupTerminalDocumentTypeTerminalDocumentType 'Группа типов документов' (terminalDocumentType) = nameGroupTerminalDocumentType(groupTerminalDocumentTypeTerminalDocumentType(terminalDocumentType));

nameTerminalDocumentType 'Название' = DATA STRING[200] (terminalDocumentType) IN baseGroup;

idTerminalDocumentType 'Код' = DATA STRING[10] (terminalDocumentType) IN baseGroup;
terminalDocumentTypeID (terminalDocumentType) = GROUP UNIQUE terminalDocumentType BY idTerminalDocumentType (terminalDocumentType) WHERE terminalDocumentType IS terminalDocumentType;

terminalHandbookType1TerminalDocumentType = DATA terminalHandbookType (terminalDocumentType);
idTerminalHandbookType1TerminalDocumentType 'Код' (terminalDocumentType)  = idTerminalHandbookType (terminalHandbookType1TerminalDocumentType(terminalDocumentType));
nameTerminalHandbookType1TerminalDocumentType 'Имя' (terminalDocumentType)  = name (terminalHandbookType1TerminalDocumentType(terminalDocumentType));

nameInHandbook1TerminalDocumentType 'Наименование в справочнике 1' = DATA STRING[200] (terminalDocumentType) IN baseGroup;
nameInHandbook1TerminalDocumentType(terminalDocumentType) <- nameTerminalHandbookType1TerminalDocumentType(terminalDocumentType) WHEN CHANGED(terminalHandbookType1TerminalDocumentType(terminalDocumentType));

terminalHandbookType2TerminalDocumentType = DATA terminalHandbookType (terminalDocumentType);
idTerminalHandbookType2TerminalDocumentType 'Код' (terminalDocumentType)  = idTerminalHandbookType (terminalHandbookType2TerminalDocumentType(terminalDocumentType));
nameTerminalHandbookType2TerminalDocumentType 'Имя' (terminalDocumentType)  = name (terminalHandbookType2TerminalDocumentType(terminalDocumentType));

nameInHandbook2TerminalDocumentType 'Наименование в справочнике 2' = DATA STRING[200] (terminalDocumentType) IN baseGroup;
nameInHandbook2TerminalDocumentType(terminalDocumentType) <- nameTerminalHandbookType2TerminalDocumentType(terminalDocumentType) WHEN CHANGED(terminalHandbookType2TerminalDocumentType(terminalDocumentType));

FORM groupTerminalDocumentType 'Группа типов документов'
    OBJECTS gtdt=groupTerminalDocumentType FIXED PANEL
    PROPERTIES(gtdt) nameGroupTerminalDocumentType

    OBJECTS tdt=terminalDocumentType
    PROPERTIES(tdt)   idTerminalDocumentType, nameTerminalDocumentType, nameGroupTerminalDocumentTypeTerminalDocumentType,
                      nameInHandbook1TerminalDocumentType, idTerminalHandbookType1TerminalDocumentType,
                      nameInHandbook2TerminalDocumentType, idTerminalHandbookType2TerminalDocumentType,
                      ADDOBJ, delete

    FILTERGROUP filters3
        FILTER 'Показывать только для данной группы' 'F10' groupTerminalDocumentTypeTerminalDocumentType(tdt) == gtdt DEFAULT

    EDIT groupTerminalDocumentType OBJECT gtdt
;

FORM groupsTerminalDocumentType 'Группы типов документов'
    OBJECTS gtdt=groupTerminalDocumentType, tdt=terminalDocumentType
    PROPERTIES(gtdt) READONLY nameGroupTerminalDocumentType
    PROPERTIES(gtdt) ADDFORM, EDITFORM, delete

    PROPERTIES(tdt) READONLY idTerminalDocumentType, nameTerminalDocumentType,
                             nameInHandbook1TerminalDocumentType, idTerminalHandbookType1TerminalDocumentType,
                             nameInHandbook2TerminalDocumentType, idTerminalHandbookType2TerminalDocumentType

    FILTERS groupTerminalDocumentTypeTerminalDocumentType (tdt) == gtdt
;

DESIGN groupsTerminalDocumentType FROM DEFAULT {
    NEW topContainer{
        type = SPLITV;
        childConstraints = TO THE BOTTOM;

        ADD gtdt.box;
        ADD tdt.box;
    }
    ADD functions.box;
}

FORM groupTerminal 'Группа ТСД'
    OBJECTS grt=groupTerminal FIXED PANEL
    PROPERTIES(grt) nameStockGroupMachinery, nameEquipmentServerGroupMachinery, nameGroupMachinery,
                    nameGroupTerminalDocumentTypeGroupTerminal,
                    filterSkuGroupMachinery, showFilterSkuGroupMachinery SHOWIF filterSkuGroupMachinery(grt)

    OBJECTS t=terminal
    PROPERTIES(t)   nameGroupMachineryMachinery, nppMachinery, descriptionMachinery, portMachinery, directoryTerminal, nameModelMachinery,
                    ADDOBJ, delete

    FILTERGROUP filters3
        FILTER 'Показывать только для данной группы' 'F10' groupTerminalTerminal(t) == grt DEFAULT

    EDIT groupTerminal OBJECT grt
;

FORM groupsTerminal 'Группы ТСД'
    OBJECTS grt=groupTerminal, t=terminal
    PROPERTIES(grt)  READONLY nameStockGroupMachinery, nameEquipmentServerGroupMachinery, nameGroupMachinery,
                     nameGroupTerminalDocumentTypeGroupTerminal,
                     filterSkuGroupMachinery
    PROPERTIES(grt)  ADDFORM, EDITFORM, delete

    PROPERTIES(t) READONLY nppMachinery, descriptionMachinery, portMachinery,
                           directoryTerminal, nameModelMachinery,
                           nameInHandbook1TerminalDocumentType, idTerminalHandbookType1TerminalDocumentType,
                           nameInHandbook2TerminalDocumentType, idTerminalHandbookType2TerminalDocumentType
    FILTERS groupTerminalTerminal(t) == grt
;

DESIGN groupsTerminal FROM DEFAULT {
    NEW topContainer{
        type = SPLITV;
        childConstraints = TO THE BOTTOM;

        ADD grt.box;
        ADD t.box;
    }
    ADD functions.box;
}

// ------------------------------------ Документы ТСД ------------------------------- //

CLASS terminalDocument 'Документ ТСД';
TABLE terminalDocument (terminalDocument);

idTerminalDocument 'Номер' = DATA INTEGER (terminalDocument) IN baseGroup;
terminalDocumentID (terminalDocument) = GROUP UNIQUE terminalDocument BY idTerminalDocument (terminalDocument)
                                                       WHERE terminalDocument IS terminalDocument;

titleTerminalDocument 'Имя' = DATA STRING[100] (terminalDocument) IN baseGroup;
quantityTerminalDocument 'Количество' = DATA NUMERIC[14,3] (terminalDocument) IN baseGroup;
idTerminalHandbookType1TerminalDocument 'Код в справочнике 1' = DATA INTEGER (terminalDocument) IN baseGroup;
idTerminalHandbookType2TerminalDocument 'Код в справочнике 2' = DATA INTEGER (terminalDocument) IN baseGroup;

terminalDocumentTypeTerminalDocument = DATA terminalDocumentType (terminalDocument);
nameTerminalDocumentTypeTerminalDocument 'Тип документа' (terminalDocument) = nameTerminalDocumentType (terminalDocumentTypeTerminalDocument (terminalDocument));

idTerminalDocumentTypeTerminalDocument (terminalDocument) = idTerminalDocumentType (terminalDocumentTypeTerminalDocument (terminalDocument));

usedTerminalDocument 'Использован' (terminalDocument) = DATA BOOLEAN (terminalDocument) IN baseGroup;
notUsedTerminalDocument 'Неиспользован' (terminalDocument) = terminalDocument IS terminalDocument AND NOT usedTerminalDocument(terminalDocument);

terminalDocumentTerminalDocumentDetail = DATA terminalDocument(terminalDocumentDetail);

CLASS terminalDocumentDetail 'Строка документа ТСД';
TABLE terminalDocumentDetail (terminalDocumentDetail);

numberTerminalDocumentDetail 'Номер' = DATA INTEGER (terminalDocumentDetail) IN baseGroup;
terminalDocumentDetailIDDocumentIDDetail (terminalDocumentDetail, terminalDocument) =
    GROUP UNIQUE terminalDocumentDetail BY idTerminalDocument (terminalDocumentTerminalDocumentDetail(terminalDocumentDetail)), numberTerminalDocumentDetail(terminalDocumentDetail)
          WHERE terminalDocumentDetail IS terminalDocumentDetail;

barcodeTerminalDocumentDetail 'Штрих-код' = DATA STRING[14] (terminalDocumentDetail) IN baseGroup;
quantityTerminalDocumentDetail 'Количество' = DATA NUMERIC[14,3] (terminalDocumentDetail) IN baseGroup;
priceTerminalDocumentDetail 'Цена' = DATA NUMERIC[14,3] (terminalDocumentDetail) IN baseGroup;
sumTerminalDocumentDetail 'Сумма' = DATA NUMERIC[14,3] (terminalDocumentDetail) IN baseGroup;
nameTerminalDocumentDetail 'Наименование' = DATA STRING[200] (terminalDocumentDetail) IN baseGroup;
isNewTerminalDocumentDetail 'Новый товар' = DATA BOOLEAN (terminalDocumentDetail) IN baseGroup;

// ----------------------------------------------- Формы документов ------------------------------------------ //

FORM terminalDocument 'Документ ТСД'
    OBJECTS td=terminalDocument FIXED PANEL
    PROPERTIES(td)  idTerminalDocument, nameTerminalDocumentTypeTerminalDocument, idTerminalHandbookType1TerminalDocument,
                    idTerminalHandbookType2TerminalDocument, titleTerminalDocument, quantityTerminalDocument, usedTerminalDocument READONLY

    OBJECTS tdd=terminalDocumentDetail
    PROPERTIES(tdd) numberTerminalDocumentDetail, barcodeTerminalDocumentDetail, nameTerminalDocumentDetail,
    isNewTerminalDocumentDetail, priceTerminalDocumentDetail, quantityTerminalDocumentDetail, sumTerminalDocumentDetail, ADDOBJ

    FILTERS terminalDocumentTerminalDocumentDetail(tdd) == td

    FILTERGROUP filterUse
        FILTER 'Неиспользованные' 'F10' notUsedTerminalDocument(td) DEFAULT

    EDIT terminalDocument OBJECT td;
;

DESIGN terminalDocument FROM DEFAULT {
    main {
        preferredSize = (1024, 768);
        NEW topContainer {
            type = SPLITV;
            childConstraints = TO THE BOTTOM;

            ADD td.box;
            ADD tdd.box;
        }
    }
    ADD functions.box;
}

FORM terminalDocuments 'Документы ТСД'
    OBJECTS td=terminalDocument
    PROPERTIES(td)  READONLY idTerminalDocument, nameTerminalDocumentTypeTerminalDocument, idTerminalHandbookType1TerminalDocument,
                    idTerminalHandbookType2TerminalDocument, titleTerminalDocument, quantityTerminalDocument
    PROPERTIES(td)  ADDFORM, EDITFORM, delete

    OBJECTS tdd=terminalDocumentDetail
    PROPERTIES(tdd) READONLY numberTerminalDocumentDetail, barcodeTerminalDocumentDetail, nameTerminalDocumentDetail,
    isNewTerminalDocumentDetail, priceTerminalDocumentDetail, quantityTerminalDocumentDetail, sumTerminalDocumentDetail

    FILTERS terminalDocumentTerminalDocumentDetail(tdd) == td
    FILTERGROUP filterUse
        FILTER 'Неиспользованные' 'F10' notUsedTerminalDocument(td) DEFAULT
;

DESIGN terminalDocuments FROM DEFAULT {
    main {
        preferredSize = (1024, 768);
        NEW topContainer{
            type = SPLITV;
            childConstraints = TO THE BOTTOM;

            ADD td.box;
            ADD tdd.box;
        }
    }
    ADD functions.box;
}

//----------------------------- Макросы для документов --------------------------------//

META defineAddDetailDialogTerminal (object, skuProp)
    addDetailDialogTerminal###object##Detail###object 'Импорт из ТСД' (object) = ACTION (object) {
        FORM terminalDocuments MODAL;
        IF formResult() == formResult.ok THEN {
            LOCAL document = terminalDocument ();
            SET document() <- chosenObject('td');
            SET usedTerminalDocument(terminalDocument) IF terminalDocument == document()  <- TRUE;

            FOR terminalDocumentTerminalDocumentDetail(tdd) == document()  DO {
                ADDOBJ object##Detail;
                FOR o == addedObject() DO {
                    SET object###object##Detail(o) <- object AS object;
                    SET skuProp###object##Detail(o) <- skuBarcode(barcodeIdDate(barcodeTerminalDocumentDetail(tdd), date###object(object)));
                    SET quantity###object##Detail(o) <- quantityTerminalDocumentDetail(tdd);
                }
            }
        }
    } TOOLBAR;
END

// -------------------------------------------- Загрузка в ВУ ------------------------------------------------ //

CLASS terminalPriceTransaction 'Загрузка прайса в ТСД' : machineryPriceTransaction;
groupTerminalTerminalPriceTransaction 'Группа ТСД' = DATA groupTerminal (terminalPriceTransaction);
groupMachineryMachineryPriceTransaction (transaction) += groupTerminalTerminalPriceTransaction(transaction);

// ------------------------------------------------ Стандартные значения ------------------------------------ //

// Модели терминалов сбора данных
loadDefaultTerminalModel 'Добавить модель терминала' = ACTION (stringOne, stringTwo)  {
    ADDOBJ terminalModel;
    FOR tm == addedObject() DO {
         SET name(tm) <- stringOne AS STRING[110];
         SET handlerModel(tm) <- stringTwo AS STRING[200];
    }
}

loadDefaultTerminalModels 'Загрузить стандартные модели ТСД' = ACTION () {
    EXEC loadDefaultTerminalModel('ТСД InventoryTech', 'equ.clt.handler.inventoryTech.InventoryTechHandler');
    EXEC loadDefaultTerminalModel('ТСД EasyCSV', 'equ.clt.handler.easy.EasyCSVHandler');
} IN loadDefaultGroup;

loadDefaultData () += loadDefaultTerminalModels();

EXTEND FORM defaultData
    PROPERTIES() loadDefaultTerminalModels
;

// Виды справочников терминалов сбора данных
loadDefaultTerminalHandbookType 'Добавить вид справочника ТСД' = ACTION (handbookTypeName, idString) {
    SET idTerminalHandbookType(x) IF x==handbookTypeName <- idString AS STRING[110];
}

loadDefaultTerminalHandbookTypes 'Загрузить стандартные виды справочников ТСД' = ACTION () {
    EXEC loadDefaultTerminalHandbookType(terminalHandbookType.terminalHandbookTypeSupplier, '01');
    EXEC loadDefaultTerminalHandbookType(terminalHandbookType.terminalHandbookTypeCustomer, '02');
} IN loadDefaultGroup;

loadDefaultData () += loadDefaultTerminalHandbookTypes();

EXTEND FORM defaultData
    PROPERTIES() loadDefaultTerminalHandbookTypes
;

// Типы документов терминалов сбора данных
loadDefaultTerminalDocumentType 'Добавить тип документа ТСД' = ACTION (nameString, gtdt, idTypeString, handbook1String, handbook2String) {
    ADDOBJ terminalDocumentType;
    FOR tdt == addedObject() DO {
        SET nameTerminalDocumentType(tdt) <- nameString AS STRING[110];
        SET groupTerminalDocumentTypeTerminalDocumentType(tdt) <- gtdt AS groupTerminalDocumentType;
        SET terminalHandbookType1TerminalDocumentType(tdt) <- terminalHandbookTypeID(handbook1String);
        SET terminalHandbookType2TerminalDocumentType(tdt) <- terminalHandbookTypeID(handbook2String);
        SET idTerminalDocumentType(tdt) <- idTypeString AS STRING[10];
    }
}

loadDefaultTerminalDocumentTypes 'Загрузить стандартные типы документов ТСД' = ACTION () {
    ADDOBJ groupTerminalDocumentType;
    FOR gtdt == addedObject() DO {
        SET nameGroupTerminalDocumentType(gtdt) <- 'Группа типов документов';
        EXEC loadDefaultTerminalDocumentType('Инвентаризация', gtdt, '01', ' ', ' ');
        EXEC loadDefaultTerminalDocumentType('Приход', gtdt, '02', '01', ' ');
        EXEC loadDefaultTerminalDocumentType('Отгрузка по безналичному расчёту', gtdt, '03', '02', ' ');
    }
} IN loadDefaultGroup;

loadDefaultData () += loadDefaultTerminalDocumentTypes();

EXTEND FORM defaultData
    PROPERTIES() loadDefaultTerminalDocumentTypes
;

// ------------------------------------------ Генерация групп терминалов сбора данных ------------------------------ //
loadDefaultGroupTerminal 'Сгенерировать группу терминалов' = ACTION(equipmentServer, stock, model, gtdt, num) {
    ADDOBJ groupTerminal;
    FOR g == addedObject() DO {
        SET stockGroupTerminal(g) <- stock AS stock;
        SET equipmentServerGroupMachinery(g) <- equipmentServer AS equipmentServer;
        SET nameGroupMachinery(g) <- 'Группа ТСД по умолчанию' AS STRING[110];
        SET groupTerminalDocumentTypeGroupTerminal(g) <- gtdt AS groupTerminalDocumentType;

        LOCAL numTerminal = INTEGER();
        SET numTerminal() <- 0;
        WHILE numTerminal() < (num AS INTEGER) DO {
            ADDOBJ terminal;
            FOR t == addedObject() DO {
                SET groupTerminalTerminal(t) <- g AS groupTerminal;
                SET numTerminal() <- numTerminal() + 1;
                SET nppMachinery(t) <- numTerminal();
                SET terminalModelTerminal(t) <- model AS terminalModel;
            }
        }
    }
}

EXTEND FORM defaultData
    OBJECTS         tm=terminalModel FIXED PANEL
    PROPERTIES(tm)  SELECTOR name

    OBJECTS         gtdt=groupTerminalDocumentType FIXED PANEL
    PROPERTIES(gtdt) SELECTOR nameGroupTerminalDocumentType

    OBJECTS         cTerminal=INTEGER FIXED PANEL
    PROPERTIES(cTerminal)   intValueTerminal = OBJVALUE
    PROPERTIES (es, s, tm, gtdt, cTerminal)  loadDefaultGroupTerminal
;

EXTEND DESIGN defaultData {
    PROPERTY(name(tm)) {
        caption = 'Модель ТСД';
    }
    PROPERTY(nameGroupTerminalDocumentType(gtdt)) {
        caption = 'Группа типов документов';
    }
    PROPERTY(intValueTerminal) {
        caption = 'Количество ТСД';
    }
    machinery {
        NEW terminal {
            title = 'ТСД';
            ADD PROPERTY(loadDefaultTerminalModels);
            ADD PROPERTY(loadDefaultTerminalHandbookTypes);
            ADD PROPERTY(loadDefaultTerminalDocumentTypes);
            ADD PROPERTY(name(tm));
            ADD PROPERTY(nameGroupTerminalDocumentType(gtdt));
            ADD PROPERTY(intValueTerminal);
            ADD PROPERTY(loadDefaultGroupTerminal);
        }
    }
}