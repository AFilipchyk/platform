MODULE Declaration;

REQUIRE Certificate, Shipment, CustomsGroup;

CLASS Declaration 'Таможенная декларация' : Certificate, NumeratedObject;

TABLE declaration(Declaration);

CLASS DeclarationPosted 'Проведенная таможенная декларация' : Declaration, PostedObject;

@defineNumeratedObjectDefault(Declaration, 'Нумератор для деклараций', 'ДД');

@defineDocumentHeaderTimePrefix(Declaration, ,' создания');
dateCertificate(declaration) += dateDeclaration(declaration);
timeCertificate(declaration) += timeDeclaration(declaration);

seriesCertificate(declaration) += seriesObject(declaration) AND declaration IS Declaration;
numberCertificate(declaration) += numberObject(declaration) AND declaration IS Declaration;

descriptionDeclaration 'Таможенная декларация' (declaration) =
    [FORMULA STRING[100] ' \'№\' || CAST($1 AS TEXT) ||  \' от \' || CAST($2 AS TEXT)']
    (seriesNumberObject(declaration), dateDeclaration(declaration));

@defineCertificateObjectBatch(declaration, 'Таможенная декларация');

customsZoneDeclaration = DATA CustomsZone(Declaration);
nameCustomsZoneDeclaration 'Таможенная зона' (declaration) = name(customsZoneDeclaration(declaration));

currencyCustomsZoneDeclaration (declaration) = currencyCustomsZone(customsZoneDeclaration(declaration));
nameCurrencyCustomsZoneDeclaration 'Валюта платежей' (declaration) = name(currencyCustomsZoneDeclaration(declaration));

legalEntityDeclaration = DATA LegalEntity(Declaration);
nameLegalEntityDeclaration 'Импортёр' (declaration) = name(legalEntityDeclaration(declaration));

currencyDeclaration = DATA Currency(Declaration);
nameCurrencyDeclaration 'Валюта накладных' (declaration) = name(currencyDeclaration(declaration));

homeCurrencyDeclaration = DATA Currency(Declaration);
nameHomeCurrencyDeclaration 'Валюта (расч.)' (declaration) = name(homeCurrencyDeclaration(declaration));

typeExchangeDeclaration = DATA TypeExchange(Declaration);
nameTypeExchangeDeclaration 'Тип обмена' (declaration) = name(typeExchangeDeclaration(declaration));

CONSTRAINT currencyTypeExchange(typeExchangeDeclaration(declaration)) != homeCurrencyDeclaration(declaration)
    CHECKED BY homeCurrencyDeclaration MESSAGE 'Тип обмена должен соответствовать расчётной валюте';

rateExchangeDeclaration 'Курс для накладных' = DATA NUMERIC[14,3](Declaration);
calcRateExchangeDeclaration 'Курс для накладных' (declaration) = rateTypeExchangeCurrencyDate(typeExchangeDeclaration(declaration), currencyDeclaration(declaration), dateDeclaration(declaration));
rateExchangeDeclaration(declaration) <- calcRateExchangeDeclaration(declaration) WHEN CHANGED (dateDeclaration(declaration)) OR
                                                                                      CHANGED (typeExchangeDeclaration(declaration)) OR
                                                                                      CHANGED (currencyDeclaration(declaration));

rateExchangeCustomsZoneDeclaration 'Курс платежей' = DATA NUMERIC[14,3](Declaration);
calcRateExchangeCustomsZoneDeclaration 'Курс платежей' = rateTypeExchangeCurrencyDate(typeExchangeDeclaration(declaration), currencyCustomsZoneDeclaration(declaration), dateDeclaration(declaration));
rateExchangeCustomsZoneDeclaration(declaration) <- calcRateExchangeCustomsZoneDeclaration(declaration) WHEN CHANGED (dateDeclaration(declaration)) OR
                                                                                                            CHANGED (typeExchangeDeclaration(declaration)) OR
                                                                                                            CHANGED (customsZoneDeclaration(declaration));

roundCurrencyDeclaration(number, declaration) = roundPriceCurrency(number, currencyTypeExchange(typeExchangeDeclaration(declaration)));

FORM declaration 'Таможенная декларация'
    OBJECTS d = Declaration FIXED PANEL
    PROPERTIES(d) objectClassName, nameNumeratorObject, numberObject, seriesObject, dateDeclaration, timeDeclaration,
                  nameLegalEntityDeclaration, nameCurrencyDeclaration, nameCustomsZoneDeclaration, nameHomeCurrencyDeclaration,
                  nameTypeExchangeDeclaration, rateExchangeDeclaration, nameCurrencyCustomsZoneDeclaration, rateExchangeCustomsZoneDeclaration
    EDIT Declaration OBJECT d
;

DESIGN declaration FROM DEFAULT{
    main{
        NEW topContainer {
            childConstraints = TO THE BOTTOM;
            NEW headContainer {
                childConstraints = TO THE RIGHTBOTTOM;
                caption = 'Шапка документа';
                ADD PROPERTY(objectClassName);
                ADD PROPERTY(nameNumeratorObject);
                ADD PROPERTY(seriesObject);
                ADD PROPERTY(numberObject);
                ADD PROPERTY(dateDeclaration);
                ADD PROPERTY(timeDeclaration);

            }

            NEW rightContainer {
                childConstraints = TO THE RIGHT;
                NEW parameterContainer {
                    caption = 'Параметры документа';
                    childConstraints = TO THE BOTTOM;
                    ADD PROPERTY(nameLegalEntityDeclaration);
                    ADD PROPERTY(nameCustomsZoneDeclaration);
                }

                NEW currencyContainer {
                    caption = 'Валюты и курсы';
                    childConstraints = TO THE BOTTOM;
                    ADD PROPERTY(nameHomeCurrencyDeclaration);
                    ADD PROPERTY(nameTypeExchangeDeclaration);
                    ADD PROPERTY(nameCurrencyDeclaration);
                    ADD PROPERTY(rateExchangeDeclaration);
                    ADD PROPERTY(nameCurrencyCustomsZoneDeclaration);
                    ADD PROPERTY(rateExchangeCustomsZoneDeclaration);
                }
            }
        }
    }
    ADD functions.box;
}

FORM declarations 'Таможенные декларации'
    OBJECTS d = Declaration
    PROPERTIES(d) READONLY objectClassName, numberObject, seriesObject, dateDeclaration, timeDeclaration, nameLegalEntityDeclaration,
                  nameHomeCurrencyDeclaration, nameCurrencyDeclaration, rateExchangeDeclaration, nameCurrencyCustomsZoneDeclaration, rateExchangeCustomsZoneDeclaration
    PROPERTIES(d) ADDFORM, EDITFORM, delete
;

FORM declarationsDialog 'Таможенные декларация'
    OBJECTS d = Declaration
    PROPERTIES(d) READONLY seriesNumberObject, dateTimeDeclaration, nameLegalEntityDeclaration, nameCurrencyDeclaration,
                  nameHomeCurrencyDeclaration, nameTypeExchangeDeclaration, rateExchangeDeclaration

    DIALOG Declaration OBJECT d
;

NAVIGATOR {
    customsDocuments {
        ADD declarations;
    }
}