MODULE CustomsGroup;

REQUIRE Certificate, Hierarchy, Utils, Historizable, Tax, Stock;

CLASS CustomsZone 'Таможенная зона' : Named;
TABLE customsZone(CustomsZone);

customsZoneName (name) = GROUP AGGR customsZone BY name(customsZone) WHERE customsZone IS CustomsZone;

currencyCustomsZone = DATA Currency(CustomsZone);
nameCurrencyCustomsZone 'Валюта' (customsZone) = name(currencyCustomsZone(customsZone)) IN base;

CLASS CustomsGroup 'Позиция ТН ВЭД' : Named;
TABLE customsGroup (CustomsGroup);

hasCodeCustomsGroup 'Есть код' = DATA BOOLEAN (CustomsGroup) IN base;
dateFromCustomsGroup 'Дата с' = DATA DATE (CustomsGroup) IN base;
dateToCustomsGroup 'Дата по' = DATA DATE (CustomsGroup) IN base;
codeCustomsGroup 'Код' = DATA STRING[10](CustomsGroup) IN base;
customsGroupCode (code) = GROUP AGGR customsGroup BY codeCustomsGroup(customsGroup) WHERE customsGroup IS CustomsGroup;

numberCustomsGroup 'Номер строки' = DATA INTEGER(CustomsGroup) IN base;

TABLE customsGroupCustomsGroup (CustomsGroup, CustomsGroup);
@defineHierarchy(customsGroup);

customsZoneCustomsGroup = DATA CustomsZone(CustomsGroup) AUTOSET;
nameCustomsZoneCustomsGroup 'Таможенная зона' (customsGroup) = name(customsZoneCustomsGroup(customsGroup)) IN base;

customsZoneCountry = DATA CustomsZone(Country);
nameCustomsZoneCountry 'Таможенная зона' (country) = name(customsZoneCountry(country)) IN base;

isCompliancedDataCustomsGroup 'Необходимость сертификации' = DATA BOOLEAN (CustomsGroup) IN base;

levelParentCustomsGroup (customsGroup) = GROUP MIN levelCustomsGroupCustomsGroup(customsGroup, parent) IF isCompliancedDataCustomsGroup(parent)
                                                BY customsGroup PERSISTENT;

isCompliancedParentCustomsGroup (customsGroup) = TRUE IF levelParentCustomsGroup(customsGroup);

isCompliancedCustomsGroup 'Необходимость сертификации' (customsGroup) = UNION OVERRIDE isCompliancedParentCustomsGroup(customsGroup), isCompliancedDataCustomsGroup(customsGroup);

TABLE customsGroupData(CustomsGroup, DATE);

@defineHistorizableCustom(supplierVATCustomsGroup, 'НДС', Range, numberRange, customsGroup, codeCustomsGroup, base);

dataValueSupplierVATCustomsGroupDate 'НДС, %' (customsGroup, date) = valueRateRangeDate(supplierVATCustomsGroupDate(customsGroup, date), date);
valueCurrentRateSupplierVATCustomsGroup 'НДС, %' (customsGroup) = valueCurrentRateRange(supplierVATCustomsGroup(customsGroup));

@defineHistorizable(percentDutyCustomsGroup, 'Пошлина (%)', NUMERIC[14,3], customsGroup, codeCustomsGroup, base);
@defineHistorizable(weightDutyCustomsGroup, 'Пошлина (валют.)', NUMERIC[14,3], customsGroup, codeCustomsGroup, base);

@defineHistorizable(registrationCustomsGroup, 'Таможенный сбор', NUMERIC[14,3], customsGroup, codeCustomsGroup, base);

customsGroupCountrySku = ABSTRACT CustomsGroup(Country, Sku);
codeCustomsGroupCountrySku 'ТН ВЭД' (country, sku) = codeCustomsGroup(customsGroupCountrySku(country, sku));

EXTEND FORM country
    PROPERTIES(c) nameCustomsZoneCountry
;

EXTEND FORM countries
    PROPERTIES(c) READONLY nameCustomsZoneCountry
;

FORM customsZone 'Таможенная зона'
    OBJECTS cz = CustomsZone FIXED PANEL
    PROPERTIES(cz) name, nameCurrencyCustomsZone
    EDIT CustomsGroup OBJECT cz
;

FORM customsZones 'Таможенная зона'
    OBJECTS cz = CustomsZone
    PROPERTIES(cz) READONLY name, nameCurrencyCustomsZone
    PROPERTIES(cz) ADDFORM, EDITFORM, delete
;

FORM customsGroup 'Позиция ТН ВЭД'
    OBJECTS cg = CustomsGroup FIXED PANEL
    PROPERTIES(cg) numberCustomsGroup, codeCustomsGroup, name, nameParentCustomsGroup, nameCustomsZoneCustomsGroup,
                   dateFromCustomsGroup, dateToCustomsGroup, isCompliancedCustomsGroup, registrationCustomsGroup,
                   valueCurrentRateSupplierVATCustomsGroup ON CHANGE dialogSupplierVATCustomsGroup(cg),
                   percentDutyCustomsGroup, weightDutyCustomsGroup

    EDIT CustomsGroup OBJECT cg
;

addCustomsGroup 'Добавить' = ACTION (customsGroup) NEWSESSION {
    FOR ADDOBJ cg = CustomsGroup DO {
        SET parentCustomsGroup(cg) <- customsGroup AS CustomsGroup;
        FORM customsGroup OBJECTS cg=cg MODAL;
        IF formResult() == FormResult.ok THEN
            EXEC apply();
    }
} TOOLBAR IMAGE 'add.png' EDITKEY 'INSERT';

FORM customsGroups 'Позиции ТН ВЭД'
    OBJECTS cz = CustomsZone FIXED PANEL
    PROPERTIES(cz) SELECTOR name, nameCurrencyCustomsZone

    TREE treeGroups gcg=CustomsGroup PARENT parentCustomsGroup
    PROPERTIES READONLY name(gcg), codeCustomsGroup(gcg), isCompliancedDataCustomsGroup(gcg)
    PROPERTIES(gcg) addCustomsGroup, EDITFORM
    ORDER BY name

    OBJECTS cg = CustomsGroup
    PROPERTIES(cg) READONLY numberCustomsGroup, codeCustomsGroup, name, canonicalNameCustomsGroup, nameParentCustomsGroup,
                   dateFromCustomsGroup, dateToCustomsGroup, isCompliancedCustomsGroup, registrationCustomsGroup,
                   valueCurrentRateSupplierVATCustomsGroup, percentDutyCustomsGroup, weightDutyCustomsGroup
    PROPERTIES(cg) ADDFORM, EDITFORM, delete

    FILTERS customsZoneCustomsGroup(cg) == cz

    FILTERGROUP hasCode
        FILTER 'Только с кодом' 'F7' hasCodeCustomsGroup(gcg) DEFAULT

    FILTERGROUP filters
        FILTER 'Все листья' 'F10' isParentLeafCustomsGroupCustomsGroup(cg, gcg) DEFAULT
        FILTER 'Всех потомков' 'F9' isParentCustomsGroupCustomsGroup(cg, gcg)
        FILTER 'Только непосредственных потомков' 'F8' parentCustomsGroup(cg) == gcg

    DIALOG CustomsGroup OBJECT cg
;

NAVIGATOR {
    customsMasterData {
        ADD customsZones;
        ADD customsGroups;
    }
}




