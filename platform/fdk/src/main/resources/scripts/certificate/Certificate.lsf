MODULE Certificate;

REQUIRE Document, Stock;

CLASS ABSTRACT certificate 'Документ качества';
TABLE certificate(certificate);

@defineDocumentAbstractHeaderTimePrefix(certificate, ,' создания');
@defineDocumentAbstractHeaderTimePrefix(certificate, to, ' действия');

numberCertificate 'Номер' = ABSTRACT STRING[18] (certificate) IN numberedGroup PERSISTENT MINCHARWIDTH 7;
seriesCertificate 'Серия' = ABSTRACT STRING[2] (certificate) IN numberedGroup PERSISTENT FIXEDCHARWIDTH 3;
seriesNumberCertificate 'Серия/Номер' (certificate) = ustring2(seriesCertificate(certificate), numberCertificate(certificate)) MINCHARWIDTH 7 PREFCHARWIDTH 10 MAXCHARWIDTH 20 PERSISTENT;

descriptionCertificate 'Документ качества' (certificate) =
    [FORMULA STRING[100] ' \'№\' || CAST($1 AS TEXT) ||  \' от \' || CAST($2 AS TEXT)||  \' действует по \' || CAST($3 AS TEXT)']
    (seriesNumberCertificate(certificate), dateCertificate(certificate), toDateCertificate(certificate));

// -------------------------- Подготовка документов под расширение сертификатами -------------------- //

META defineDocumentCertificate(document, object)

    EXTEND FORM user###document
        OBJECTS dc = user###document##Detail
        PROPERTIES (dc) indexUser###document##Detail, idBarcodeSkuUser###document##Detail, nameSkuUser###document##Detail,
                        descriptionBatchUser###document##Detail ON CHANGE EXEC changeBatchUser###document##Detail(d)
        FILTERS user###document##User###document##Detail(dc) == object
    ;

    EXTEND DESIGN user###document{
        specification.box{
            NEW certificateContainer AFTER d.box {
                caption = 'Сертификаты';
                NEW headerCertificateContainer;
                ADD dc.box;
            }
        }
    }

    EXTEND FORM document##s
        OBJECTS dc = document##Detail
        PROPERTIES(dc) READONLY index###document##Detail, idBarcodeSku###document##Detail, nameSku###document##Detail,
                                descriptionBatch###document##Detail
        FILTERS document###document##Detail(dc) == object
    ;

    EXTEND DESIGN document##s{
        documentDetail{
            NEW certificateContainer AFTER d.box {
                caption = 'Сертификаты';
                NEW headerCertificateContainer;
                ADD dc.box;
            }
        }
    }

END

// ------------------------------------ Добавление сертификатов к документам ----------------------------------- //

META defineDocumentCertificateText(document)

    certificateText###document##Detail 'Дополнительные сертификаты' = ABSTRACT TEXT (document##Detail);
    certificateTextUser###document##Detail 'Дополнительные сертификаты' = DATA TEXT (user###document##Detail);
    certificateText###document##Detail(detail) += certificateTextUser###document##Detail(detail);

    EXTEND FORM user###document PROPERTIES(dc) certificateTextUser###document##Detail;
    EXTEND DESIGN user###document {
        PROPERTY(certificateTextUser###document##Detail){
            minimumSize = (200, 36);
            preferredSize = (300, 36);
            maximumSize = (300, 36);
        }
    }

    EXTEND FORM document##s PROPERTIES(dc) certificateText###document##Detail;
    EXTEND DESIGN document##s {
        PROPERTY(certificateText###document##Detail){
            minimumSize = (200, 36);
            preferredSize = (300, 36);
            maximumSize = (300, 36);
        }
    }

END

META defineDocumentCertificateObject(prop, document, object, caption)

    prop###document##Detail = ABSTRACT prop (document##Detail);
    description###prop###document##Detail caption (detail) = description###prop(prop###document##Detail(detail));

    prop###user###document = DATA prop (user###document);
    description###prop###user###document caption (document) = description###prop(prop###user###document(document));

    data###prop###user###document##Detail = DATA prop (user###document##Detail);
    prop###user###document##Detail (detail) =
        UNION OVERRIDE prop###user###document(user###document##User###document##Detail(detail)), data###prop###user###document##Detail(detail);
    prop###document##Detail(detail) += prop###user###document##Detail(detail);

    description###prop###user###document##Detail caption (detail) = description###prop(prop###user###document##Detail(detail));

    EXTEND FORM user###document
        PROPERTIES(object) description###prop###user###document
        PROPERTIES(dc) description###prop###user###document##Detail
    ;

    EXTEND DESIGN user###document {
        headerCertificateContainer {
            ADD PROPERTY(description###prop###user###document);
        }
    }

    EXTEND FORM document##s
        PROPERTIES(dc) READONLY description###prop###document##Detail
    ;
END

// ------------------------------------ Сертификаты для партий ----------------------------------- //

META defineCertificateObjectBatch(prop, caption)
    prop###batch = ABSTRACT prop (batch) PERSISTENT;
    description###prop###batch caption (batch) = description###prop(prop###batch(batch));
    batchCount###prop##Sku(prop, sku) = GROUP SUM 1 BY prop##Batch(batch), skuBatch(batch);

    EXTEND FORM currentBalanceSkuStock PROPERTIES description###prop###batch(bt);
    EXTEND FORM balanceSkuStock PROPERTIES description###prop###batch(bt);
    EXTEND FORM currentBalanceBatchStock PROPERTIES description###prop###batch(bt);
    EXTEND FORM balanceBatchStock PROPERTIES description###prop###batch(bt);
END

certificateTextBatch 'Дополнительные сертификаты' = ABSTRACT TEXT (batch) PERSISTENT;

EXTEND FORM currentBalanceSkuStock PROPERTIES certificateTextBatch(bt);
EXTEND FORM balanceSkuStock PROPERTIES certificateTextBatch(bt);
EXTEND FORM currentBalanceBatchStock PROPERTIES certificateTextBatch(bt);
EXTEND FORM balanceBatchStock PROPERTIES certificateTextBatch(bt);

// ------------------------------------ Ограничение на выбор объектов ----------------------------------- //

META defineDocumentCertificateConstraint(prop, document)
    CONSTRAINT prop###user###document##Detail(detail) AND NOT batchCount###prop##Sku(prop###user###document##Detail(detail), skuUser###document##Detail(detail))
        CHECKED BY description###prop###user###document##Detail
        MESSAGE 'Выберите '##caption##', по которой есть в поставка';
END

// ------------------------------------ Автоматическое проставление ----------------------------------- //

META deriveDocumentCertificate(prop, document, stockProp, caption, prefix)
    prefix###prop###user###document##Detail(detail)  <- IF prop###batch(batchUser###document##Detail(detail))
                                                            THEN prop###batch(batchUser###document##Detail(detail))
                                                            ELSE prop###batch(lastOrderBatchSkuStock(skuUser###document##Detail(detail), stockProp##User###document##Detail(detail)))
        WHEN CHANGED (batchUser###document##Detail(detail)) OR
             CHANGED (skuUser###document##Detail(detail)) OR
             CHANGED (stockProp##User###document##Detail(detail));
END

NAVIGATOR {
    NEW customsNavigator 'ВЭД' BEFORE masterData TO toolbar IMAGE '/images/cop.png' {
        NEW customsDocuments 'Документы';
        NEW customsMasterData 'Справочники';
    }
}