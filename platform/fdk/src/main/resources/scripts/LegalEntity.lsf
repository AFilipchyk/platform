MODULE LegalEntity;

IMPORT Historizable;
IMPORT BaseLogicsModule;

// ----------------------------------- Форма собственности ------------------------------------------ //

CLASS ownership 'Форма собственности' : named;
TABLE ownership (ownership);

shortNameOwnership 'Cокращенное название' = DATA STRING[10] (ownership) IN baseGroup FIXEDCHARWIDTH 6;
shortNameToOwnership (string) = GROUP UNIQUE ownership BY shortNameOwnership (ownership) WHERE ownership IS ownership;

FORM ownership 'Форма собственности'
    OBJECTS o=ownership FIXED PANEL
    PROPERTIES(o) name, shortNameOwnership
;

// ----------------------------------- Юридическое лицо --------------------------------- //

CLASS ABSTRACT legalEntity 'Юридическое лицо' : named, externalObject;
TABLE legalEntity (legalEntity);
TABLE legalEntityDate (legalEntity, DATE);

GROUP lawGroup 'Юридическая информация' : publicGroup;

ownershipLegalEntity = DATA ownership (legalEntity);
nameOwnershipLegalEntity 'Форма собственности' = name(ownershipLegalEntity(legalEntity)) IN lawGroup;
shortNameOwnershipLegalEntity 'Форма собственности (сокр.)' = shortNameOwnership(ownershipLegalEntity(legalEntity)) IN baseGroup;

fullNameLegalEntity 'Полное наименование' = DATA STRING[200] (legalEntity) IN baseGroup MINCHARWIDTH 50 PREFCHARWIDTH 50;

GROUP contactGroup 'Контактная информация' : publicGroup;
emailLegalEntity 'E-mail' = DATA STRING[100] (legalEntity) IN contactGroup MINCHARWIDTH 50 PREFCHARWIDTH 50;
siteLegalEntity 'Сайт' = DATA STRING[100] (legalEntity) IN contactGroup MINCHARWIDTH 50 PREFCHARWIDTH 50;
contactsLegalEntity 'Дополнительная информация' = DATA STRING[300] (legalEntity) IN contactGroup MINCHARWIDTH 50 PREFCHARWIDTH 50;

@defineHistorizable(addressLegalEntity, 'Юридический адрес', STRING[150], legalEntity, name, lawGroup);
@defineHistorizable(managerLegalEntity, 'Руководитель', STRING[100], legalEntity, name, lawGroup);
@defineHistorizable(accountantLegalEntity, 'Главный бухгалтер', STRING[100], legalEntity, name, lawGroup);
@defineHistorizable(postAddressLegalEntity, 'Почтовый адрес', STRING[150], legalEntity, name, lawGroup);
@defineHistorizable(phoneLegalEntity, 'Телефон/факс', STRING[100], legalEntity, name, baseGroup);

GROUP docGroup 'Для договора' : publicGroup;

UNPLegalEntity 'УНП' = DATA STRING[9] (legalEntity) IN baseGroup FIXEDCHARWIDTH 9;
OKPOLegalEntity 'ОКПО' = DATA STRING[20] (legalEntity) IN docGroup MINCHARWIDTH 15 PREFCHARWIDTH 15;
OKYLPLegalEntity 'ОКЮЛП' = DATA STRING[20] (legalEntity) IN docGroup MINCHARWIDTH 15 PREFCHARWIDTH 15;

// ----------------------------------- Банк ------------------------------------------- //

CLASS bank 'Банк' : named, externalObject;
TABLE bank (bank);
TABLE bankDate (bank, DATE);

GROUP banksGroup 'Информация о банке' : baseGroup;

MFOBank 'Код МФО' = DATA STRING[9] (bank) IN banksGroup;
departmentBank 'Отдел банка' = DATA STRING[100] (bank) IN banksGroup;
CBUBank 'ЦБУ' = DATA STRING[3] (bank) IN banksGroup;
infoBank 'Дополнительные сведения' = DATA STRING[100] (bank) IN banksGroup;

@defineHistorizable(addressBank, 'Адрес банка', STRING[150], bank, name, banksGroup);

FORM bank 'Банк'
    OBJECTS b=bank FIXED PANEL
    PROPERTIES(b)  name, addressBank, dialogAddressBank, MFOBank, departmentBank, CBUBank, infoBank
    EDIT bank OBJECT b
;

FORM banks 'Банки'
    OBJECTS b=bank
    PROPERTIES(b) READONLY name, addressBank, MFOBank, departmentBank, CBUBank, infoBank
    PROPERTIES(b) ADDFORM, EDITFORM, delete
;

// ----------------------------------- Расчетный счет ------------------------------------------ //

CLASS account 'Расчетный счет';
TABLE account (account);

bankAccount = DATA bank (account);

GROUP accountGroup 'Банковская информация' : baseGroup;

numberAccount 'Номер расчетного счета'  = DATA STRING[13] (account) IN accountGroup FIXEDCHARWIDTH 13;
accountNumber 'Расчетный счет по номеру' (string) = GROUP UNIQUE account BY numberAccount (account) WHERE account IS account;

nameBankAccount 'Наименование банка' (account) = name(bankAccount(account)) IN accountGroup;
addressBankAccount 'Адрес банка' (account) = addressBank(bankAccount(account)) IN accountGroup;
MFOBankAccount 'Код МФО банка' (account) = MFOBank(bankAccount(account)) IN accountGroup;
departmentBankAccount 'Отдел банка' (account) = departmentBank(bankAccount(account)) IN accountGroup;
CBUBankAccount 'ЦБУ банка' (account) = CBUBank(bankAccount(account)) IN accountGroup;
noteAccount 'Примечание'  = DATA STRING[50] (account) IN accountGroup;

legalEntityAccount = DATA legalEntity (account);
defaultAccountLegalEntity(legalEntity) = GROUP MAX account BY legalEntityAccount(account);

userAccountLegalEntity = DATA account (legalEntity);
CONSTRAINT legalEntityAccount(userAccountLegalEntity(legalEntity)) != legalEntity CHECKED MESSAGE 'ошибка: Р/сч. по умолчанию должен соответствовать р/сч. Ю.Л.';

accountLegalEntity (legalEntity) = UNION OVERRIDE defaultAccountLegalEntity(legalEntity), userAccountLegalEntity(legalEntity);
numberAccountLegalEntity 'Основной р/сч.' (legalEntity) = numberAccount(accountLegalEntity(legalEntity)) IN lawGroup;

equalsLegalEntityAccount 'Основной' (legalEntity, account) = userAccountLegalEntity(legalEntity) == account;

// ----------------------------------- Лицензия ------------------------------------------ //
GROUP licenseGroup 'Лицензионная информация' : baseGroup;
CLASS license 'Лицензия';
TABLE license (license);

numberLicense 'Номер лицензии' = DATA STRING[100] (license) IN licenseGroup;
dateFromLicense 'Действует с ' = DATA DATE (license) IN licenseGroup;
dateToLicense 'Действует по ' = DATA DATE (license) IN licenseGroup;

legalEntityLicense 'ЮЛ (ИД)' = DATA legalEntity (license) IN idGroup;

licenseLegalEntityDate 'Действующая на дату' (legalEntity, date) = GROUP MAX license AS license IF dateFromLicense(license) <= date AND NOT dateToLicense(license) < date AND date AS DATE
                                                                         BY legalEntityLicense(license), date;
currentLicenseLegalEntity 'Действующая' (legalEntity) = licenseLegalEntityDate(legalEntity, currentDate());
numberCurrentLicenseLegalEntity 'Действующая лицензия' (legalEntity) = numberLicense(currentLicenseLegalEntity(legalEntity)) IN lawGroup;

