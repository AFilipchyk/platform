MODULE LegalEntity;

REQUIRE System, Historizable, Tax;

// ----------------------------------- Форма собственности ------------------------------------------ //

CLASS ownership 'Форма собственности' : named;
TABLE ownership (ownership);

shortNameOwnership 'Cокращенное название' = DATA STRING[10] (ownership) IN baseGroup FIXEDCHARWIDTH 6;
shortNameToOwnership (string) = GROUP UNIQUE ownership BY shortNameOwnership (ownership) WHERE ownership IS ownership;

FORM ownership 'Форма собственности'
    OBJECTS o=ownership FIXED PANEL
    PROPERTIES(o) name, shortNameOwnership
;

// ----------------------------------- Юридическое лицо --------------------------------- //

CLASS ABSTRACT legalEntity 'Юридическое лицо' : named, externalObject;
TABLE legalEntity (legalEntity);
TABLE legalEntityDate (legalEntity, DATE);

GROUP lawGroup 'Реквизиты' : publicGroup;

ownershipLegalEntity = DATA ownership (legalEntity);
nameOwnershipLegalEntity 'Форма собственности' = name(ownershipLegalEntity(legalEntity)) IN lawGroup;
shortNameOwnershipLegalEntity 'Форма собственности (сокр.)' = shortNameOwnership(ownershipLegalEntity(legalEntity)) IN lawGroup;

fullNameLegalEntity 'Полное наименование' = DATA STRING[200] (legalEntity) IN lawGroup MINCHARWIDTH 50 PREFCHARWIDTH 50;

@defineHistorizable(addressLegalEntity, 'Юридический адрес', STRING[150], legalEntity, name, lawGroup);
@defineHistorizable(postAddressLegalEntity, 'Почтовый адрес', STRING[150], legalEntity, name, lawGroup);

GROUP contactGroup 'Контактная информация' : publicGroup;

@defineHistorizable(phoneLegalEntity, 'Телефон/факс', STRING[100], legalEntity, name, contactGroup);
emailLegalEntity 'E-mail' = DATA STRING[100] (legalEntity) IN contactGroup MINCHARWIDTH 50 PREFCHARWIDTH 50;
siteLegalEntity 'Сайт' = DATA STRING[100] (legalEntity) IN contactGroup MINCHARWIDTH 50 PREFCHARWIDTH 50;
contactsLegalEntity 'Дополнительная информация' = DATA STRING[300] (legalEntity) IN contactGroup MINCHARWIDTH 50 PREFCHARWIDTH 50;

GROUP managementGroup 'Управление' : publicGroup;

@defineHistorizable(managerLegalEntity, 'Руководитель', STRING[100], legalEntity, name, managementGroup);
@defineHistorizable(accountantLegalEntity, 'Главный бухгалтер', STRING[100], legalEntity, name, managementGroup);

GROUP docGroup 'Для договора' : publicGroup;

UNPLegalEntity 'УНП' = DATA STRING[9] (legalEntity) IN docGroup FIXEDCHARWIDTH 9;
OKPOLegalEntity 'ОКПО' = DATA STRING[20] (legalEntity) IN docGroup MINCHARWIDTH 15 PREFCHARWIDTH 15;
OKYLPLegalEntity 'ОКЮЛП' = DATA STRING[20] (legalEntity) IN docGroup MINCHARWIDTH 15 PREFCHARWIDTH 15;

allowImportFromXLSLegalEntity 'Разрешить импорт из Excel-файлов' = DATA BOOLEAN (legalEntity) IN lawGroup;

// ----------------------------------- Банк ------------------------------------------- //

CLASS bank 'Банк' : named, externalObject;
TABLE bank (bank);
TABLE bankDate (bank, DATE);

GROUP banksGroup 'Информация о банке' : baseGroup;

MFOBank 'Код МФО' = DATA STRING[9] (bank) IN banksGroup;
departmentBank 'Отдел банка' = DATA STRING[100] (bank) IN banksGroup;
CBUBank 'ЦБУ' = DATA STRING[3] (bank) IN banksGroup;
infoBank 'Дополнительные сведения' = DATA STRING[100] (bank) IN banksGroup;

@defineHistorizable(addressBank, 'Адрес банка', STRING[150], bank, name, banksGroup);

FORM bank 'Банк'
    OBJECTS b=bank FIXED PANEL
    PROPERTIES(b)  name, addressBank, dialogAddressBank, MFOBank, departmentBank, CBUBank, infoBank
    EDIT bank OBJECT b
;

FORM banks 'Банки'
    OBJECTS b=bank
    PROPERTIES(b) READONLY name, addressBank, MFOBank, departmentBank, CBUBank, infoBank
    PROPERTIES(b) ADDFORM, EDITFORM, delete
;

// ----------------------------------- Расчетный счет ------------------------------------------ //

CLASS account 'Расчетный счет';
TABLE account (account);

bankAccount = DATA bank (account);

GROUP accountGroup 'Банковская информация' : baseGroup;

numberAccount 'Номер расчетного счета'  = DATA STRING[13] (account) IN accountGroup FIXEDCHARWIDTH 13;
accountNumber 'Расчетный счет по номеру' (string) = GROUP UNIQUE account BY numberAccount (account) WHERE account IS account;

nameBankAccount 'Наименование банка' (account) = name(bankAccount(account)) IN accountGroup;
addressBankAccount 'Адрес банка' (account) = addressBank(bankAccount(account)) IN accountGroup;
MFOBankAccount 'Код МФО банка' (account) = MFOBank(bankAccount(account)) IN accountGroup;
departmentBankAccount 'Отдел банка' (account) = departmentBank(bankAccount(account)) IN accountGroup;
CBUBankAccount 'ЦБУ банка' (account) = CBUBank(bankAccount(account)) IN accountGroup;
noteAccount 'Примечание'  = DATA STRING[50] (account) IN accountGroup;

legalEntityAccount = DATA legalEntity (account);
defaultAccountLegalEntity(legalEntity) = GROUP MAX account BY legalEntityAccount(account);

userAccountLegalEntity = DATA account (legalEntity);
CONSTRAINT legalEntityAccount(userAccountLegalEntity(legalEntity)) != legalEntity CHECKED MESSAGE 'ошибка: Р/сч. по умолчанию должен соответствовать р/сч. Ю.Л.';

accountLegalEntity (legalEntity) = UNION OVERRIDE defaultAccountLegalEntity(legalEntity), userAccountLegalEntity(legalEntity);
numberAccountLegalEntity 'Основной р/сч.' (legalEntity) = numberAccount(accountLegalEntity(legalEntity)) IN lawGroup;

equalsLegalEntityAccount 'Основной' (legalEntity, account) = userAccountLegalEntity(legalEntity) == account;

// ----------------------------------- Лицензия ------------------------------------------ //
GROUP licenseGroup 'Лицензионная информация' : baseGroup;
CLASS license 'Лицензия';
TABLE license (license);

numberLicense 'Номер лицензии' = DATA STRING[100] (license) IN licenseGroup;
dateFromLicense 'Действует с ' = DATA DATE (license) IN licenseGroup;
dateToLicense 'Действует по ' = DATA DATE (license) IN licenseGroup;

legalEntityLicense 'ЮЛ (ИД)' = DATA legalEntity (license) IN idGroup;

licenseLegalEntityDate 'Действующая на дату' (legalEntity, date) = GROUP MAX license AS license IF dateFromLicense(license) <= date AND NOT dateToLicense(license) < date AND date AS DATE
                                                                         BY legalEntityLicense(license), date;
currentLicenseLegalEntity 'Действующая' (legalEntity) = licenseLegalEntityDate(legalEntity, currentDate());
numberCurrentLicenseLegalEntity 'Действующая лицензия' (legalEntity) = numberLicense(currentLicenseLegalEntity(legalEntity)) IN lawGroup;

// ------------------------------------ Собственные компании ----------------------------- //

CLASS company 'Компания' : legalEntity, taxUnitGroup;
TABLE company (company);

// ---------------------------------------- Формы для ввода компаний ------------------------------------- //

FORM company 'Компания'
    OBJECTS co=company FIXED PANEL
    PROPERTIES(co) name, nameOwnershipLegalEntity, shortNameOwnershipLegalEntity, fullNameLegalEntity,
                   addressLegalEntity ON CHANGE EXEC dialogAddressLegalEntity(co),
                   postAddressLegalEntity ON CHANGE EXEC dialogPostAddressLegalEntity(co),
                   managerLegalEntity ON CHANGE EXEC dialogManagerLegalEntity(co),
                   accountantLegalEntity ON CHANGE EXEC dialogAccountantLegalEntity(co),
                   phoneLegalEntity ON CHANGE EXEC dialogPhoneLegalEntity(co),
                   UNPLegalEntity, OKPOLegalEntity, OKYLPLegalEntity, emailLegalEntity, siteLegalEntity

    OBJECTS a=account
    PROPERTIES(a)  numberAccount, nameBankAccount, addressBankAccount, departmentBankAccount, CBUBankAccount, MFOBankAccount, noteAccount, ADDOBJ, delete
    FILTERS legalEntityAccount(a) == co

    EDIT company OBJECT co
;

DESIGN company FROM DEFAULT {
    main{
       preferredSize = (1024, 768);
       co.box {
            childConstraints = TO THE RIGHT;

            NEW column1 {
                childConstraints = TO THE BOTTOM;

                ADD PROPERTY(name(co));
                ADD co.lawGroup;
            }

            NEW column2 {
                childConstraints = TO THE BOTTOM;

                ADD co.contactGroup;
                ADD co.managementGroup;
                ADD co.docGroup;
            }
       }

       NEW extendContainer BEFORE functions.box {
            type = TABBED;
            ADD a.box;
       }
   }
}

FORM companies 'Компании'
    OBJECTS co=company
    PROPERTIES(co) READONLY name, fullNameLegalEntity, shortNameOwnershipLegalEntity, UNPLegalEntity, numberAccountLegalEntity, addressLegalEntity, phoneLegalEntity
    PROPERTIES(co) ADDFORM, EDITFORM, delete
;
