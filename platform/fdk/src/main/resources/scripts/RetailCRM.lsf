MODULE RetailCRM;

REQUIRE System,

        Stock,
        Barcode,
        Store,
        Numerator,
        Document;

PRIORITY Stock;


// ------------------------------------- Физические лица -------------------------------------- //

CLASS client 'Покупатель (Ф.Л.)' : contact;


FORM client 'Покупатель (Ф.Л.)'
    OBJECTS c=client FIXED PANEL
    PROPERTIES(c)      userFirstName, userLastName, userPostAddress, userPhone,
                       email, userBirthday

    EDIT client OBJECT c
;

FORM clients 'Покупатели (Ф.Л.)'
    OBJECTS c=client
    PROPERTIES(c)      READONLY userFirstName, userLastName, userPostAddress, userPhone,
                       email, userBirthday
    PROPERTIES(c)      ADDFORM, EDITFORM, delete
;

//--------------------------------------Дисконтные карточки------------------------------------------------------------------//
CLASS discountCard 'Дисконтная карта' : numeratedObject;
TABLE discountCard (discountCard);

@defineNumeratedObject(discountCard, 'Нумератор для дисконтных карт', 'ДС');

CLASS ABSTRACT discountSkuGroup 'Дисконтная группа товаров' : named;

discountCardSeriesNumber (discountCard) = GROUP UNIQUE discountCard BY seriesNumberObject (discountCard) WHERE discountCard IS discountCard;
discountCardNumber (discountCard) = GROUP MAX discountCard BY numberObject(discountCard) IF discountCard IS discountCard;

clientDiscountCard (discountCard) = DATA client(discountCard) IN idGroup;
nameClientDiscountCard 'Держатель дисконтной карты' (discountCard) = commonName(clientDiscountCard(discountCard)) IN recognizeGroup;

GROUP discountCardDateGroup 'Срок действия' : baseGroup;
dateDiscountCard 'Дата выдачи' (discountCard) = DATA DATE (discountCard) IN discountCardDateGroup;
dateDiscountCard (discountCard) <- currentDate() WHEN ASSIGNED(discountCard IS discountCard);

dateToDiscountCard 'Дата окончания действия' (discountCard) = DATA DATE (discountCard) IN discountCardDateGroup;

TABLE discountSkuGroupSku(discountSkuGroup, sku);
inDiscountSkuGroupSku 'Вкл' = ABSTRACT BOOLEAN (discountSkuGroup, sku) PERSISTENT;

initialSumDiscountCard 'Начальная сумма' (discountCard) = DATA NUMERIC[16,2] (discountCard);

// накопительная сумма  : потом посчитать ее по карте

FORM generationDiscountCards 'Генерация дисконтных карт'
    OBJECTS n=numerator  FIXED PANEL
    PROPERTIES(n) SELECTOR name

    OBJECTS quantityCards=INTEGER FIXED PANEL
    PROPERTIES(quantityCards) intValueQuantityCards = OBJVALUE;

DESIGN generationDiscountCards FROM DEFAULT {
    main{
        PROPERTY(intValueQuantityCards) {
            caption = 'Количество дисконтных карт';
        }
    }
}

generateDiscountCards 'Сгенерировать дисконтные карты' = ACTION() {
    FORM generationDiscountCards OBJECTS n=defaultNumeratorDiscountCard() MODAL CHECK;
    IF formResult() == formResult.ok THEN {
        LOCAL num = INTEGER();
        SET num() <- 0;
        WHILE num() < (chosenInteger('quantityCards') AS INTEGER) DO {
            ADDOBJ discountCard;
            FOR d == addedObject() DO {
                // todo : делается влоб, поскольку numerator сейчас не умеет генерировать сразу несколько объектов
                SET numeratorObject(d) <- chosenObject('n') AS numerator;
                SET numberObject(d) <- curStringValueNumerator(numeratorObject(d));
                SET seriesObject(d) <- seriesNumerator(numeratorObject(d));
                SET curValueNumerator(numerator) <- curValueNumerator(numerator) + 1 WHERE numerator == numeratorObject(d);
                SET num() <- num() + 1;
            }
        }
    }
} TOOLBAR;

FORM discountCard 'Дисконтная карта'
    OBJECTS d=discountCard FIXED PANEL
    PROPERTIES(d) nameClientDiscountCard, initialSumDiscountCard,
                  nameNumeratorObject, numberObject, seriesObject,
                  dateDiscountCard, dateToDiscountCard

    EDIT discountCard OBJECT d
;

DESIGN discountCard FROM DEFAULT {
    main{
        preferredSize = (1024, 768);
        d.box {
            d.panel {
                childConstraints = TO THE BOTTOM;
                NEW row1 {
                    childConstraints = TO THE RIGHT;
                    ADD PROPERTY(nameClientDiscountCard) {
                        font = 'Tahoma 24';
                    }
                    ADD PROPERTY(initialSumDiscountCard) {
                        font = 'Tahoma 24';
                    }
                }
                NEW row2 {
                    childConstraints = TO THE RIGHT;
                    ADD d.numberedGroup;
                    ADD d.discountCardDateGroup;
                }
            }
        }
    }
}

FORM discountCards 'Дисконтные карты'
    OBJECTS d=discountCard
    PROPERTIES(d) READONLY numberObject, seriesObject, nameClientDiscountCard, dateDiscountCard, dateToDiscountCard,
                  initialSumDiscountCard
    PROPERTIES(d) ADDFORM, EDITFORM, delete

    ORDER BY seriesObject, numberObject

    PROPERTIES() generateDiscountCards TODRAW d
;

// todo: сделать генерацию штрих-кода для дисконтных карт

//-------------------------- Группы акций ----------------------------------------//

CLASS promotionGroup 'Группа акций' : named;
TABLE promotionGroup (promotionGroup);

//--------------------------Акции----------------------------------------//

CLASS promotion 'Акция' : historyObject, numeratedObject, named;
TABLE promotion (promotion);

@defineNumeratedObject(promotion, 'Нумератор для акций', 'АК');

promotionGroupPromotion (promotion) = DATA promotionGroup(promotion) IN idGroup AUTOSET NOT NULL;
namePromotionGroupPromotion 'Группа акций' (promotion) = name(promotionGroupPromotion(promotion)) IN baseGroup;

userOrderPromotion 'Порядок' (promotion) = DATA INTEGER (promotion);
orderPromotion 'Порядок' (promotion) = (1 IF promotion IS promotion) OR userOrderPromotion(promotion) PERSISTENT;

// ----------------------------- Условия акций ------------------------ //

CLASS promotionCondition 'Условие акции' : named;
TABLE promotionCondition (promotionCondition);

GROUP retailCRMGroup 'Реквизиты' : recognizeGroup;

dateFromPromotion 'ОТ:' = DATA DATE (promotion) IN retailCRMGroup NOT NULL;
dateToPromotion 'ДО:' = DATA DATE (promotion) IN retailCRMGroup NOT NULL;

timeOfFromPromotion 'ОТ:' =  DATA TIME (promotion) IN retailCRMGroup;
timeOfToPromotion 'ДО:' =  DATA TIME (promotion) IN retailCRMGroup;

TABLE promotionDOW (promotion, DOW);
skipPromotionDOW 'Исключить' = DATA BOOLEAN (promotion, DOW);

TABLE promotionStore (promotion, store);
inPromotionStore 'В акции' = DATA BOOLEAN (promotion, store);
storePromotion 'Магазины' (promotion) = GROUP CONCAT name(store) IF inPromotionStore(promotion, store), ', '
                                              BY promotion
                                              ORDER store PERSISTENT MINCHARWIDTH 20 PREFCHARWIDTH 40;

minSumBillPromotion 'Сумма чека (от)' (promotion) = DATA NUMERIC[14,2] (promotion);
maxSumBillPromotion 'Сумма чека (до)' (promotion) = DATA NUMERIC[14,2] (promotion);

hasDiscountCardPromotion 'Есть дисконтная карта' = DATA BOOLEAN (promotion);
allDiscountCardPromotion 'Любая дисконтная карта' = DATA BOOLEAN (promotion);

TABLE promotionDiscountCard (promotion, discountCard);
inDataPromotionDiscountCard 'В акции' = DATA BOOLEAN (promotion, discountCard);

inPromotionDiscountCard 'В акции' (promotion, discountCard) = UNION OVERRIDE allDiscountCardPromotion(promotion) AND discountCard IS discountCard,
                                                                             inDataPromotionDiscountCard(promotion, discountCard);

minCumulativeSumPromotion 'Накоп. сумма (от)' (promotion) = DATA NUMERIC[14,2] (promotion);
maxCumulativeSumPromotion 'Накоп. сумма (до)' (promotion) = DATA NUMERIC[14,2] (promotion);

minCumulativeSumPromotion(promotion) => hasDiscountCardPromotion (promotion) RESOLVE FALSE;
maxCumulativeSumPromotion(promotion) => hasDiscountCardPromotion (promotion) RESOLVE FALSE;
allDiscountCardPromotion(promotion) => hasDiscountCardPromotion (promotion) RESOLVE FALSE;

promotionPromotionCondition = DATA promotion (promotionCondition) NOT NULL DELETE;
namePromotionPromotionCondition 'Акция' (promotionCondition) = name(promotionPromotionCondition(promotionCondition));
dateFromPromotionCondition 'Действует (от)' (promotionCondition) = dateFromPromotion(promotionPromotionCondition(promotionCondition));
dateToPromotionCondition 'Действует (до)' (promotionCondition) = dateToPromotion(promotionPromotionCondition(promotionCondition));

countPromotionConditionPromotion 'Кол-во условий' (promotion) = GROUP SUM 1 IF promotionPromotionCondition(promotionCondition) == promotion BY promotion PERSISTENT;

minQuantityPromotionCondition 'Количество (от)' = DATA NUMERIC[14,3] (promotionCondition);
CONSTRAINT minQuantityPromotionCondition(promotionCondition) <= 0.0 MESSAGE 'Количество в условии акции должно быть строго больше 0';

minSumPromotionCondition 'Сумма (от)' = DATA NUMERIC[16,2] (promotionCondition);
CONSTRAINT minSumPromotionCondition(promotionCondition) <= 0.0 MESSAGE 'Сумма в условии акции должна быть строго больше 0';

quantityDiscountPromotionCondition 'Кол-во товаров со скидкой' = DATA NUMERIC[14,3] (promotionCondition) NOT NULL;
percentPromotionCondition 'Процент скидки'  = DATA NUMERIC[8,3] (promotionCondition);
resultPricePromotionCondition 'Цена со скидкой' = DATA NUMERIC[14,2] (promotionCondition);
sumDiscountPromotionCondition 'Сумма скидки' (promotionCondition) = DATA NUMERIC[14,2] (promotionCondition);

// discountSkuGroup
TABLE promotionConditionDiscountSkuGroup (promotionCondition, discountSkuGroup);
allDiscountSkuGroupPromotionCondition 'Все дисконтные группы товаров' = DATA BOOLEAN (promotionCondition);
inDataPromotionConditionDiscountSkuGroup 'В условии' = DATA BOOLEAN (promotionCondition, discountSkuGroup);
inPromotionConditionDiscountSkuGroup 'В условии' = UNION OVERRIDE allDiscountSkuGroupPromotionCondition(promotionCondition) AND discountSkuGroup IS discountSkuGroup,
                                                                  inDataPromotionConditionDiscountSkuGroup(promotionCondition, discountSkuGroup) PERSISTENT;
countPromotionConditionSku 'Кол-во дисконтных групп' = GROUP SUM 1 IF inPromotionConditionDiscountSkuGroup(promotionCondition, discountSkuGroup)
                                                                  AND inDiscountSkuGroupSku(discountSkuGroup, sku) BY promotionCondition, sku;


// skuGroup
TABLE promotionConditionSkuGroup (promotionCondition, skuGroup);
inDataPromotionConditionSkuGroup 'В условии' = DATA BOOLEAN (promotionCondition, skuGroup);
inParentPromotionConditionSkuGroup (promotionCondition, skuGroup) = GROUP SUM 1 IF inDataPromotionConditionSkuGroup(promotionCondition, parent) AND isParentSkuGroupSkuGroup(child, parent)
                                                                          BY promotionCondition, child PERSISTENT;
inPromotionConditionSkuGroup 'В условии' = (TRUE IF inParentPromotionConditionSkuGroup(promotionCondition, skuGroup)) OR inDataPromotionConditionSkuGroup(promotionCondition, skuGroup);

// sku
TABLE promotionConditionSku (promotionCondition, sku);
inDataPromotionConditionSku 'В условии' = DATA BOOLEAN (promotionCondition, sku);

inPromotionConditionSku 'В условии' (promotionCondition, sku) = UNION OVERRIDE ((TRUE IF countPromotionConditionSku(promotionCondition, sku)) OR (allDiscountSkuGroupPromotionCondition(promotionCondition) AND sku IS sku))
                                                                                    AND inParentPromotionConditionSkuGroup(promotionCondition, skuGroupSku(sku)),
                                                                               inDataPromotionConditionSku(promotionCondition, sku);

FORM promotion 'Акция'
    OBJECTS sh=promotion   FIXED PANEL
    PROPERTIES(sh)     name, namePromotionGroupPromotion,
                       nameNumeratorObject, numberObject, seriesObject,
                       dateFromPromotion, dateToPromotion, timeOfFromPromotion, timeOfToPromotion,
                       minSumBillPromotion, maxSumBillPromotion
    PROPERTIES(sh)                                     hasDiscountCardPromotion
    PROPERTIES(sh) SHOWIF hasDiscountCardPromotion(sh) minCumulativeSumPromotion, maxCumulativeSumPromotion, allDiscountCardPromotion
    OBJECTS d=DOW
    PROPERTIES(d)     READONLY name
    PROPERTIES(sh, d)  skipPromotionDOW
    FILTERGROUP filterDOW
        FILTER 'Только отмеченные' 'F11' skipPromotionDOW(sh, d)

    OBJECTS sg=promotionCondition
    PROPERTIES(sg)     name, minQuantityPromotionCondition, minSumPromotionCondition, quantityDiscountPromotionCondition, percentPromotionCondition,
                       resultPricePromotionCondition, sumDiscountPromotionCondition, ADDOBJ, delete

    FILTERS            promotionPromotionCondition(sg)==sh

    TREE skuTree skg = skuGroup PARENT parentSkuGroup
    PROPERTIES READONLY skuTreeName = name(skg)
    ORDER BY skuTreeName
    PROPERTIES(sg, skg) inPromotionConditionSkuGroup

    OBJECTS dg=discountSkuGroup
    PROPERTIES(sg) allDiscountSkuGroupPromotionCondition TODRAW dg FORCE PANEL
    PROPERTIES(dg) READONLY name
    PROPERTIES(sg, dg) inPromotionConditionDiscountSkuGroup

    FILTERGROUP filterDiscountSkuGroup
        FILTER 'Только отмеченные' 'F11' inPromotionConditionDiscountSkuGroup(sg, dg)

    OBJECTS sk= sku
    PROPERTIES(sk)    READONLY idBarcodeSku, nameSku
    FILTERS           isParentSkuGroupSku(skg, sk)
    PROPERTIES(sg, sk)   inPromotionConditionSku

    FILTERGROUP filterSku
        FILTER 'Только отмеченные' 'F10' inPromotionConditionSku(sg, sk)

    TREE treeStore a=STRING[3], t=chainStores, st=storeType
    PROPERTIES READONLY OBJVALUE(a), name(t), name(st)

    FILTERS stringEqualsAll(a)
    FILTERS inChainStoresStoreType (t, st)

    OBJECTS s=store
    PROPERTIES(s) READONLY name, addressStore, nameCompanyStore

    FILTERS inChainStoresStoreTypeStore(t, st, s)

    PROPERTIES(sh, s) inPromotionStore
    FILTERGROUP filterStore
        FILTER 'Только отмеченные' 'F9' inPromotionStore(sh, s)

    OBJECTS dis= discountCard
    PROPERTIES(dis)    READONLY numberObject, seriesObject, nameClientDiscountCard
    PROPERTIES(sh, dis) inPromotionDiscountCard
    FILTERGROUP filterDiscountCard
        FILTER 'Только отмеченные' 'F8' inPromotionDiscountCard(sh, dis)

    EDIT promotion OBJECT sh
;

DESIGN promotion FROM DEFAULT {
    main{
        preferredSize = (1024, 768);

        ADD sh.box {

            childConstraints = TO THE RIGHT;
            NEW row01 {
                title = 'Название';
                childConstraints = TO THE BOTTOM;
                ADD PROPERTY(name(sh)) {
                    preferredCharWidth = 30;

                }
                ADD PROPERTY(namePromotionGroupPromotion(sh));
            }
            ADD sh.numberedGroup {
                childConstraints = TO THE BOTTOM;
            }
            NEW row11 {
                title = 'Диапозон дат';
                childConstraints = TO THE BOTTOM;
                ADD PROPERTY(dateFromPromotion);
                ADD PROPERTY(dateToPromotion);
            }
            NEW row12 {
                title = 'Часы';
                childConstraints = TO THE BOTTOM;
                ADD PROPERTY(timeOfFromPromotion);
                ADD PROPERTY(timeOfToPromotion);
            }
            NEW row13 {
                title = 'Суммы';
                childConstraints = TO THE BOTTOM;
                ADD PROPERTY(minSumBillPromotion);
                ADD PROPERTY(maxSumBillPromotion);
            }
            NEW row14 {
                title = 'Дисконтные карты';
                childConstraints = TO THE BOTTOM;
                ADD PROPERTY(hasDiscountCardPromotion);
                ADD PROPERTY(minCumulativeSumPromotion);
                ADD PROPERTY(maxCumulativeSumPromotion);
                ADD PROPERTY(allDiscountCardPromotion);
            }
        }

        NEW row2 {
            fillVertical = 2;
            fillHorizontal = 3;
            type = TABBED;
            NEW row21 {
                title = 'Условия';
                type = SPLITV;
                childConstraints = TO THE BOTTOM;
                ADD sg.box {
                    fillVertical = 1;
                }
                NEW row212 {
                    type = SPLITH;
                    title = 'Товары';
                    childConstraints = TO THE RIGHT;
                    NEW skuGroupContainer {
                        type = SPLITV;
                        childConstraints = TO THE BOTTOM;
                        ADD skuTree.tree.box;
                        ADD dg.box {
                            childConstraints = TO THE BOTTOM;
                            ADD dg.panel BEFORE dg.grid.box;
                        }
                    }
                    ADD sk.box {
                        fillHorizontal = 2;
                    }
                }
            }

            NEW row22 {
                type = SPLITH;
                title = 'Магазины';
                childConstraints = TO THE RIGHT;
                ADD treeStore.tree.box;
                ADD s.box {
                    fillHorizontal = 2;
                }
            }
            ADD dis.box;
            ADD d.box;
        }

        ADD functions.box;
    }
}



FORM promotions 'Акции'
    OBJECTS sh=promotion
    PROPERTIES(sh)     READONLY name, numberObject, seriesObject, dateFromPromotion, dateToPromotion, storePromotion,
                                timeOfFromPromotion, timeOfToPromotion, minSumBillPromotion, maxSumBillPromotion, hasDiscountCardPromotion, minCumulativeSumPromotion, maxCumulativeSumPromotion, allDiscountCardPromotion
    PROPERTIES(sh)     ADDFORM, EDITFORM, delete

    PROPERTIES (sh) READONLY FORCE PANEL nameUserCreated, timeCreated, hostnameComputerCreated

;

FORM promotionGroup 'Группа акций'
    OBJECTS st=promotionGroup FIXED PANEL
    PROPERTIES(st)     name

    OBJECTS sh=promotion
    PROPERTIES(sh)     userOrderPromotion
    PROPERTIES(sh)     READONLY name, seriesObject, numberObject, dateFromPromotion, dateToPromotion, storePromotion,
                                timeOfFromPromotion, timeOfToPromotion, minSumBillPromotion, maxSumBillPromotion, hasDiscountCardPromotion, minCumulativeSumPromotion, maxCumulativeSumPromotion, allDiscountCardPromotion
    PROPERTIES(sh)     ADDFORM, EDITFORM, delete
    ORDER BY userOrderPromotion

    FILTERS promotionGroupPromotion(sh)==st

    EDIT promotionGroup OBJECT st
;

FORM promotionGroups 'Группы акций'
    OBJECTS st=promotionGroup
    PROPERTIES(st)     READONLY name
    PROPERTIES(st)     ADDFORM, EDITFORM, delete

    OBJECTS sh=promotion
    PROPERTIES(sh)     READONLY orderPromotion
    PROPERTIES(sh)     READONLY name, seriesObject, numberObject, dateFromPromotion, dateToPromotion, storePromotion,
                                timeOfFromPromotion, timeOfToPromotion, minSumBillPromotion, maxSumBillPromotion, hasDiscountCardPromotion, minCumulativeSumPromotion, maxCumulativeSumPromotion, allDiscountCardPromotion
    PROPERTIES(sh)     ADDFORM, EDITFORM, delete
    ORDER BY orderPromotion

    FILTERS promotionGroupPromotion(sh)==st

;

EXTEND FORM discountCard
    OBJECTS p=promotion
    PROPERTIES(p, d) inPromotionDiscountCard
    PROPERTIES(p) READONLY name, numberObject, seriesObject, dateFromPromotion, dateToPromotion, storePromotion,
                           timeOfFromPromotion, timeOfToPromotion, minSumBillPromotion, maxSumBillPromotion, hasDiscountCardPromotion, minCumulativeSumPromotion, maxCumulativeSumPromotion, allDiscountCardPromotion
    FILTERS hasDiscountCardPromotion(p)
;

EXTEND DESIGN discountCard {
    ADD p.box BEFORE functions.box;
}

NAVIGATOR {
    NEW retailCRMNavigator 'CRM' {
        ADD promotions;
        ADD promotionGroups;
        ADD discountCards;
        ADD clients;
    }
}