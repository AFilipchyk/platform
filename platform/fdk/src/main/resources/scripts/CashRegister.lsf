MODULE CashRegister;

REQUIRE System, Machinery, Store, LegalEntity;

// Группы
CLASS groupCashRegister 'Группы касс' : groupMachinery;

departmentStoreGroupCashRegister = DATA departmentStore (groupCashRegister);
stockGroupMachinery (groupMachinery) += departmentStoreGroupCashRegister(groupMachinery);

TABLE groupCashRegisterCustomUser(groupCashRegister, customUser);
operatorNumberGroupCashRegisterCustomUser 'Номер в группе касс' = DATA INTEGER (groupCashRegister, customUser);

// Модели
CLASS cashRegisterModel 'Модель касс' : model;

dateToCashRegisterModel 'Дата, до которой модель внесена в реестр' = DATA DATE (cashRegisterModel) IN baseGroup;

FORM cashRegisterModel 'Модель касс'
    OBJECTS c=cashRegisterModel FIXED PANEL
    PROPERTIES(c) name, sidModel, noteModel, handlerModel, dateToCashRegisterModel
    EDIT cashRegisterModel OBJECT c
;

FORM cashRegistersModels 'Модели касс'
    OBJECTS c=cashRegisterModel
    PROPERTIES(c) READONLY objectClassName, name, sidModel, noteModel, handlerModel
    PROPERTIES(c) ADDFORM, EDITFORM, delete
    DIALOG cashRegisterModel OBJECT c
;

// Кассы
CLASS cashRegister 'Касса' : machinery;
isGroupCashRegister (machinery) = machinery IS groupCashRegister;

groupCashRegisterCashRegister = DATA groupCashRegister (cashRegister);
groupMachineryMachinery(machinery) += groupCashRegisterCashRegister(machinery);

cashRegisterModelCashRegister = DATA cashRegisterModel (cashRegister);
modelMachinery(machinery) += cashRegisterModelCashRegister(machinery);

departmentStoreCashRegister (cashRegister) = departmentStoreGroupCashRegister(groupCashRegisterCashRegister(cashRegister));

roundSalesGroupCashRegister 'Округление цен до' = DATA INTEGER (groupMachinery) IN baseGroup;

numberCashRegister 'Регистрационный номер кассы' = DATA STRING[100] (cashRegister) IN baseGroup;
cashRegisterNumber (cashRegister) = GROUP UNIQUE cashRegister BY numberCashRegister (cashRegister) WHERE cashRegister IS cashRegister;

dateCashRegister 'Дата фискализации кассового аппарата' = DATA DATE (cashRegister) IN baseGroup;

directoryCashRegister 'Директория обмена с кассой' = DATA STRING[100] (cashRegister) IN baseGroup;

comPortCashRegister 'Порт кассы' = DATA INTEGER (cashRegister) IN baseGroup;
baudRateCashRegister 'Скорость кассы' = DATA INTEGER (cashRegister) IN baseGroup;
countryCashRegister 'Страна кассы' (cashRegister) = countryStock(stockGroupMachinery(groupCashRegisterCashRegister(cashRegister)));

userLegalEntityCashRegister (cashRegister) = DATA legalEntity (cashRegister);
legalEntityCashRegister (cashRegister) = UNION OVERRIDE legalEntityDepartmentStore(departmentStoreCashRegister(cashRegister)),
                                                    userLegalEntityCashRegister(cashRegister);

nameLegalEntityCashRegister 'Владелец кассы' (cashRegister) = name(legalEntityCashRegister(cashRegister));

computerCashRegister = DATA computer (cashRegister);
hostnameComputerCashRegister 'Компьютер' (cashRegister) = hostname(computerCashRegister(cashRegister)) IN baseGroup;

cashRegisterComputer (computer) = GROUP UNIQUE cashRegister BY computerCashRegister(cashRegister) WHERE cashRegister IS cashRegister PERSISTENT;

currentCashRegister 'Текущая касса' = cashRegisterComputer(currentComputer());

departmentStoreCurrentCashRegister 'Подразделение' = departmentStoreCashRegister(currentCashRegister());
numberCurrentCashRegister 'Номер кассы' = numberCashRegister(currentCashRegister());
sidModelCurrentCashRegister 'Код модели' = sidModelMachinery(currentCashRegister());
comPortCurrentCashRegister 'Порт' = comPortCashRegister(currentCashRegister());
baudRateCurrentCashRegister 'Скорость весов' = baudRateCashRegister(currentCashRegister());
nppMachineryCurrentCashRegister 'Номер кассового места' = nppMachinery(currentCashRegister());
operatorNumberCurrentCashRegister (user) = operatorNumberGroupCashRegisterCustomUser(groupCashRegisterCashRegister(currentCashRegister()), user);
countryCurrentCashRegister 'Страна кассы' = countryCashRegister(currentCashRegister());

FORM cashRegister 'Касса'
    OBJECTS c=cashRegister FIXED PANEL
    PROPERTIES(c) nameGroupMachineryMachinery, nppMachinery, descriptionMachinery, portMachinery, numberCashRegister, directoryCashRegister, comPortCashRegister, baudRateCashRegister, nameModelMachinery,
                  dateCashRegister, hostnameComputerCashRegister
    EDIT cashRegister OBJECT c
;

FORM groupCashRegister 'Группа касс'
    OBJECTS grc=groupCashRegister FIXED PANEL
    PROPERTIES(grc) nameStockGroupMachinery, nameEquipmentServerGroupMachinery, nameGroupMachinery,
                    roundSalesGroupCashRegister,
                    filterSkuGroupMachinery, showFilterSkuGroupMachinery SHOWIF filterSkuGroupMachinery(grc),
                    namePriceListTypeGroupMachinery

    OBJECTS c=cashRegister
    PROPERTIES(c)   nameGroupMachineryMachinery, nppMachinery, descriptionMachinery, portMachinery, numberCashRegister,
                    directoryCashRegister, comPortCashRegister, baudRateCashRegister, nameModelMachinery,
                    dateCashRegister, hostnameComputerCashRegister, nameLegalEntityCashRegister, ADDOBJ, delete

    OBJECTS cu=customUser
    PROPERTIES(cu) userLogin, userFirstName, userLastName, sidMainRoleCustomUser
    PROPERTIES(grc, cu) operatorNumberGroupCashRegisterCustomUser

    FILTERGROUP filters2
        FILTER 'Показывать только для данной группы' 'F10' groupCashRegisterCashRegister(c) == grc DEFAULT

    EDIT groupCashRegister OBJECT grc
;

FORM groupsCashRegister 'Группы касс'
    OBJECTS grc=groupCashRegister, c=cashRegister
    PROPERTIES(grc)  READONLY nameStockGroupMachinery, nameLegalEntityCashRegister, nameEquipmentServerGroupMachinery, nameGroupMachinery,
                     roundSalesGroupCashRegister, filterSkuGroupMachinery
    PROPERTIES(grc)  ADDFORM, EDITFORM, delete

    PROPERTIES(c) READONLY nppMachinery, descriptionMachinery, portMachinery,
                           numberCashRegister, directoryCashRegister, comPortCashRegister, baudRateCashRegister, nameModelMachinery,
                           dateCashRegister, nameLegalEntityCashRegister
    FILTERS groupCashRegisterCashRegister(c) == grc
;

DESIGN groupsCashRegister FROM DEFAULT {
    NEW topContainer {
        type = SPLITV;
        childConstraints = TO THE BOTTOM;

        ADD grc.box;
        ADD c.box;
    }
    ADD functions.box;
}

// ----------------------------------------- Загрузка в ВУ -------------------------------------- //

CLASS cashRegisterPriceTransaction 'Загрузка прайса в кассы' : machineryPriceTransaction;
groupCashRegisterCashRegisterPriceTransaction 'Группа касс' = DATA groupCashRegister (cashRegisterPriceTransaction);
groupMachineryMachineryPriceTransaction (transaction) += groupCashRegisterCashRegisterPriceTransaction(transaction);

EXTEND FORM groupMachineryInput
    PROPERTIES(m) READONLY FORCE GRID SHOWIF isGroupCashRegister(g) numberCashRegister, directoryCashRegister, comPortCashRegister, baudRateCashRegister,
                                                                    nameModelMachinery, dateCashRegister
;

createMachineryPriceTransactionGroupMachinery (groupMachinery) += ACTION (groupMachinery) {
    IF groupMachinery IS groupCashRegister THEN
        ADDOBJ cashRegisterPriceTransaction;
}

// ------------------------------------------------ Стандартные значения ------------------------------------ //

loadDefaultCashRegisterModel 'Добавить модель касс' = ACTION (iname, isid, ihandler)  {
    ADDOBJ cashRegisterModel;
    FOR crm == addedObject() DO {
         SET name(crm) <- iname;
         SET sidModel(crm) <- isid;
         SET handlerModel(crm) <- ihandler;
    }
}

loadDefaultCashRegisterModels 'Загрузить стандартные модели касс' = ACTION () {
    EXEC loadDefaultCashRegisterModel('Кассы EasyCSV', 'EasyCSV', 'equ.clt.handler.easy.EasyCSVHandler');
    EXEC loadDefaultCashRegisterModel('Кассы Kristal', 'Kristal', 'equ.clt.handler.kristal.KristalHandler');
    EXEC loadDefaultCashRegisterModel('Кассы Maxishop', 'Maxishop', 'equ.clt.handler.maxishop.MaxishopHandler');
    EXEC loadDefaultCashRegisterModel('Кассы UKM4', 'Ukm4', 'equ.clt.handler.ukm4.UKM4Handler');
    EXEC loadDefaultCashRegisterModel('Фискальный регистратор DateCS', 'DateCS', '');
} IN loadDefaultGroup;

@implementLoadDefaultData(loadDefaultCashRegisterModels);

// --------------------------------------- Генерация групп касс -------------------------------- //
loadDefaultGroupCashRegister 'Сгенерировать группу касс' = ACTION(equipmentServer, stock, model, num) {
    ADDOBJ groupCashRegister;
    FOR g == addedObject() DO {
        SET departmentStoreGroupCashRegister(g) <- stock AS stock;
        SET equipmentServerGroupMachinery(g) <- equipmentServer AS equipmentServer;
        SET nameGroupMachinery(g) <- 'Группа касс по умолчанию' AS STRING[110];

        LOCAL numCashRegister = INTEGER();
        SET numCashRegister() <- 0;
        WHILE numCashRegister() < (num AS INTEGER) DO {
            ADDOBJ cashRegister;
            FOR c == addedObject() DO {
                SET groupCashRegisterCashRegister(c) <- g AS groupCashRegister;
                SET numCashRegister() <- numCashRegister() + 1;
                SET nppMachinery(c) <- numCashRegister();
                SET cashRegisterModelCashRegister(c) <- model AS cashRegisterModel;
            }
        }
    }
}

EXTEND FORM defaultData
    OBJECTS         crm=cashRegisterModel FIXED PANEL
    PROPERTIES(crm) SELECTOR name

    OBJECTS         cCashReg=INTEGER FIXED PANEL
    PROPERTIES(cCashReg)   intValueCashRegister = OBJVALUE
    PROPERTIES (es, s, crm, cCashReg) loadDefaultGroupCashRegister
;

EXTEND DESIGN defaultData {
    PROPERTY(name(crm)) {
        caption = 'Модель касс';
    }
    PROPERTY(intValueCashRegister) {
        caption = 'Количество касс';
    }
    machinery {
        NEW cashRegister {
            title = 'Кассы';
            ADD PROPERTY(loadDefaultCashRegisterModels);
            ADD PROPERTY(name(crm));
            ADD PROPERTY(intValueCashRegister);
            ADD PROPERTY(loadDefaultGroupCashRegister);
        }
    }
}