MODULE SalePurchaseInvoiceShipment;

REQUIRE PurchaseShipment, SalePurchaseInvoice;

PRIORITY Sale;

//----------------------------------------------------------------------------//

GROUP shipmentGroup 'Информация о поставке' : base;

// Галочка по созданию акта расценки на закупке
@defineDocumentInterfaceCreate (invoice, createPurchaseShipment, 'Создать поставку (закупка)');
createPurchaseShipmentUserInvoice (invoice) <- createPurchaseShipmentOperation(operationUserInvoice(invoice))
    WHEN CHANGED(operationUserInvoice(invoice));

backgroundPurchaseShipmentInvoice 'Цвет' (invoice) = RGB(238, 250, 200) IF invoice IS Invoice;
//--
createShipmentInvoice(invoice) += createPurchaseShipmentInvoice(invoicePurchaseInvoice(invoice));

@defineDocumentInterfaceDetailPricePrefix(invoice, purchaseShipment, ' учетная (закупка)');
@defineDocumentInterfaceDetailQuantityPrefix (invoice, purchaseShipment, ' поставлено (закупка)');
purchaseShipmentQuantityUserInvoiceDetail(detail) <- quantityUserInvoiceDetail(detail) WHEN CHANGED(quantityUserInvoiceDetail(detail));

@defineDocumentInterfaceDetailDataSumPrefix (invoice, purchaseShipment, ' учетная (закупка)');
@deriveDocumentDetailSumPrefix(userInvoice, purchaseShipment, currency, purchaseShipmentQuantity);

@defineDocumentInterfaceHeaderCreateShipment (invoice);
@defineDocumentInterfaceHeaderSumPrefix (invoice, purchaseShipment, ' учетная (закупка)');

Purchase.shipmentQuantityInvoiceDetail(detail) += purchaseShipmentQuantityInvoiceDetail(invoiceDetailPurchaseInvoiceDetail(detail));
Purchase.shipmentPriceInvoiceDetail(detail) += purchaseShipmentPriceInvoiceDetail(invoiceDetailPurchaseInvoiceDetail(detail));
Purchase.shipmentSumInvoiceDetail (detail) += purchaseShipmentSumInvoiceDetail(invoiceDetailPurchaseInvoiceDetail(detail));

EXTEND FORM userInvoice
    PROPERTIES(i) BACKGROUND backgroundPurchaseShipmentInvoice(i) SHOWIF createPurchaseInvoiceUserInvoice(i) createPurchaseShipmentUserInvoice
    PROPERTIES(i) BACKGROUND backgroundPurchaseShipmentInvoice(i) SHOWIF createPurchaseShipmentInvoice(i) purchaseShipmentSumUserInvoiceDetailUserInvoice
    PROPERTIES(d) BEFORE delete(d) SHOWIF createPurchaseShipmentInvoice(i) BACKGROUND backgroundPurchaseShipmentInvoice(i)
                  nameCustomerStockUserInvoiceDetail, purchaseShipmentPriceUserInvoiceDetail, purchaseShipmentSumUserInvoiceDetail
    PROPERTIES(d) purchaseShipmentQuantityUserInvoiceDetail AFTER quantityUserInvoiceDetail SHOWIF createPurchaseShipmentInvoice(i) BACKGROUND backgroundPurchaseShipmentInvoice(i)
;
EXTEND DESIGN userInvoice {
    headerCreateDocuments{
        NEW headerCreatePurchaseShipment {
            title = 'Поставка (закупка)';
            ADD PROPERTY(createPurchaseShipmentUserInvoice);
        }
    }
}

EXTEND FORM invoices
    PROPERTIES(i) READONLY BACKGROUND backgroundPurchaseShipmentInvoice(i) createPurchaseShipmentInvoice
    PROPERTIES(i) READONLY BACKGROUND backgroundPurchaseShipmentInvoice(i) purchaseShipmentSumInvoiceDetailInvoice BEFORE ordersInvoice
    PROPERTIES(d) READONLY SHOWIF createPurchaseShipmentInvoice(i) BACKGROUND backgroundPurchaseShipmentInvoice(i)
                  nameCustomerStockInvoiceDetail, purchaseShipmentPriceInvoiceDetail, purchaseShipmentSumInvoiceDetail
    PROPERTIES(d) READONLY purchaseShipmentQuantityInvoiceDetail AFTER quantityInvoiceDetail SHOWIF createPurchaseShipmentInvoice(i) BACKGROUND backgroundPurchaseShipmentInvoice(i)
;

// ------------------------------- Расчет учетной цены для поставки ------------------------ //
overPurchaseShipmentPriceUserInvoiceDetail = ABSTRACT NUMERIC[14,2] (UserInvoiceDetail) EXCLUSIVE PERSISTENT;
calcPurchaseShipmentPriceUserInvoiceDetail (detail) = priceUserInvoiceDetail(detail) OR overPurchaseShipmentPriceUserInvoiceDetail(detail) PERSISTENT;

extraPurchaseShipmentPriceUserInvoiceDetail = ABSTRACT NUMERIC[14,2] (UserInvoiceDetail) PERSISTENT;    // на всякий случай

// Цены учетные

purchaseShipmentPriceUserInvoiceDetail(detail) <- calcPurchaseShipmentPriceUserInvoiceDetail(detail) (+) extraPurchaseShipmentPriceUserInvoiceDetail(detail) WHEN
    (CHANGED(calcPurchaseShipmentPriceUserInvoiceDetail(detail)) OR
     CHANGED(extraPurchaseShipmentPriceUserInvoiceDetail(detail)) OR
     CHANGED(createPurchaseShipmentUserInvoiceDetail(detail)))
        AND createPurchaseShipmentUserInvoiceDetail(detail);











