MODULE SaleShipment;

REQUIRE Shipment, SaleInvoice, SaleOperation;

NAMESPACE Sale;


//----------------------------------------------- Поставка ---------------------------------------------------//

@defineShipment(' (продажа)', supplierStock, showSalePack, 'Отображать упаковку', salePack);
@defineShipmentBatch(supplierStock);

@defineShipmentStockDestination(supplierStock, customerStock);

// Берем учетную цену
@deriveDocumentDetailPriceSystemLedgerPriceListTypeBatch (userInvoice, accountPriceListType, shipment, , sku, supplierStock);
@deriveDocumentDetailPriceSystemLedgerPriceListTypeBatch (userShipment, accountPriceListType, , , sku, supplierStock);

// Проводим по регистру
@implementSkuLedgerOutFIFO(shipmentDetail, sku, supplierStock);
quantityOutFIFOSkuLedger (ledger) += quantityShipmentDetail (ledger);
@implementSkuLedgerOutFIFOBatchBalance(shipmentDetail, supplierStock);
sumOutSkuLedger(ledger) += sumShipmentDetail(ledger);

costShipmentDetailBatch(detail, batch) += costSkuLedgerBatch(detail, batch) IF detail IS shipmentDetail;

@implementStockDocumentLedgerOut(shipment, supplierStock);
sumOutStockDocumentLedger (ledger) += sumShipmentDetailShipment(ledger);
sumItemOutStockDocumentLedger (ledger) += sumItemShipmentDetailShipment(ledger);
sumContainerOutStockDocumentLedger (ledger) += sumContainerShipmentDetailShipment(ledger);

CONSTRAINT supplierUserShipment(userShipment) AND NOT isCompanyLegalEntity(supplierUserShipment(userShipment))
    CHECKED BY supplierUserShipment MESSAGE 'Для поставки выбрано в качестве поставщика организация, не являющаяся компанией';
CONSTRAINT customerUserShipment(userShipment) AND NOT isCustomerLegalEntity(customerUserShipment(userShipment))
    CHECKED BY customerUserShipment MESSAGE 'Для поставки выбрано в качестве покупателя организация, не являющаяся покупателем';

//------------------------------ Создание аггрегированных объектов через операции -------------------------//

createShipmentSaleOperation 'Создавать поставку' = DATA BOOLEAN (saleOperation) IN createGroup;
createShipmentInvoice(invoice) <- TRUE IF createShipmentSaleOperation(saleOperationInvoice(invoice))
    WHEN CHANGED(saleOperationInvoice(invoice));

EXTEND FORM saleOperation
    PROPERTIES(o) createShipmentSaleOperation
;

EXTEND DESIGN saleOperation{
    tabContainer{
        NEW aggrContainer{
            caption = 'Создание объектов';
            ADD PROPERTY(createShipmentSaleOperation);
        }
    }
}

NAVIGATOR {
    saleSaleNavigator {
        ADD shipments;
    }
}