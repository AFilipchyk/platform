MODULE Scales;

REQUIRE System, Machinery;

// Группы
CLASS groupScales 'Группы весов' : groupMachinery;

stockGroupScales = DATA stock (groupScales);
stockGroupMachinery (groupMachinery) += stockGroupScales(groupMachinery);

directoryGroupScales 'Каталог обмена' = DATA STRING[200] (groupScales) IN baseGroup;
pieceItemCodeGroupScales 'Код для штучных товаров' = DATA STRING[2] (groupScales) IN baseGroup;
weightItemCodeGroupScales 'Код для весовых товаров' = DATA STRING[2] (groupScales) IN baseGroup;

// Модели
CLASS scalesModel 'Модель весов' : model;

scalesModelName (scalesModel) = GROUP UNIQUE scalesModel BY name (scalesModel) WHERE scalesModel IS scalesModel;

maxTextScalesModel 'MAX допустимое колич. дополнительных текстов' = DATA INTEGER (scalesModel) IN baseGroup;
compositionScalesModel 'Число знаков в доп.тексте (составе товара)' = DATA INTEGER (scalesModel) IN baseGroup;

FORM scalesModel 'Модель весов'
    OBJECTS s=scalesModel FIXED PANEL
    PROPERTIES(s) name, noteModel, handlerModel, maxProductModel, maxTextScalesModel,
                  compositionScalesModel
    EDIT scalesModel OBJECT s
;

FORM scalesModels 'Модели весов'
    OBJECTS m=scalesModel
    PROPERTIES(m) READONLY objectClassName, name, maxProductModel, noteModel, handlerModel
    PROPERTIES(m) ADDFORM, EDITFORM, delete
;

// Весы
CLASS scales 'Весы' : machinery;
isGroupScales (machinery) = machinery IS groupScales;

groupScalesScales = DATA groupScales (scales);
groupMachineryMachinery(machinery) += groupScalesScales(machinery);

scalesModelScales = DATA scalesModel (scales);
modelMachinery(machinery) += scalesModelScales(machinery);

numberScales 'Заводской(серийный) номер' = DATA STRING[100] (scales) IN baseGroup;
dateScales 'Дата следующей обязательной поверки' = DATA DATE (scales) IN baseGroup;

FORM scales 'Весы'
    OBJECTS s=scales FIXED PANEL
    PROPERTIES(s) nameGroupMachineryMachinery, nppMachinery, descriptionMachinery, portMachinery, numberScales, nameModelMachinery,
                  dateScales
    EDIT scales OBJECT s
;

FORM groupScales 'Группа весов'
    OBJECTS grs=groupScales FIXED PANEL
    PROPERTIES(grs) nameStockGroupMachinery, nameEquipmentServerGroupMachinery, nameGroupMachinery,
                    directoryGroupScales,
                    pieceItemCodeGroupScales, weightItemCodeGroupScales,
                    filterSkuGroupMachinery, showFilterSkuGroupMachinery SHOWIF filterSkuGroupMachinery(grs)

    OBJECTS s=scales
    PROPERTIES(s)   nameGroupMachineryMachinery, nppMachinery, descriptionMachinery, portMachinery, numberScales, nameModelMachinery,
                    dateScales, ADDOBJ, delete
    FILTERGROUP filters1
        FILTER 'Показывать только для данной группы' 'F10' groupScalesScales(s) == grs DEFAULT
    EDIT groupScales OBJECT grs
;

FORM groupsScales 'Группы весов'
    OBJECTS grs=groupScales
    PROPERTIES(grs) READONLY nameStockGroupMachinery, nameEquipmentServerGroupMachinery, nameGroupMachinery,
                         filterSkuGroupMachinery, directoryGroupScales,
                         pieceItemCodeGroupScales, weightItemCodeGroupScales
    PROPERTIES(grs) ADDFORM, EDITFORM, delete

    OBJECTS s=scales
    PROPERTIES(s)   READONLY nppMachinery, descriptionMachinery, portMachinery, numberScales, nameModelMachinery,
                             dateScales
    FILTERS groupScalesScales(s) == grs
;

DESIGN groupsScales FROM DEFAULT {
    NEW topContainer BEFORE functions.box {
        type = SPLITV;
        childConstraints = TO THE BOTTOM;

        ADD grs.box;
        ADD s.box;
    }
}

// Ячейки
CLASS cellScales 'Ячейка весов';

groupScalesCellScales = DATA groupScales (cellScales);

compositionCellScales 'Ячейка' = DATA TEXT (cellScales);
numberCellScales 'Номер' = PARTITION SUM 1 IF c IS cellScales BY groupScalesCellScales (c) ORDER c;

groupScalesCompositionToCellScales (groupScales, composition) = GROUP UNIQUE cellScales
            BY groupScalesCellScales (cellScales), compositionCellScales (cellScales) WHERE cellScales IS cellScales;

FORM cellScales 'Ячейки весов'
    OBJECTS grs=groupScales
        PROPERTIES(grs) READONLY nameStockGroupMachinery, nameEquipmentServerGroupMachinery, nameGroupMachinery,
                             filterSkuGroupMachinery, directoryGroupScales,
                             pieceItemCodeGroupScales, weightItemCodeGroupScales

    OBJECTS cs=cellScales
    PROPERTIES(cs)  numberCellScales, compositionCellScales, delete

    FILTERS groupScalesCellScales(cs) == grs
;

DESIGN cellScales FROM DEFAULT {
    NEW topContainer{
        type = SPLITV;
        childConstraints = TO THE BOTTOM;

        ADD grs.box;
        ADD cs.box;
    }
    ADD functions.box;
}

//---------------------------- Этикетки в весы ----------------------------------------//

CLASS labelFormat 'Формат этикетки' : named;

idLabelFormat 'Код формата этикетки' = DATA INTEGER (labelFormat) IN baseGroup;
idToLabelFormat (labelFormat) = GROUP UNIQUE labelFormat BY idLabelFormat(labelFormat) WHERE labelFormat IS labelFormat;

fileLabelFormat = DATA CUSTOMFILE (labelFormat);
loadFileLabelFormat 'Загрузить файл этикетки' (labelFormat) = ACTION LOADFILE fileLabelFormat(labelFormat) IN baseGroup;

fileMessageLabelFormat = DATA CUSTOMFILE (labelFormat);
loadFileMessageLabelFormat 'Загрузить файл спец.сообщений' (labelFormat) = ACTION LOADFILE fileMessageLabelFormat(labelFormat) IN baseGroup;

scalesModelLabelFormat 'Модель весов'= DATA scalesModel (labelFormat);
nameScalesModelLabelFormat 'Модель весов' (labelFormat) = name(scalesModelLabelFormat(labelFormat));

FORM labelFormats 'Форматы этикеток весов'
    OBJECTS c=labelFormat
    PROPERTIES(c) idLabelFormat, name, nameScalesModelLabelFormat, loadFileLabelFormat, loadFileMessageLabelFormat
    PROPERTIES(c) ADDFORM, EDITFORM, delete
;

// ----------------------------------------- Загрузка в ВУ -------------------------------------- //

CLASS scalesPriceTransaction 'Загрузка прайса в весы' : machineryPriceTransaction;
groupScalesScalesPriceTransaction 'Группа весов' = DATA groupScales (scalesPriceTransaction);
groupMachineryMachineryPriceTransaction (transaction) += groupScalesScalesPriceTransaction(transaction);

EXTEND FORM groupMachineryInput
    PROPERTIES(m) READONLY FORCE GRID SHOWIF isGroupScales(g)       numberScales, nameModelMachinery
;

// ------------------------------------------------ Стандартные значения ------------------------------------ //

loadDefaultScalesModel 'Добавить модель весов' = ACTION (stringOne, stringTwo)  {
    ADDOBJ scalesModel;
    FOR sm == addedObject() DO {
         SET name(sm) <- stringOne AS STRING[110];
         SET handlerModel(sm) <- stringTwo AS STRING[200];
    }
}

loadDefaultScalesModels 'Загрузить стандартные модели весов' = ACTION () {
    EXEC loadDefaultScalesModel('Весы Digi', 'equ.clt.handler.digi.DigiHandler');
    EXEC loadDefaultScalesModel('Весы EasyCSV', 'equ.clt.handler.easy.EasyCSVHandler');
    EXEC loadDefaultScalesModel('Весы Штрих-Принт', 'equ.clt.handler.shtrihPrint.ShtrihPrintHandler');
} IN loadDefaultGroup;

@implementLoadDefaultData(loadDefaultScalesModels);

// --------------------------------------- Генерация групп весов -------------------------------- //
loadDefaultGroupScales 'Сгенерировать группу весов' = ACTION(equipmentServer, stock, model, num) {
    ADDOBJ groupScales;
    FOR g == addedObject() DO {
        SET stockGroupScales(g) <- stock AS stock;
        SET equipmentServerGroupMachinery(g) <- equipmentServer AS equipmentServer;
        SET nameGroupMachinery(g) <- 'Группа весов по умолчанию' AS STRING[110];

        LOCAL numScales = INTEGER();
        SET numScales() <- 0;
        WHILE numScales() < (num AS INTEGER) DO {
            ADDOBJ scales;
            FOR s == addedObject() DO {
                SET groupScalesScales(s) <- g AS groupScales;
                SET numScales() <- numScales() + 1;
                SET nppMachinery(s) <- numScales();
                SET scalesModelScales(s) <- model AS scalesModel;
            }
        }
    }
};

EXTEND FORM defaultData
    OBJECTS         sm=scalesModel FIXED PANEL
    PROPERTIES(sm)  SELECTOR name

    OBJECTS         cScales=INTEGER FIXED PANEL
    PROPERTIES(cScales)   intValueScales = OBJVALUE
    PROPERTIES(es, s, sm, cScales)  loadDefaultGroupScales
;

EXTEND DESIGN defaultData {
    PROPERTY(name(sm)) {
        caption = 'Модель весов';
    }
    PROPERTY(intValueScales) {
        caption = 'Количество весов';
    }
    machinery {
        NEW scales {
            title = 'Весы';
            ADD PROPERTY(loadDefaultScalesModels);
            ADD PROPERTY(name(sm));
            ADD PROPERTY(intValueScales);
            ADD PROPERTY(loadDefaultGroupScales);
        }
    }
}