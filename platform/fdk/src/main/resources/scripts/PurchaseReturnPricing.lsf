MODULE PurchaseReturnPricing;

REQUIRE Pricing, PurchaseReturnInvoice, PurchaseReturnShipment;

NAMESPACE PurchaseReturn;

// ------------------------------------- Автоматическое создание расценки для документа -------------------- //

@definePricingAggregation(invoice, ' (покупка-возврат)', 'Акт расценки при возврате', supplier, 'Поставщик');

overShipmentPriceUserInvoiceDetail(detail) += retailPriceUserInvoiceDetail(detail)
    IF stockUserInvoiceDetail(detail) IS departmentStore AND NOT costLedgerDepartmentStore(stockUserInvoiceDetail(detail));
//-- аггр.объект

retailMarkupUserInvoiceDetail(userInvoiceDetail)  <- [round2((((X - X*Y/(100+Y))/Z)-1)*100)](
    0.0 IF userInvoiceDetail IS userInvoiceDetail OR retailPriceUserInvoiceDetail(userInvoiceDetail),
    0.0 IF userInvoiceDetail IS userInvoiceDetail OR valueRetailVATUserInvoiceDetail(userInvoiceDetail),
    priceUserInvoiceDetail(userInvoiceDetail))
    WHEN CHANGED(retailPriceUserInvoiceDetail(userInvoiceDetail)) OR CHANGED (retailVATUserInvoiceDetail(userInvoiceDetail)) OR CHANGED(priceUserInvoiceDetail(userInvoiceDetail));

@derivePrevPriceLedgerOnSkuChangePrefix(retailVAT, userInvoice, retailVAT, sku, stock);
@derivePrevPriceLedgerOnSkuChangePrefix(retailPrice, userInvoice, retailPrice, sku, stock);

skipChangeLedgerPricing(pricing) += pricing IS invoicePricing;
isReturnPricing(pricing) +=  pricing IS invoicePricing;
//--

