MODULE Utils;

IMPORT BaseLogicsModule;

ceil = FORMULA DOUBLE 'ceil($1)';

castToString255 = FORMULA STRING[255] 'CAST($1 AS character(255))';
castToString3 = FORMULA STRING[3] 'CAST($1 AS character(3))';
isWordInCSV = FORMULA INTEGER 'CASE WHEN CAST($1 AS text)=ANY(string_to_array($2,\',\')) THEN 1 ELSE 0 END';

roundM1 (number) = round(number, -1);
round0 (number) = round(number, 0);
round1 (number) = round(number, 1);
round2 (number) = round(number, 2);
round3 (number) = round(number, 3);

CLASS doubleNamed 'Объект с кратким наименованием' : named;

shortName 'Краткое наименование' = DATA STRING[5] (doubleNamed) IN baseGroup;

CLASS STATIC yesNo 'Логическое' {
    yes 'ДА',
    no 'НЕТ'
};

classSIDToYesNo 'Да/нет по ИД'(string) = GROUP UNIQUE yesNo BY classSID (yesNo) WHERE yesNo IS yesNo;

CLASS language 'Язык' : doubleNamed;

stringEqualsAll(string) = string == 'Все';

FORM dialogDate 'Выбор даты'
    OBJECTS d = DATE FIXED PANEL
    PROPERTIES(d) objValue = OBJVALUE
;

DESIGN dialogDate FROM DEFAULT {
    PROPERTY (objValue) {
        caption = 'Введите дату';
        font = 'Tahoma bold 64';
        panelLabelAbove = TRUE;
    }
}

// --------------------------- Агрегации --------------------------------- //

META defineAggregationCustom (primProperty, aggrObject, aggrProperty)
    unique###aggrObject 'Одиночная агрегация' (primObject) =
        GROUP UNIQUE aggrObject BY primProperty(aggrObject)
        WHERE aggrObject IS aggrObject;

    aggrProperty(primObject) => unique###aggrObject(primObject) RESOLVE TRUE;

    is###aggrObject(aggrObject) = aggrObject IS aggrObject;
    is###aggrObject(aggrObject) => aggrProperty(primProperty(aggrObject)) RESOLVE FALSE;
END

META defineAggregation (primObject, aggrObject, aggrProperty)
    primObject###aggrObject = DATA primObject (aggrObject);

    @defineAggregationCustom (primObject###aggrObject, aggrObject, aggrProperty);
END

META defineAggregationDoubleCustom (prim1Property, prim2Property, aggrObject, aggrProperty)
    unique###aggrObject 'Двойная агрегация' (prim1Object, prim2Object) =
        GROUP UNIQUE aggrObject BY prim1Property(aggrObject), prim2Property(aggrObject)
        WHERE aggrObject IS aggrObject;

    aggrProperty(prim1Object, prim2Object) => unique###aggrObject(prim1Object, prim2Object) RESOLVE TRUE;

    is###aggrObject(aggrObject) = aggrObject IS aggrObject;
    is###aggrObject(aggrObject) => aggrProperty(prim1Property(aggrObject), prim2Property(aggrObject)) RESOLVE FALSE;
END

META defineAggregationDouble (prim1Object, prim2Object, aggrObject, aggrProperty)
    prim1Object###aggrObject = DATA prim1Object (aggrObject);
    prim2Object###aggrObject = DATA prim2Object (aggrObject);

    @defineAggregationDoubleCustom(prim1Object###aggrObject, prim2Object###aggrObject, aggrObject, aggrProperty);
END

