MODULE Document;

REQUIRE System, Numerator, Authentication;

// Логика проведения документов

CLASS ABSTRACT postedObject 'Объект с возможностью закрытия';
TABLE postedObject (postedObject);

GROUP postedGroup 'Информация о закрытии' : base;

timeClosed 'Время закрытия' = DATA DATETIME (postedObject) IN postedGroup;
userClosed 'Проведен пользователем' = DATA customUser (postedObject);
computerClosed 'Проведен на компьютере' = DATA computer (postedObject);

nameUserClosed 'Проведен пользователем' (postedObject) = nameContact(userClosed(postedObject)) IN postedGroup;
hostnameComputerClosed 'Проведен на компьютере' (postedObject) = hostnameComputer(computerClosed(postedObject)) IN postedGroup;

timeClosed(postedObject) <- currentDateTime() WHEN ASSIGNED(postedObject IS postedObject);
userClosed(postedObject) <- currentUser() WHEN ASSIGNED(postedObject IS postedObject);
computerClosed(postedObject) <- currentComputer() WHEN ASSIGNED(postedObject IS postedObject);

// Логика нумерирования документов

CLASS ABSTRACT numeratedDocument 'Нумерируемый документ' : numeratedObject;
@defineNumeratedObjectDefault(numeratedDocument, 'Нумератор для документов', 'ДК');

// Стандартные группы
GROUP documentHeaderGroup 'Шапка документа' : base;
GROUP documentSumGroup 'Суммы документа': public;
GROUP documentPrmGroup 'Параметры документа': public;
GROUP documentShipmentGroup 'Исполнение' : base;

// Макросы по созданию документов

// ----- Tables ----- //

META defineDocumentTables (object)
    TABLE object (object);
    TABLE object##Detail (object##Detail);
END
META defineDocumentInterfaceTables (object)
    @defineDocumentTables(object);
    @defineDocumentTables(user###object);
END

// ----- Relation ----- //
META defineDocumentRelation (object, detail, caption)
    object###detail = DATA object (detail) NOT NULL DELETE;
    in###object###detail(iobject, idetail) = object###detail(idetail) == iobject;

    @defineDocumentHeaderCount(object, detail);
END
META defineDocumentAbstractRelation(object, detail, caption)
    object###detail = ABSTRACT object (detail) PERSISTENT;
    in###object###detail(iobject, idetail) = object###detail(idetail) == iobject;

    @defineDocumentHeaderCount(object, detail);
END
META defineDocumentInterfaceRelation(object, detail, caption)
    @defineDocumentAbstractRelation(object, detail, caption);
    @defineDocumentRelation(user###object, user###detail, caption);
    object###detail(idetail) += user###object##User###detail(idetail);
END

META defineDocumentRelation (object, detail)
    @defineDocumentRelation(object, detail, );
END
META defineDocumentAbstractRelation (object, detail)
    @defineDocumentAbstractRelation(object, detail, );
END
META defineDocumentInterfaceRelation (object, detail)
    @defineDocumentInterfaceRelation(object, detail, );
END

META defineDocumentRelation (object)
    @defineDocumentRelation(object, object##Detail);
END
META defineDocumentAbstractRelation (object)
    @defineDocumentAbstractRelation(object, object##Detail);
END
META defineDocumentInterfaceRelation (object)
    @defineDocumentInterfaceRelation(object, object##Detail);
END

// Header
META defineDocumentHeaderCount (object, detail, caption)
    count###detail###object 'Количество строк в документе'###caption (iobject) =
        GROUP SUM 1 IF object###detail(idetail) == iobject BY iobject PERSISTENT IN documentSumGroup;
END

META defineDocumentHeaderCount (object, detail)
    @defineDocumentHeaderCount(object, detail, );
END

META defineDocumentHeaderCount (object)
    @defineDocumentHeaderCount(object, object##Detail);
END

// Header для contact
META defineDocumentHeaderCountContractor (object, detail, caption, contact)
    count###detail###object###contact 'Количество строк в документе'###caption (iobject, contact) =
        GROUP SUM 1 IF object###detail(idetail) == iobject BY iobject, contact###detail(idetail) PERSISTENT IN documentSumGroup;
END

META defineDocumentHeaderCountContractor (object, detail, contact)
    @defineDocumentHeaderCountContractor(object, detail, , contact);
END

META defineDocumentHeaderCountContractor (object, contact)
    @defineDocumentHeaderCountContractor(object, object##Detail, contact);
END

// ----- Time ----- //

META defineDocumentHeaderTimePrefix (object, prefix, caption)
    prefix###date###object 'Дата'##caption = DATA DATE (object) IN documentHeaderGroup;
    prefix###time###object 'Время'##caption = DATA TIME (object) IN documentHeaderGroup;
    prefix###dateTime###object 'Дата/время'##caption (object) = dateTimeToDateTime(prefix###date###object(object), prefix###time###object(object)) PERSISTENT;

    WHEN SESSION ASSIGNED(o AS object) DO {
        IF o IS object AND NOT prefix###date###object(o) THEN SET prefix###date###object(o) <- currentDate();
        IF o IS object AND NOT prefix###time###object(o) THEN SET prefix###time###object(o) <- currentTime();
    };
END
META defineDocumentAbstractHeaderTimePrefix (object, prefix, caption)
    prefix###date###object 'Дата'##caption = ABSTRACT DATE (object) IN documentHeaderGroup PERSISTENT;
    prefix###time###object 'Время'##caption = ABSTRACT TIME (object) IN documentHeaderGroup PERSISTENT;
    prefix###dateTime###object 'Дата/время'##caption (object) = dateTimeToDateTime(prefix###date###object(object), prefix###time###object(object)) PERSISTENT;
END
META defineDocumentInterfaceHeaderTimePrefix(object, prefix, caption)
    @defineDocumentAbstractHeaderTimePrefix(object, prefix, caption);
    @defineDocumentHeaderTimePrefix(user###object, prefix, caption);
    prefix###date###object(object) += prefix###date##User###object(object);
    prefix###time###object(object) += prefix###time##User###object(object);
END
META implementDocumentHeaderTimePrefix(abstract, prefixA, concrete, prefixB)
    prefixA###date###abstract(concrete) += prefixB###date###concrete(concrete);
    prefixA###time###abstract(concrete) += prefixB###time###concrete(concrete);
END

META defineDocumentHeaderTime (object)
    @defineDocumentHeaderTimePrefix(object, ,' документа');
END
META defineDocumentAbstractHeaderTime (object)
    @defineDocumentAbstractHeaderTimePrefix(object, ,' документа');
END
META defineDocumentInterfaceHeaderTime(object)
    @defineDocumentInterfaceHeaderTimePrefix(object, ,' документа');
END

META defineDocumentDetailTimePrefix (object, detail, prefix, caption)
    prefix###dateTime###detail 'Дата/время'##caption (detail) = prefix###dateTime###object(object###detail(detail)) PERSISTENT;
    prefix###date###detail 'Дата'##caption = prefix###date###object(object###detail(detail));
    prefix###time###detail 'Время'##caption = prefix###time###object(object###detail(detail));
END
META defineDocumentInterfaceDetailTimePrefix (object, detail, prefix, caption)
    @defineDocumentDetailTimePrefix(object, detail, prefix, caption);
    @defineDocumentDetailTimePrefix(user###object, user###detail, prefix, caption);
END

META defineDocumentDetailTimePrefix (object, prefix, caption)
    @defineDocumentDetailTimePrefix(object, object##Detail, prefix, caption);
END
META defineDocumentInterfaceDetailTimePrefix (object, prefix, caption)
    @defineDocumentInterfaceDetailTimePrefix(object, object##Detail, prefix, caption);
END

META defineDocumentDetailTime (object, detail)
    @defineDocumentDetailTimePrefix(object, detail, ,' документа');
END
META defineDocumentInterfaceDetailTime (object, detail)
    @defineDocumentInterfaceDetailTimePrefix(object, detail, ,' документа');
END

META defineDocumentDetailTime (object)
    @defineDocumentDetailTime(object, object##Detail);
END
META defineDocumentInterfaceDetailTime (object)
    @defineDocumentInterfaceDetailTime(object, object##Detail);
END

META defineDocumentTimePrefix (object, prefix, caption)
    @defineDocumentHeaderTimePrefix(object, prefix, caption);
    @defineDocumentDetailTimePrefix(object, prefix, caption);
END
META defineDocumentAbstractTimePrefix (object, prefix, caption)
    @defineDocumentAbstractHeaderTimePrefix(object, prefix, caption);
    @defineDocumentDetailTimePrefix(object, prefix, caption);
END
META defineDocumentInterfaceTimePrefix (object, prefix, caption)
    @defineDocumentInterfaceHeaderTimePrefix(object, prefix, caption);
    @defineDocumentInterfaceDetailTimePrefix(object, prefix, caption);
END

META defineDocumentTime (object)
    @defineDocumentHeaderTime(object);
    @defineDocumentDetailTime(object);
END
META defineDocumentAbstractTime (object)
    @defineDocumentAbstractHeaderTime(object);
    @defineDocumentDetailTime(object);
END
META defineDocumentInterfaceTime (object)
    @defineDocumentInterfaceHeaderTime(object);
    @defineDocumentInterfaceDetailTime(object);
END

// ----- Time Before ----- //
META defineDocumentHeaderTimeBeforePrefix (object, prefix, caption)
    prefix###dateBefore###object 'Дата'##caption = DATA DATE (object) IN documentHeaderGroup;
    prefix###dateBefore###object (object) <- currentDate() WHEN ASSIGNED(object AS object);

    prefix###timeBefore###object 'Время'##caption = DATA TIME (object) IN documentHeaderGroup;
    prefix###timeBefore###object (object) <- currentTime() WHEN ASSIGNED(object AS object);

    prefix###dateTimeBefore###object 'Дата/время'##caption (object) = dateTimeToDateTime(prefix###dateBefore###object(object), prefix###timeBefore###object(object)) PERSISTENT;
END
META defineDocumentAbstractHeaderTimeBeforePrefix (object, prefix, caption)
    prefix###dateBefore###object 'Дата'##caption = ABSTRACT DATE (object) IN documentHeaderGroup PERSISTENT;
    prefix###timeBefore###object 'Время'##caption = ABSTRACT TIME (object) IN documentHeaderGroup PERSISTENT;
    prefix###dateTimeBefore###object 'Дата/время'##caption (object) = dateTimeToDateTime(prefix###dateBefore###object(object), prefix###timeBefore###object(object)) PERSISTENT;
END
META defineDocumentInterfaceHeaderTimeBeforePrefix(object, prefix, caption)
    @defineDocumentAbstractHeaderTimeBeforePrefix(object, prefix, caption);
    @defineDocumentHeaderTimeBeforePrefix(user###object, prefix, caption);
    prefix###dateBefore###object(object) += prefix###dateBefore##User###object(object);
    prefix###timeBefore###object(object) += prefix###timeBefore##User###object(object);
END

META defineDocumentHeaderTimeBefore (object)
    @defineDocumentHeaderTimeBeforePrefix(object, ,' документа (до)');
END
META defineDocumentAbstractHeaderTimeBefore (object)
    @defineDocumentAbstractHeaderTimeBeforePrefix(object, ,' документа (до)');
END
META defineDocumentInterfaceHeaderTimeBefore(object)
    @defineDocumentInterfaceHeaderTimeBeforePrefix(object, ,' документа (до)');
END

META defineDocumentDetailTimeBeforePrefix (object, detail, prefix, caption)
    prefix###dateTimeBefore###detail 'Дата/время'##caption (detail) = prefix###dateTimeBefore###object(object###detail(detail)) PERSISTENT;
    prefix###dateBefore###detail 'Дата'##caption = prefix###dateBefore###object(object###detail(detail));
    prefix###timeBefore###detail 'Время'##caption = prefix###timeBefore###object(object###detail(detail));
END
META defineDocumentInterfaceDetailTimeBeforePrefix (object, detail, prefix, caption)
    @defineDocumentDetailTimeBeforePrefix(object, detail, prefix, caption);
    @defineDocumentDetailTimeBeforePrefix(user###object, user###detail, prefix, caption);
END

META defineDocumentDetailTimeBeforePrefix (object, prefix, caption)
    @defineDocumentDetailTimeBeforePrefix(object, object##Detail, prefix, caption);
END
META defineDocumentInterfaceDetailTimeBeforePrefix (object, prefix, caption)
    @defineDocumentInterfaceDetailTimeBeforePrefix(object, object##Detail, prefix, caption);
END

META defineDocumentDetailTimeBefore (object, detail)
    @defineDocumentDetailTimeBeforePrefix(object, detail, ,' документа');
END
META defineDocumentInterfaceDetailTimeBefore (object, detail)
    @defineDocumentInterfaceDetailTimeBeforePrefix(object, detail, ,' документа');
END

META defineDocumentDetailTimeBefore (object)
    @defineDocumentDetailTimeBefore(object, object##Detail);
END
META defineDocumentInterfaceDetailTimeBefore (object)
    @defineDocumentInterfaceDetailTimeBefore(object, object##Detail);
END

META defineDocumentTimeBeforePrefix (object, prefix, caption)
    @defineDocumentHeaderTimeBeforePrefix(object, prefix, caption);
    @defineDocumentDetailTimeBeforePrefix(object, prefix, caption);
END
META defineDocumentAbstractTimeBeforePrefix (object, prefix, caption)
    @defineDocumentAbstractHeaderTimeBeforePrefix(object, prefix, caption);
    @defineDocumentDetailTimeBeforePrefix(object, prefix, caption);
END
META defineDocumentInterfaceTimeBeforePrefix (object, prefix, caption)
    @defineDocumentInterfaceHeaderTimeBeforePrefix(object, prefix, caption);
    @defineDocumentInterfaceDetailTimeBeforePrefix(object, prefix, caption);
END

META defineDocumentTimeBefore (object)
    @defineDocumentHeaderTimeBefore(object);
    @defineDocumentDetailTimeBefore(object);
END
META defineDocumentAbstractTimeBefore (object)
    @defineDocumentAbstractHeaderTimeBefore(object);
    @defineDocumentDetailTimeBefore(object);
END
META defineDocumentInterfaceTimeBefore (object)
    @defineDocumentInterfaceHeaderTimeBefore(object);
    @defineDocumentInterfaceDetailTimeBefore(object);
END
// ----- Time ----- //
META defineDocumentHeaderTimeShipment (object, prefix, caption)
    prefix###date###object 'Дата'##caption = DATA DATE (object) IN documentShipmentGroup;

    prefix###time###object 'Время'##caption = DATA TIME (object) IN documentShipmentGroup;

    prefix###dateTime###object 'Дата/время'##caption (object) = dateTimeToDateTime(prefix###date###object(object), prefix###time###object(object)) PERSISTENT;
END
META defineDocumentAbstractHeaderTimeShipment (object, prefix, caption)
    prefix###date###object 'Дата'##caption = ABSTRACT DATE (object) IN documentShipmentGroup;
    prefix###time###object 'Время'##caption = ABSTRACT TIME (object) IN documentShipmentGroup;
    prefix###dateTime###object 'Дата/время'##caption (object) = dateTimeToDateTime(prefix###date###object(object), prefix###time###object(object)) PERSISTENT;
END
META defineDocumentInterfaceHeaderTimeShipment(object, prefix, caption)
    @defineDocumentAbstractHeaderTimeShipment(object, prefix, caption);
    @defineDocumentHeaderTimeShipment(user###object, prefix, caption);
    prefix###date###object(object) += prefix###date###user###object(object);
    prefix###time###object(object) += prefix###time###user###object(object);
END


META defineDocumentDetailDataTimeShipment (object, detail, prefix, caption)
    prefix###dataDate###detail =  DATA DATE (detail);
    prefix###date###detail 'Дата'##caption (idetail) = UNION OVERRIDE prefix###date###object(object###detail(idetail)), prefix###dataDate###detail(idetail) PERSISTENT;
    prefix###dataTime###detail =  DATA TIME (detail);
    prefix###time###detail 'Время'##caption (idetail) = UNION OVERRIDE prefix###time###object(object###detail(idetail)), prefix###dataTime###detail(idetail) PERSISTENT;
    prefix###dateTime###detail 'Дата/время'##caption (idetail) = dateTimeToDateTime(prefix###date###detail(idetail), prefix###time###detail(idetail)) PERSISTENT;
END

META defineDocumentAbstractDetailDataTimeShipment (object, detail, prefix, caption)
    prefix###dataDate###detail =  ABSTRACT DATE (detail);
    prefix###date###detail 'Дата'##caption (idetail) = UNION OVERRIDE prefix###date###object(object###detail(idetail)), prefix###dataDate###detail(idetail) PERSISTENT;
    prefix###dataTime###detail =  ABSTRACT TIME (detail);
    prefix###time###detail 'Время'##caption (idetail) = UNION OVERRIDE prefix###time###object(object###detail(idetail)), prefix###dataTime###detail(idetail) PERSISTENT;
    prefix###dateTime###detail 'Дата/время'##caption (idetail) = dateTimeToDateTime(prefix###date###detail(idetail), prefix###time###detail(idetail)) PERSISTENT;
END

META defineDocumentInterfaceDetailDataTimeShipment (object, detail, prefix, caption)
    @defineDocumentAbstractDetailDataTimeShipment(object, detail, prefix, caption);
    @defineDocumentDetailDataTimeShipment(user###object, user###detail, prefix, caption);
    prefix###dataDate###detail (detail) += prefix###dataDate###user###detail (detail);
    prefix###dataTime###detail (detail) += prefix###dataTime###user###detail (detail);
END

META defineDocumentInterfaceDetailDataTimeShipment (object, prefix, caption)
    @defineDocumentInterfaceDetailDataTimeShipment(object, object##Detail, prefix, caption);
END

META defineDocumentInterfaceTimeShipment (object, prefix, caption)
    @defineDocumentInterfaceHeaderTimeShipment(object, prefix, caption);
    @defineDocumentInterfaceDetailDataTimeShipment(object, prefix, caption);
END

META defineDocumentTimeShipment (object, detail, prefix, caption)
    @defineDocumentHeaderTimeShipment(object, prefix, caption);
    @defineDocumentDetailDataTimeShipment (object, detail, prefix, caption);
END

META defineDocumentTimeShipment (object, prefix, caption)
    @defineDocumentTimeShipment (object, object##Detail, prefix, caption);
END
//-- Дата
META defineDocumentHeaderDatePrefix (object, prefix, caption)
    prefix###date###object 'Дата'##caption = DATA DATE (object) IN documentHeaderGroup;

END
META defineDocumentAbstractHeaderDatePrefix (object, prefix, caption)
    prefix###date###object 'Дата'##caption = ABSTRACT DATE (object) IN documentHeaderGroup PERSISTENT;
END
META defineDocumentInterfaceHeaderDatePrefix(object, prefix, caption)
    @defineDocumentAbstractHeaderDatePrefix(object, prefix, caption);
    @defineDocumentHeaderDatePrefix(user###object, prefix, caption);
    prefix###date###object(object) += prefix###date###user###object(object);
END
META defineDocumentDetailDatePrefix (object, detail, prefix, caption)
    prefix###date###detail 'Дата'##caption = prefix###date###object(object###detail(detail)) PERSISTENT;
END
META defineDocumentInterfaceDetailDatePrefix (object, detail, prefix, caption)
    @defineDocumentDetailDatePrefix(object, detail, prefix, caption);
    @defineDocumentDetailDatePrefix(user###object, user###detail, prefix, caption);
END
META defineDocumentInterfaceDetailDatePrefix (object, prefix, caption)
    @defineDocumentInterfaceDetailDatePrefix(object, object##Detail, prefix, caption);
END

META defineDocumentInterfaceDatePrefix (object, prefix, caption)
    @defineDocumentInterfaceHeaderDatePrefix(object, prefix, caption);
    @defineDocumentInterfaceDetailDatePrefix(object, prefix, caption);
END
// Примечание

META defineDocumentHeaderNote (object)
    note###object 'Примечание' = DATA STRING[100] (object) MINCHARWIDTH 30 PREFCHARWIDTH 80 IN documentPrmGroup PERSISTENT;
END
META defineDocumentAbstractHeaderNote (object)
    note###object 'Примечание' = ABSTRACT STRING[100] (object) MINCHARWIDTH 30 PREFCHARWIDTH 80 IN documentPrmGroup PERSISTENT;
END
META defineDocumentInterfaceHeaderNote(object)
    @defineDocumentAbstractHeaderNote(object);
    @defineDocumentHeaderNote(user###object);
    note###object(object) += note##User###object(object);
END

META defineDocumentDetailNote (object)
    note###object##Detail 'Примечание' = DATA STRING[100] (object##Detail) MINCHARWIDTH 30 PREFCHARWIDTH 80;
END
META defineDocumentAbstractDetailNote (object)
    note###object##Detail 'Примечание' = ABSTRACT STRING[100] (object##Detail) MINCHARWIDTH 30 PREFCHARWIDTH 80;
END
META defineDocumentInterfaceDetailNote(object)
    @defineDocumentAbstractDetailNote(object);
    @defineDocumentDetailNote(user###object);
    note###object##Detail(object) += note##User###object##Detail(object);
END

// Posted

META defineDocumentHeaderPosted (object)
    isDraft###object 'Не проведен' (object) = object IS object AND NOT object IS object##Posted PERSISTENT;
    isPosted###object 'Проведен' (object) = object IS object##Posted PERSISTENT;

    prePost###object 'Провести' (object) = [ACTION CHANGECLASS object TO object##Posted ] (object)
                                    IF object IS object AND NOT object IS object##Posted;

    post###object 'Провести' (object) = [ACTION (object) NEWSESSION AUTOAPPLY { CHANGECLASS object TO object##Posted; } ] (object)
                                    IF object IS object AND NOT object IS object##Posted TOOLBAR CONFIRM;

    unpost###object 'Распровести' (object) = [ACTION (object) NEWSESSION AUTOAPPLY { CHANGECLASS object TO object; } ] (object)
                                      IF object IS object##Posted TOOLBAR CONFIRM;
END
META defineDocumentAbstractHeaderPosted (object)
    isPosted###object 'Проведен' (object) = ABSTRACT BOOLEAN(object) PERSISTENT;
    isDraft###object 'Не проведен' (object) = object IS object AND NOT isPosted###object(object) PERSISTENT;
END
META defineDocumentInterfaceHeaderPosted (object)
    @defineDocumentAbstractHeaderPosted(object);
    @defineDocumentHeaderPosted(user###object);
    isPosted###object(object) += isPosted###user###object(object);
END

META defineDocumentDetailPosted (object, detail)
    isPosted###detail 'Проведен' (idetail) = isPosted###object(object###detail(idetail));
    isNotPosted###detail 'Не проведен' (idetail) = idetail IS detail AND NOT isPosted###detail(idetail);
END

META defineDocumentDetailPosted (object)
    @defineDocumentDetailPosted(object, object##Detail);
END

META defineDocumentPosted (object)
    @defineDocumentHeaderPosted(object);
    @defineDocumentDetailPosted(object);
END
META defineDocumentAbstractPosted (object)
    @defineDocumentAbstractHeaderPosted(object);
    @defineDocumentDetailPosted(object);
END
META defineDocumentInterfacePosted (object)
    @defineDocumentInterfaceHeaderPosted(object);
    @defineDocumentDetailPosted(object);
    @defineDocumentDetailPosted(user###object);
END

// Closed
META defineDocumentHeaderClosed (object)
    isClosed###object 'Закрыт' (object) = DATA BOOLEAN (object) PERSISTENT;
    isOpened###object 'Не закрыт' (object) = isPosted###object(object) AND NOT isClosed###object(object) PERSISTENT;

    close###object 'Закрыть' (object) = [ACTION (object) NEWSESSION AUTOAPPLY { SET isClosed###object(object) <- TRUE WHERE object IS object; } ] (object)
                                    IF isPosted###object(object) AND NOT isClosed###object(object) TOOLBAR CONFIRM;

    open###object 'Открыть' (object) = [ACTION (object) NEWSESSION AUTOAPPLY { SET isClosed###object(object) <- NULL WHERE object IS object; } ] (object)
                                      IF isClosed###object(object) TOOLBAR CONFIRM;
END
META defineDocumentAbstractHeaderClosed (object)
    isClosed###object 'Закрыт' (object) = ABSTRACT BOOLEAN(object) PERSISTENT;
    isOpened###object 'Не закрыт' (object) = object IS object AND NOT isClosed###object(object) PERSISTENT;
END
META defineDocumentInterfaceHeaderClosed (object)
    @defineDocumentAbstractHeaderClosed(object);
    @defineDocumentHeaderClosed(user###object);
    isClosed###object(object) += isClosed###user###object(object);
END

META defineDocumentDetailClosed (object, detail)
    isClosed###detail 'Закрыт' (idetail) = isClosed###object(object###detail(idetail));
    isOpened###detail 'Не закрыт' (idetail) = isPosted###detail(idetail) AND NOT isClosed###detail(idetail);
END

META defineDocumentDetailClosed (object)
    @defineDocumentDetailClosed(object, object##Detail);
END

META defineDocumentClosed (object)
    @defineDocumentHeaderClosed(object);
    @defineDocumentDetailClosed(object);
END
META defineDocumentAbstractClosed (object)
    @defineDocumentAbstractHeaderClosed(object);
    @defineDocumentDetailClosed(object);
END
META defineDocumentInterfaceClosed (object)
    @defineDocumentInterfaceHeaderClosed(object);
    @defineDocumentDetailClosed(object);
END


// Index

META defineDocumentDetailIndex (object, detail)
    index###detail 'Номер строки' (idetail) =
        PARTITION SUM 1 IF idetail IS detail BY object###detail(idetail)
        ORDER idetail IN recognize MINCHARWIDTH 4 PREFCHARWIDTH 4;
END
META defineDocumentInterfaceDetailIndex (object, detail)
    @defineDocumentDetailIndex(object, detail);
    @defineDocumentDetailIndex(user###object, user###detail);
END

META defineDocumentDetailIndex (object)
    @defineDocumentDetailIndex(object, object##Detail);
END
META defineDocumentInterfaceDetailIndex (object)
    @defineDocumentInterfaceDetailIndex(object, object##Detail);
END

META defineDocumentDetailActionsCustom (object, idetail)
    delete###idetail###object 'Очистить' = ACTION (object) {
        FOR object###idetail (detail) == object DO {
            EXEC delete(detail AS idetail);
        };
    } IN documentPrmGroup TOOLBAR CONFIRM;
END

META defineDocumentDetailActions (object)
    delete###object##Detail###object 'Очистить' = ACTION (object) {
        FOR object###object##Detail (detail) == object DO {
            EXEC delete(detail AS object##Detail);
        };
    } IN documentPrmGroup TOOLBAR CONFIRM;
END

// ------- Number ----- //

META defineDocumentAbstractHeaderNumber(object)
    number###object 'Номер' = ABSTRACT STRING[18] (object) IN numberedGroup MINCHARWIDTH 7 PERSISTENT;
    series###object 'Серия' = ABSTRACT STRING[2] (object) IN numberedGroup FIXEDCHARWIDTH 3 PERSISTENT;
    seriesNumber###object 'Серия/Номер' (object) = ustring2(series###object(object), number###object(object)) MINCHARWIDTH 7 PREFCHARWIDTH 10 MAXCHARWIDTH 20 PERSISTENT;
END
META defineDocumentInterfaceHeaderNumber(object)
    @defineDocumentAbstractHeaderNumber(object);
    number###object(object) += numberObject(object) IF object IS user###object;
    series###object(object) += seriesObject(object) IF object IS user###object;
END

META defineDocumentDetailNumber (object, idetail)
    number###idetail 'Номер' (detail) = numberObject(object###idetail(detail));
    series###idetail 'Серия' (detail) = seriesObject(object###idetail(detail));
    seriesNumber###idetail 'Серия/номер' (detail) = seriesNumberObject(object###idetail(detail));
END

META defineDocumentDetailNumber (object)
    @defineDocumentDetailNumber(object, object##Detail);
END

META defineDocumentAbstractNumber(object, detail)
    @defineDocumentAbstractHeaderNumber(object);
    @defineDocumentDetailNumber(object, detail);
END
META defineDocumentInterfaceNumber(object, detail)
    @defineDocumentInterfaceHeaderNumber(object);
    @defineDocumentDetailNumber(object, detail);
    @defineDocumentDetailNumber(user###object, user###detail);
END

META defineDocumentAbstractNumber(object)
    @defineDocumentAbstractNumber(object, object##Detail);
END
META defineDocumentInterfaceNumber(object)
    @defineDocumentInterfaceNumber(object, object##Detail);
END

// ----- Не проводить ----- //

META defineDocumentHeaderSkip(object, postfix, caption)
    skip###postfix###object caption (object) = DATA BOOLEAN(object) IN documentPrmGroup;

END
META defineDocumentAbstractHeaderSkip(object, postfix, caption)
    skip###postfix###object caption (object) = ABSTRACT BOOLEAN(object);
END

META defineDocumentInterfaceHeaderSkip (object, postfix, caption)
    @defineDocumentAbstractHeaderSkip (object, postfix, caption);
    @defineDocumentHeaderSkip (user###object, postfix, caption);
    skip###postfix###object (object) += skip###postfix###user###object(object);
END

META defineDocumentDetailSkipCustom(object, detail, postfix, caption)
    skip###postfix###detail caption (detail) = skip###postfix###object(object###detail(detail));
END
META defineDocumentDetailSkip(object, postfix, caption)
    @defineDocumentDetailSkipCustom(object, object##Detail, postfix, caption);
END
META defineDocumentInterfaceDetailSkipCustom (object, detail, postfix, caption)
    @defineDocumentDetailSkipCustom(object, detail, postfix, caption);
    @defineDocumentDetailSkipCustom(user###object, user###detail, postfix, caption);
END
META defineDocumentInterfaceDetailSkip(object, postfix, caption)
    @defineDocumentInterfaceDetailSkipCustom(object, object##Detail, postfix, caption);
END

// ----- Description ----- //

META defineDocumentHeaderDescription(object, numberProp, caption)
    description###object 'Название документа' (object) =
        [FORMULA STRING[200]  ' CAST($1 AS TEXT) || \' № \' || CAST($2 AS TEXT) || \' от \' || CAST($3 AS TEXT)'](
        caption, numberProp(object), date###object(object)) MINCHARWIDTH 30 PREFCHARWIDTH 50;
END
META defineDocumentAbstractHeaderDescription(object)
    description###object 'Название документа' (object) = ABSTRACT STRING[200] (object) MINCHARWIDTH 30 PREFCHARWIDTH 50 PERSISTENT;
END
META defineDocumentInterfaceHeaderDescription(object, numberProp, caption)
    @defineDocumentAbstractHeaderDescription(object);
    @defineDocumentHeaderDescription(user###object, numberProp, caption);
    description###object (object) += description###user###object(object);
END

META defineDocumentHeaderDescription(object, caption)
    @defineDocumentHeaderDescription(object, seriesNumberObject, caption);
END
META defineDocumentInterfaceHeaderDescription(object, caption)
    @defineDocumentInterfaceHeaderDescription(object, seriesNumberObject, caption);
END

META defineDocumentDetailDescription(object, detail)
    description###detail 'Название документа' (detail) = description###object(object###detail(detail)) MINCHARWIDTH 30 PREFCHARWIDTH 50;
    descriptionIndex###detail 'Название документа' (detail) =
        [FORMULA STRING[200]  ' CAST($1 AS TEXT) || \', позиция \' || \'  \' || CAST($2 AS TEXT)'](
            description###detail(detail),
            index###detail(detail)) MINCHARWIDTH 30 PREFCHARWIDTH 50;
END

META defineDocumentDescription(object, detail, numberProp, caption)
    @defineDocumentHeaderDescription(object, numberProp, caption);
    @defineDocumentDetailDescription(object, detail);
END
META defineDocumentAbstractDescription(object, detail)
    @defineDocumentAbstractHeaderDescription(object);
    @defineDocumentDetailDescription(object, detail);
END
META defineDocumentInterfaceDescription(object, detail, numberProp, caption)
    @defineDocumentInterfaceHeaderDescription(object, numberProp, caption);
    @defineDocumentDetailDescription(object, detail);
    @defineDocumentDetailDescription(user###object, user###detail);
END

META defineDocumentDescription (object, caption)
    @defineDocumentDescription(object, object##Detail, seriesNumberObject, caption);
END
META defineDocumentAbstractDescription (object)
    @defineDocumentAbstractDescription(object, object##Detail);
END
META defineDocumentInterfaceDescription (object, caption)
    @defineDocumentInterfaceDescription(object, object##Detail, seriesNumberObject, caption);
END

// ----- Is ----- //
META defineDocumentIs(object, detail)
    is###object (iobject) = iobject IS object;
    is###detail (idetail) = idetail IS detail;
END
META defineDocumentInterfaceIs(object, detail)
    @defineDocumentIs(object, detail);
    @defineDocumentIs(user###object, user###detail);
END

META defineDocumentIs(object)
    @defineDocumentIs(object, object##Detail);
END
META defineDocumentInterfaceIs(object)
    @defineDocumentInterfaceIs(object, object##Detail);
END

META defineDocument (object)
    @defineDocumentTables(object);

    @defineDocumentRelation(object);
    @defineDocumentDetailIndex(object);

    @defineDocumentTime(object);
    @defineDocumentHeaderNote(object);

    @defineDocumentIs(object);

    @defineDocumentDetailActions(object);
END
META defineDocumentAbstract (object)
    @defineDocumentTables(object);

    @defineDocumentAbstractRelation(object);
    @defineDocumentDetailIndex(object);

    @defineDocumentAbstractTime(object);
    @defineDocumentAbstractHeaderNote(object);

    @defineDocumentIs(object);
END
META defineDocumentInterface (object)
    @defineDocumentInterfaceTables(object);

    @defineDocumentInterfaceRelation(object);
    @defineDocumentInterfaceDetailIndex(object);

    @defineDocumentInterfaceTime(object);
    @defineDocumentInterfaceHeaderNote(object);

    @defineDocumentInterfaceIs(object);

    @defineDocumentDetailActions(user###object);
END

// ------------------------- Основной - агрегированный документы ---------------------------------- //

META defineDocumentAggregationHeader(primObject, aggrObject, aggrProperty)
    @defineAggregation (primObject, aggrObject, aggrProperty);
    @defineDocumentAggregationHeaderNote(primObject, aggrObject);
    @defineDocumentAggregationHeaderTime(primObject, aggrObject);
END

META defineDocumentAggregationDetail (primObject, aggrObject, aggrProperty)
    @defineAggregation(primObject##Detail, aggrObject##Detail, aggrProperty##Detail);
    aggrObject###aggrObject##Detail (detail) = aggrObject###primObject(primObject###primObject##Detail(primObject##Detail###aggrObject##Detail(detail)));

    @defineDocumentAggregationDetailTime(primObject, aggrObject);
END

META defineDocumentAggregation (primObject, aggrObject, aggrProperty)
    @defineDocumentAggregationHeader(primObject, aggrObject, aggrProperty);
    @defineDocumentAggregationDetail(primObject, aggrObject, aggrProperty);
    @defineDocumentHeaderCount(aggrObject);
END

// Time
META defineDocumentAggregationHeaderTime (primObject, aggrObject)
    date###aggrObject 'Дата' (object) = date###primObject(primObject###aggrObject(object));
    time###aggrObject 'Время' (object) = time###primObject(primObject###aggrObject(object));
    dateTime###aggrObject 'Дата/время' (object) = dateTime###primObject(primObject###aggrObject(object));
END

META defineDocumentAggregationDetailTime (primObject, aggrObject)
    date###aggrObject##Detail 'Дата' (detail) = date###primObject##Detail(primObject##Detail###aggrObject##Detail(detail));
    time###aggrObject##Detail 'Время' (detail) = time###primObject##Detail(primObject##Detail###aggrObject##Detail(detail));
    dateTime###aggrObject##Detail 'Дата/время' (detail) = dateTime###primObject##Detail(primObject##Detail###aggrObject##Detail(detail));
END

META defineDocumentAggregationTime (primObject, aggrObject)
    @defineDocumentAggregationHeaderTime(primObject, aggrObject);
    @defineDocumentAggregationDetailTime(primObject, aggrObject);
END

// TimeBefore
META defineDocumentAggregationHeaderTimeBefore (primObject, aggrObject)
    dateBefore###aggrObject 'Дата' (object) = dateBefore###primObject(primObject###aggrObject(object));
    timeBefore###aggrObject 'Время' (object) = timeBefore###primObject(primObject###aggrObject(object));
    dateTimeBefore###aggrObject 'Дата/время' (object) = dateTimeBefore###primObject(primObject###aggrObject(object));
END

META defineDocumentAggregationDetailTimeBefore (primObject, aggrObject)
    dateBefore###aggrObject##Detail 'Дата' (detail) = dateBefore###primObject##Detail(primObject##Detail###aggrObject##Detail(detail));
    timeBefore###aggrObject##Detail 'Время' (detail) = timeBefore###primObject##Detail(primObject##Detail###aggrObject##Detail(detail));
    dateTimeBefore###aggrObject##Detail 'Дата/время' (detail) = dateTimeBefore###primObject##Detail(primObject##Detail###aggrObject##Detail(detail));
END

META defineDocumentAggregationTimeBefore (primObject, aggrObject)
    @defineDocumentAggregationHeaderTimeBefore(primObject, aggrObject);
    @defineDocumentAggregationDetailTimeBefore(primObject, aggrObject);
END

// Posted
META defineDocumentAggregationHeaderPosted (primObject, aggrObject)
    isPosted###aggrObject 'Проведен' (object) = isPosted###primObject(primObject###aggrObject(object));
END

META defineDocumentAggregationDetailPosted (primObject, aggrObject)
    isPosted###aggrObject##Detail 'Проведен' (detail) = isPosted###primObject##Detail(primObject##Detail###aggrObject##Detail(detail));
END

META defineDocumentAggregationPosted (primObject, aggrObject)
    @defineDocumentAggregationHeaderPosted(primObject, aggrObject);
    @defineDocumentAggregationDetailPosted(primObject, aggrObject);
END

// Note
META defineDocumentAggregationHeaderNote (primObject, aggrObject)
    note###aggrObject 'Примечание' (object) = note###primObject(primObject###aggrObject(object));
END

// Number
META defineDocumentAggregationHeaderNumberCustom (primObject, aggrObject, suffix)
    number###aggrObject 'Номер документа' (object) = number###suffix(primObject###aggrObject(object));
    series###aggrObject 'Серия документа' (object) = series###suffix(primObject###aggrObject(object));
    seriesNumber###aggrObject 'Серия/номер документ' (object) = seriesNumber###suffix(primObject###aggrObject(object));
END

META defineDocumentAggregationHeaderNumber (primObject, aggrObject)
    @defineDocumentAggregationHeaderNumberCustom (primObject, aggrObject, Object);
END

META deriveDocumentAggregationHeaderNumber (primObject, aggrObject)
    initValueNumberObject (aggrObject) += [PREV(numberObject(aggrObject))](primObject###aggrObject(aggrObject));
    initValueSeriesObject (aggrObject) += [PREV(seriesObject(aggrObject))](primObject###aggrObject(aggrObject));

    initWhenNumberedObject(aggrObject) += CHANGED(primObject###aggrObject(aggrObject));
END

// Description
META defineDocumentAggregationHeaderDescription (primObject, aggrObject)
    description###aggrObject 'Название документа' (object) = description###primObject(primObject###aggrObject(object));
END
