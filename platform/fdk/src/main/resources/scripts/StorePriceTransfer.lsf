MODULE StorePriceTransfer;

REQUIRE System,
        Stock,
        DocumentTransfer,
        ListRegister,
        StorePrice,
        DocumentTransfer,
        Contract,
        Employee;

CLASS transferPriceAct 'Акт расценки' : inputListRegister, historyObject;
CLASS transferPriceActDetail 'Строка акта расценки': inputListRegisterDetail, importerPriceLedger, supplierPriceLedger, retailVATLedger, retailPriceLedger, warePriceLedger;

META defineDocumentTransferPriceAct (object, caption, captionDetail, skuProp, stockProp, importerPriceProp, supplierPriceProp, VATProp)

    isStoreDestinationStock###object##Out 'Перемещение на магазин' (object##Out) = destinationStock###object##Out(object##Out) IS departmentStore;

    needTransferPriceActDetail###object##OutDetailBatch (object##OutDetail, batch) = costSkuLedgerBatch(object##OutDetail, batch)
        AND destinationStock###object##Out(object##Out###object##OutDetail(object##OutDetail)) IS departmentStore
        AND batch IS batchA;

    @defineDocumentTables (transferPriceAct###object);

    @defineAggregation (object##Out, transferPriceAct###object, isStoreDestinationStock###object##Out);
    @defineAggregationDouble(object##OutDetail, batch, transferPriceAct###object##Detail, needTransferPriceActDetail###object##OutDetailBatch);
    transferPriceAct###object##TransferPriceAct###object##Detail (transferPriceAct###object##Detail) =
        transferPriceAct###object###object##Out(object##Out###object##OutDetail(object##OutDetailTransferPriceAct###object###Detail(transferPriceAct###object##Detail)));

    @defineDocumentAggregationTime(object##Out, transferPriceAct###object);
    @defineDocumentAggregationPosted(object##Out, transferPriceAct###object);

    @defineDocumentAggregationHeaderNumber(object##Out, transferPriceAct###object);
    @defineDocumentAggregationHeaderNote(object##Out, transferPriceAct###object);

    @defineDocumentDescriptionCustom(transferPriceAct###object, transferPriceAct###object##Detail, seriesNumberTransferPriceAct###object, caption);

    @defineDocumentDetailIndex(transferPriceAct###object);

    @defineDocumentAggregationDetailSku(object##Out, transferPriceAct###object, skuProp);

    quantityTransferPriceAct###object##Detail 'Количество' (transferPriceAct###object##Detail) =
        costSkuLedgerBatch(object##OutDetailTransferPriceAct###object##Detail(transferPriceAct###object##Detail), batchTransferPriceAct###object##Detail(transferPriceAct###object##Detail));

    @defineDocumentHeaderQuantity(transferPriceAct###object);
    @defineDocumentHeaderSkuQuantity(transferPriceAct###object, skuProp);

    departmentStoreTransferPriceAct###object (transferPriceAct###object) = destinationStock###object##Out(object##OutTransferPriceAct###object (transferPriceAct###object)) AS departmentStore;

    departmentStoreTransferPriceAct###object##Detail (transferPriceAct###object##Detail) =
        destinationStock###object##Out(object##Out###object##OutDetail(object##OutDetailTransferPriceAct###object##Detail(transferPriceAct###object##Detail))) AS departmentStore;

    @defineDocumentDetailSkuArticle(transferPriceAct###object);

    importerPriceTransferPriceAct###object##Detail 'Цена импортера' (transferPriceAct###object##Detail) = DATA NUMERIC[14,2] (transferPriceAct###object##Detail);
    importerPriceTransferPriceAct###object##Detail (detail) <- importerPriceProp(batchTransferPriceAct###object##Detail(detail)) WHEN ASSIGNED(isPostedTransferPriceAct###object##Detail(detail));

    supplierPriceTransferPriceAct###object##Detail 'Цена поставщика' (transferPriceAct###object##Detail) = DATA NUMERIC[14,2] (transferPriceAct###object##Detail);
    supplierPriceTransferPriceAct###object##Detail (detail) <- supplierPriceProp(batchTransferPriceAct###object##Detail(detail)) WHEN ASSIGNED(isPostedTransferPriceAct###object##Detail(detail));

    retailVATTransferPriceAct###object##Detail (transferPriceAct###object##Detail) = DATA range (transferPriceAct###object##Detail);
    retailVATTransferPriceAct###object##Detail (detail) <- VATProp(batchTransferPriceAct###object##Detail(detail)) WHEN ASSIGNED(isPostedTransferPriceAct###object##Detail(detail));

    numberRetailVATTransferPriceAct###object##Detail 'НДС, номер' (transferPriceAct###object##Detail) = numberRange(retailVATTransferPriceAct###object##Detail(transferPriceAct###object##Detail));
    valueRetailVATTransferPriceAct###object##Detail 'НДС,%' (transferPriceAct###object##Detail) = valueRateRangeDate
        (retailVATTransferPriceAct###object##Detail(transferPriceAct###object##Detail), dateTransferPriceAct###object##Detail(transferPriceAct###object##Detail));

    retailPriceTransferPriceAct###object##Detail 'Цена розничная' (transferPriceAct###object##Detail) = retailPrice###object##OutDetail(object##OutDetailTransferPriceAct###object##Detail(transferPriceAct###object##Detail));

    printInputListRegister###object##In 'Реестр цен' (object##In) = printInputListRegister(transferPriceAct###object###object##Out(object##Out###object##In(object##In))) TOOLBAR;

    @implementBaseISkuDepartmentStoreLedger(transferPriceAct###object, skuProp);

    // Расчет сумм и показателей для реестра цен
    importerSumTransferPriceAct###object##Detail (transferPriceAct###object##Detail) =
        importerPriceTransferPriceAct###object##Detail(transferPriceAct###object##Detail) * quantityTransferPriceAct###object##Detail(transferPriceAct###object##Detail);

    retailSumTransferPriceAct###object##Detail (transferPriceAct###object##Detail) =
        retailPriceTransferPriceAct###object##Detail(transferPriceAct###object##Detail) * quantityTransferPriceAct###object##Detail(transferPriceAct###object##Detail);

    retailVATSumTransferPriceAct###object##Detail (transferPriceAct###object##Detail) =
        [X*Y/(100+Y)] (retailSumTransferPriceAct###object##Detail(transferPriceAct###object##Detail), valueRetailVATTransferPriceAct###object##Detail(transferPriceAct###object##Detail));

    markupSumTransferPriceAct###object##Detail (transferPriceAct###object##Detail) =
        retailSumTransferPriceAct###object##Detail(transferPriceAct###object##Detail) (-) importerSumTransferPriceAct###object##Detail(transferPriceAct###object##Detail)
        (-) retailVATSumTransferPriceAct###object##Detail(transferPriceAct###object##Detail);

    markupSumTransferPriceAct###object##DetailPriceAct###object (transferPriceAct###object) =
        GROUP SUM markupSumTransferPriceAct###object##Detail(transferPriceAct###object##Detail)
        BY transferPriceAct###object##TransferPriceAct###object##Detail(transferPriceAct###object##Detail);

    retailVATSumTransferPriceAct###object##DetailTransferPriceAct###object (transferPriceAct###object) =
        GROUP SUM retailVATSumTransferPriceAct###object##Detail(transferPriceAct###object##Detail)
        BY transferPriceAct###object##TransferPriceAct###object##Detail(transferPriceAct###object##Detail);

    retailSumTransferPriceAct###object##DetailTransferPriceAct###object (transferPriceAct###object) =
        GROUP SUM retailSumTransferPriceAct###object##Detail(transferPriceAct###object##Detail)
        BY transferPriceAct###object##TransferPriceAct###object##Detail(transferPriceAct###object##Detail);

    importerMarkupTransferPriceAct###object##Detail (transferPriceAct###object##Detail) =
    round2 (markupSumTransferPriceAct###object##Detail(transferPriceAct###object##Detail)*100/
                                                       retailSumTransferPriceAct###object##Detail(transferPriceAct###object##Detail));

    // Свойства реестра цен
    @defineDocumentHeaderListRegister (transferPriceAct###object);
    registerCommittee###object##In (object##In) = registerCommitteeTransferPriceAct###object(transferPriceAct###object###object##Out(object##Out###object##In(object##In)));
    registerCommitteeListRegister (inputListRegister) += registerCommitteeTransferPriceAct###object(inputListRegister);

    dateListRegister (inputListRegister) += dateTransferPriceAct###object (inputListRegister);
    departmentStoreListRegister (inputListRegister) += departmentStoreTransferPriceAct###object (inputListRegister);
    senderListRegister (inputListRegister) += companyStock (stockProp###object##Out(object##OutTransferPriceAct###object(inputListRegister)));
    shipperListRegister (inputListRegister) += name###stockProp###object##Out(object##OutTransferPriceAct###object(inputListRegister));

    quantityListRegisterDetailListRegister (inputListRegister) += quantityTransferPriceAct###object##DetailTransferPriceAct###object (inputListRegister);
    wareSumListRegisterDetailListRegister (inputListRegister) += 0.0 IF inputListRegister IS transferPriceAct###object;
    wareVATSumListRegisterDetailListRegister (inputListRegister) += 0.0 IF inputListRegister IS transferPriceAct###object;
    markupSumListRegisterDetailListRegister (inputListRegister) +=  markupSumTransferPriceAct###object##DetailPriceAct###object (inputListRegister);
    retailVATSumListRegisterDetailListRegister (inputListRegister) += retailVATSumTransferPriceAct###object##DetailTransferPriceAct###object (inputListRegister);
    retailSumListRegisterDetailListRegister (inputListRegister) += retailSumTransferPriceAct###object##DetailTransferPriceAct###object## (inputListRegister);

    numberListRegister (inputListRegister) += numberObject (object##OutTransferPriceAct###object(inputListRegister));
    seriesListRegister (inputListRegister) += seriesObject (object##OutTransferPriceAct###object(inputListRegister));

    listRegisterListRegisterDetail(inputListRegisterDetail) += transferPriceAct###object##TransferPriceAct###object##Detail (inputListRegisterDetail);
    indexListRegisterDetail (inputListRegisterDetail) += indexTransferPriceAct###object##Detail (inputListRegisterDetail);
    skuListRegisterDetail  (inputListRegisterDetail) += skuTransferPriceAct###object##Detail (inputListRegisterDetail);
    quantityListRegisterDetail (inputListRegisterDetail) += quantityTransferPriceAct###object##Detail (inputListRegisterDetail);
    importerPriceListRegisterDetail (inputListRegisterDetail) += importerPriceTransferPriceAct###object##Detail (inputListRegisterDetail);
    supplierMarkupListRegisterDetail (inputListRegisterDetail) += 0.0 IF inputListRegisterDetail IS transferPriceAct###object##Detail;
    wareSumListRegisterDetail (inputListRegisterDetail) += 0.0 IF inputListRegisterDetail IS transferPriceAct###object##Detail;
    warePriceListRegisterDetail (inputListRegisterDetail) += 0.0 IF inputListRegisterDetail IS transferPriceAct###object##Detail;
    wareVATSumListRegisterDetail (inputListRegisterDetail) += 0.0 IF inputListRegisterDetail IS transferPriceAct###object##Detail;
    valueWareRangeListRegisterDetail (inputListRegisterDetail) += 0.0 IF inputListRegisterDetail IS transferPriceAct###object##Detail;
    importerMarkupListRegisterDetail (inputListRegisterDetail) += importerMarkupTransferPriceAct###object##Detail (inputListRegisterDetail);
    markupSumListRegisterDetail (inputListRegisterDetail) += markupSumTransferPriceAct###object##Detail (inputListRegisterDetail);
    valueRetailVATListRegisterDetail (inputListRegisterDetail) += valueRetailVATTransferPriceAct###object##Detail (inputListRegisterDetail);
    retailVATSumListRegisterDetail (inputListRegisterDetail) += retailVATSumTransferPriceAct###object##Detail (inputListRegisterDetail);
    retailPriceListRegisterDetail (inputListRegisterDetail) += retailPriceTransferPriceAct###object##Detail (inputListRegisterDetail);
    retailSumListRegisterDetail (inputListRegisterDetail) += retailSumTransferPriceAct###object##Detail (inputListRegisterDetail);


    EXTEND FORM object##Ins

        OBJECTS pd=transferPriceAct###object##Detail
        PROPERTIES (pd) READONLY indexTransferPriceAct###object##Detail, barcodeTransferPriceAct###object##Detail,
                        nameCategoryTransferPriceAct###object##Detail, nameBrandTransferPriceAct###object##Detail,
                        sidArticleTransferPriceAct###object##Detail, sidSizeTransferPriceAct###object##Detail,
                        sidColorTransferPriceAct###object##Detail, nameColorTransferPriceAct###object##Detail,
                        quantityTransferPriceAct###object##Detail, shortNameUOMTransferPriceAct###object##Detail,
                        importerPriceTransferPriceAct###object##Detail, numberRetailVATTransferPriceAct###object##Detail, //retailMarkupTransferPriceActDetail,
                        valueRetailVATTransferPriceAct###object##Detail, retailPriceTransferPriceAct###object##Detail

        FILTERS object##In###object##Out(object##Out###object##OutDetail(object##OutDetailTransferPriceAct###object##Detail(pd)))==t

        PROPERTIES (t) printInputListRegister###object##In//, registerCommitteeTransferIn TODRAW pd FORCE PANEL
    ;

    EXTEND DESIGN object##Ins {
        documentDetail {
            ADD pd.box {
                title = 'Расценка';
            }
        }
    }

END