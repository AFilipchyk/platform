MODULE  CostCardOrderBy;

REQUIRE PricingProductionOutput, LegalEntityBy, ItemNutrition;
NAMESPACE Production;

// ----------------  Калькуляционная карта ------------------- //

calcMultiplierSkuOrder(sku, order)= (1.000 IF sku IS sku AND order IS order) OR  multiplierSkuOrder(sku, order);

quantityBOMSkuOrder (BOM, sku, order) = [GROUP SUM recBruttoNodeQuantityBOMSkuDate (BOM, sku, dateOrder(order)) * calcMultiplierSkuOrder(sku, order)
    BY BOM, sku, order](BOM, sku, order) AND bruttoQuantitySkuOrder(sku, order);
quantityProductDetailSku 'Норма' (productDetail, sku) = quantityBOMSkuOrder(BOMProduct(productProductDetail(productDetail)), sku, orderProductDetail(productDetail));

totalPriceSkuOrder 'Цена компонента' (sku, order) = priceSkuOrder(sku,order) OR priceSubstitutesSkuOrder(sku,order);
totalPremiumPriceSkuOrder 'Цена компонента с надбавкой'(sku, order) = totalPriceSkuOrder(sku,order)*multiplierCalcSkuOrder(sku, order);

quantityInBOMProductDetail 'Кол-во изделий в спец.'(productDetail)= quantityProduct(productProductDetail(productDetail));
productsSumInBOMProductDetail 'Сумма изделий в спец.' = roundCurrency((quantityInBOMProductDetail(productDetail) * productsPriceProductDetail(productDetail)), currencyProductDetail(productDetail));

//--
quantityProductSkuOrder (product, sku, order) = [GROUP SUM recPricePercentProductSkuDate (product, sku, dateOrder(order))* calcMultiplierSkuOrder(sku, order)/100 BY product, sku, order](product, sku, order) AND bruttoQuantitySkuOrder(sku, order);

quantityProductProductDetailSku 'Норма с учетом коэфф.цены'(productDetail, sku) = quantityProductSkuOrder(
    productProductDetail(productDetail), sku, orderProductDetail(productDetail)); // св-во необходимо, т.к. в BOM-ах есть уд.вес цены => мы его включаем в норму. Пока так, в будущем возможно надо будет включать в надбавку.

componentsSumProductDetailSku 'Сумма компонента (с/с)' (productDetail,sku)=  quantityProductProductDetailSku(productDetail, sku) *totalPriceSkuOrder (sku, orderProductDetail(productDetail));
premiumComponentsSumProductDetailSku 'Сумма компонента с надбавками' (productDetail, sku)= quantityProductProductDetailSku (productDetail, sku)*totalPriceSkuOrder (sku, orderProductDetail(productDetail))*multiplierCalcSkuOrder(sku, orderProductDetail(productDetail));

//--
totalVATSumProductDetailSku 'Сумма НДС' (productDetail, sku)=  premiumComponentsSumProductDetailSku (productDetail, sku)*valueVATSkuOrder(sku, orderProductDetail(productDetail))/(100+valueVATSkuOrder(sku, orderProductDetail(productDetail)));
VATSumProductDetail 'Сумма НДС компонентов' (productDetail) = GROUP SUM totalVATSumProductDetailSku (productDetail, sku) BY productDetail;
//--
descriptionBOMProductDetail 'Спецификация'(productDetail) = descriptionBOM(BOMProduct(productProductDetail(productDetail)));
shortNameUOMProductProductDetail 'Ед.изм. в спец.'(productDetail)= shortNameUOMProduct(productProductDetail(productDetail));
//--
componentsSumInBOMProductDetail 'Сумма компонента для изделий в спец.' (productDetail)= componentsPriceProductDetail(productDetail)*quantityInBOMProductDetail(productDetail);
premiumComponentsSumInBOMProductDetail 'Сумма компонента с надбавкой для изделий в спец.' (productDetail) = calcPremiumComponentsPriceProductDetail(productDetail)*quantityInBOMProductDetail(productDetail);
//--
VATMarkupSumInBOMProductDetail 'НДС и надбавка в спец' (productDetail) =  productsSumInBOMProductDetail(productDetail) (-) componentsSumInBOMProductDetail(productDetail);
retailVATSumInBOMProductDetail 'Сумма НДС в спец' (productDetail) = [X*Y/(100+Y)](VATMarkupSumInBOMProductDetail(productDetail), densityPremiumVATComponentsPriceProductDetail(productDetail));
retailMarkupSumInBOMProductDetail 'Сумма надбавки' (productDetail) =  VATMarkupSumInBOMProductDetail(productDetail) (-) retailVATSumInBOMProductDetail(productDetail);

retailMarkupPriceProductDetail 'Цена надбавки (ед.)' (productDetail)= retailMarkupSumInBOMProductDetail(productDetail)/quantityInBOMProductDetail(productDetail);
retailVATPriceProductDetail 'Цена НДС (ед.)' (productDetail)= retailVATSumInBOMProductDetail(productDetail)/quantityInBOMProductDetail(productDetail);

//--
@defineDocumentUNPLegalEntity(order, goodsLegalEntityStock, );

//--  Нетто

nettoQuantityBOMSkuOrder (BOM, sku, order) = [GROUP SUM recNettoNodeQuantityBOMSku (BOM, sku) * calcMultiplierSkuOrder(sku, order)
    BY BOM, sku, order](BOM, sku, order) AND bruttoQuantitySkuOrder(sku, order);

nettoQuantityProductDetailSku 'Нетто' (productDetail, sku) = nettoQuantityBOMSkuOrder(BOMProduct(productProductDetail(productDetail)), sku, orderProductDetail(productDetail));
fatsProductDetailSku 'Жиры'(productDetail, sku) = nettoQuantityProductDetailSku (productDetail, sku)*netWeightItem(sku)*10*fatsItem(sku);
carbohydratesProductDetailSku 'Углеводы' (productDetail, sku) = nettoQuantityProductDetailSku (productDetail, sku)*netWeightItem(sku)*10*carbohydratesItem(sku);
proteinsProductDetailSku 'Белки' (productDetail, sku) = nettoQuantityProductDetailSku (productDetail, sku)*netWeightItem(sku)*10*proteinsItem(sku);
energyProductDetailSku 'Энерг.ценность'(productDetail, sku) = nettoQuantityProductDetailSku (productDetail, sku)*netWeightItem(sku)*10*energyItem(sku);

fatsInBOMProductDetail 'Жиры'(productDetail) = GROUP SUM fatsProductDetailSku(productDetail, sku) BY productDetail;
carbohydratesInBOMProductDetail 'Углеводы'(productDetail) = GROUP SUM carbohydratesProductDetailSku(productDetail, sku) BY productDetail;
proteinsInBOMProductDetail 'Белки'(productDetail) = GROUP SUM proteinsProductDetailSku(productDetail, sku) BY productDetail;
energyInBOMProductDetail 'Энерг.ценность'(productDetail) = GROUP SUM energyProductDetailSku(productDetail, sku) BY productDetail;

fatsProductDetail 'Жиры (ед.)'(productDetail) = fatsInBOMProductDetail(productDetail) / (quantityInBOMProductDetail(productDetail)*10*netWeightItem(skuProductDetail(productDetail)));
carbohydratesProductDetail 'Углеводы (ед.)'(productDetail) = carbohydratesInBOMProductDetail(productDetail) / (quantityInBOMProductDetail(productDetail)*10*netWeightItem(skuProductDetail(productDetail)));
proteinsProductDetail 'Белки (ед.)'(productDetail) = proteinsInBOMProductDetail(productDetail) / (quantityInBOMProductDetail(productDetail)*10*netWeightItem(skuProductDetail(productDetail)));
energyProductDetail 'Энерг.ценность (ед.)'(productDetail) = energyInBOMProductDetail(productDetail) / (quantityInBOMProductDetail(productDetail)*10*netWeightItem(skuProductDetail(productDetail)));


FORM costCardOrderBy 'Калькуляционная карта' PRINT

    OBJECTS o = order FIXED PANEL
    PROPERTIES(o) objectClassName, nameGoodsLegalEntityStockOrder, UNPGoodsLegalEntityStockOrder, addressGoodsLegalEntityStockOrder,
                  nameComponentsStockOrder, nameGoodsStockOrder, nameNumeratorObject, numberObject, seriesObject, seriesNumberObject,
                  dateOrder, timeOrder, fromDateOrder, toDateOrder, noteOrder, quantityProductDetailOrder, overQuantityComponentDetailOrder

    OBJECTS pd=productDetail
    PROPERTIES(pd) indexProductDetail, idBarcodeSkuProductDetail, descriptionBOMProductDetail, quantityInBOMProductDetail, shortNameUOMProductProductDetail, nameSkuProductDetail,  nameProductProductDetail, shortNameUOMProductDetail, quantityProductDetail,
                   componentsPriceProductDetail, componentsSumInBOMProductDetail, premiumComponentsSumInBOMProductDetail, VATSumProductDetail, retailMarkupSumInBOMProductDetail
    PROPERTIES(pd) markupProductDetail, productsPriceProductDetail, productsSumInBOMProductDetail, densityPremiumVATComponentsPriceProductDetail,
                   retailMarkupPriceProductDetail, retailMarkupSumProductDetail, retailVATPriceProductDetail, retailVATSumInBOMProductDetail

    FILTERS orderProductDetail(pd)==o

    OBJECTS s = sku
    PROPERTIES(pd,s)quantityProductDetailSku, quantityProductProductDetailSku, componentsSumProductDetailSku, premiumComponentsSumProductDetailSku, totalVATSumProductDetailSku
    PROPERTIES(s,o) nameSkuSkuOrder, idBarcodeSkuSkuOrder, shortNameUOMSkuSkuOrder, totalPriceSkuOrder, valueVATSkuOrder, markupSkuOrder, totalPremiumPriceSkuOrder

    FILTERS quantityProductDetailSku(pd,s)

;
printCostCardOrder 'Калькуляционная карта' (order) = ACTION FORM costCardOrderBy OBJECTS o IMAGE 'print.png' IN printGroup;

FORM intakeSheetOrderBy 'Заборный лист' PRINT

    OBJECTS o = order FIXED PANEL
    PROPERTIES(o) nameGoodsLegalEntityStockOrder, nameComponentsStockOrder, nameGoodsStockOrder, numberObject, seriesObject, seriesNumberObject,
                  dateOrder, timeOrder, fromDateOrder, toDateOrder

    OBJECTS pd=productDetail
    PROPERTIES(pd) indexProductDetail, idBarcodeSkuProductDetail, descriptionBOMProductDetail, nameSkuProductDetail,  shortNameUOMProductDetail,
                   componentsPriceProductDetail, productsPriceProductDetail

    FILTERS orderProductDetail(pd)==o

;
printIntakeSheetOrder 'Заборный лист' (order) = ACTION FORM intakeSheetOrderBy OBJECTS o IMAGE 'print.png' IN printGroup;

FORM technologicalCardOrderBy 'Технологическая карта' PRINT

    OBJECTS o = order FIXED PANEL
    PROPERTIES(o) objectClassName, numberObject, seriesObject, seriesNumberObject,
                  dateOrder, timeOrder

    OBJECTS pd=productDetail
    PROPERTIES(pd)indexProductDetail, idBarcodeSkuProductDetail, descriptionBOMProductDetail, quantityInBOMProductDetail,
                  shortNameUOMProductProductDetail, nameSkuProductDetail,  nameProductProductDetail, shortNameUOMProductDetail, quantityProductDetail,
                  fatsInBOMProductDetail, carbohydratesInBOMProductDetail, proteinsInBOMProductDetail, energyInBOMProductDetail,
                  fatsProductDetail, carbohydratesProductDetail, proteinsProductDetail, energyProductDetail

    FILTERS orderProductDetail(pd)==o

    OBJECTS s = sku
    PROPERTIES(pd,s)quantityProductDetailSku, nettoQuantityProductDetailSku
    PROPERTIES(pd,s)FORCE GRID fatsProductDetailSku, carbohydratesProductDetailSku, proteinsProductDetailSku, energyProductDetailSku
    PROPERTIES(s,o) nameSkuSkuOrder, idBarcodeSkuSkuOrder, shortNameUOMSkuSkuOrder
    PROPERTIES(s)   FORCE GRID fatsItem, carbohydratesItem, proteinsItem, energyItem

    FILTERS quantityProductDetailSku(pd,s) OR nettoQuantityProductDetailSku(pd,s)

;
printTechnologicalCardOrder 'Технологическая карта' (order) = ACTION FORM technologicalCardOrderBy OBJECTS o IMAGE 'print.png' IN printGroup;

EXTEND FORM orders
    PROPERTIES(o) FORCE PANEL printTechnologicalCardOrder, printCostCardOrder, printIntakeSheetOrder
;
