MODULE SaleManufacturingPrice;

REQUIRE SaleInvoice, PricingSale, PricingManufacturingPrice;

NAMESPACE Sale;

@defineDocumentInterfaceCreate (invoice, toShowManufacturingPrice, 'Цена изготовителя');
@defineDocumentInterfaceDetailPriceCustomPrefix(invoiceDetail, manufacturing, ' изготовителя');

@deriveDocumentDetailPriceSystemLedgerPriceListTypeBatch(userInvoice, manufacturingPriceStockPriceListType, manufacturing, sku, supplierStock);

wholesaleMarkupInvoiceDetail 'Оптовая надбавка' (detail) = round2([(X/Y-1)*100](priceInvoiceDetail(detail),manufacturingPriceInvoiceDetail(detail)));
wholesaleMarkupUserInvoiceDetail 'Оптовая надбавка' (detail) = round2([(X/Y-1)*100](priceUserInvoiceDetail(detail),manufacturingPriceUserInvoiceDetail(detail)));

EXTEND FORM userInvoice
    PROPERTIES(i)  toShowManufacturingPriceUserInvoice
    PROPERTIES(d)  SHOWIF toShowManufacturingPriceUserInvoice(i) AFTER invoiceSumUserInvoiceDetail  wholesaleMarkupUserInvoiceDetail READONLY, manufacturingPriceUserInvoiceDetail
;
EXTEND DESIGN userInvoice {
    headerExtraParams {
        NEW headerManufacturing {
            title = 'Цена изготовителя';
            ADD PROPERTY(toShowManufacturingPriceUserInvoice);
        }
    }
}

EXTEND FORM invoices
    PROPERTIES(i) READONLY toShowManufacturingPriceInvoice
    PROPERTIES(d) READONLY  SHOWIF toShowManufacturingPriceInvoice(i) AFTER invoiceSumInvoiceDetail wholesaleMarkupInvoiceDetail, manufacturingPriceInvoiceDetail
;

overPricingPricePricingDetail(detail) += manufacturingPriceInvoiceDetail(invoiceDetailInvoicePricingDetail(detail));
overPricingPriceUserInvoiceDetail(detail) += manufacturingPriceUserInvoiceDetail(detail);

manufacturingPricePricingDetail(detail) += manufacturingPriceInvoiceDetail(invoiceDetailInvoicePricingDetail(detail));

//-- Операция
toShowManufacturingPriceUserInvoice (invoice) <- toShowManufacturingPriceOperation(operationUserInvoice(invoice))
    WHEN CHANGED(operationUserInvoice(invoice));