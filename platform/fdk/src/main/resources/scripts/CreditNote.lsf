MODULE CreditNote;

REQUIRE Invoice, Shipment;

//----------------------------------------------- Акт расхождения ---------------------------------------------------//

META defineCreditNote(sign, stockProp)//contact, contactCaption)

    CLASS ABSTRACT creditNote 'Акт расхождения'###sign ;
    CLASS ABSTRACT creditNoteDetail 'Строка акта расхождения'###sign ;

    CLASS userCreditNote 'Акт расхождения (польз.)'###sign : creditNote, historizable, numeratedDocument;
    CLASS userCreditNoteDetail 'Строка акта расхождения (польз.)'###sign : creditNoteDetail;
    CLASS userCreditNotePosted 'Проведенный акта расхождения (польз.)'###sign : userCreditNote, postedObject;

    @defineDocumentInterface(creditNote);

    @defineDocumentInterfaceNumber(creditNote);

    @defineDocumentInterfaceLegalEntity (creditNote, supplier, 'Поставщик');
    @defineDocumentInterfaceLegalEntity (creditNote, customer, 'Покупатель');

    @defineDocumentInterfaceDataStock(creditNote, stock, 'Склад поставщика', supplier);
    @defineDocumentInterfaceDataStock(creditNote, stock, 'Склад покупателя', customer);

    @defineDocumentInterfacePosted(creditNote);

    @defineDocumentInterfaceDescription(creditNote, 'Акт расхождения'###sign);

    @defineDocumentInterfaceCurrency(creditNote);
    @deriveDocumentCurrency(userCreditNote, stockProp);

    @defineDocumentInterfaceDetailSku(creditNote, sku);

    @defineDocumentInterfaceDetailQuantity(creditNote);

    @defineDocumentInterfaceDetailPrice(creditNote);

    @defineDocumentInterfaceDetailDataSum(creditNote);
    @deriveDocumentDetailSum(userCreditNote, quantity);

    @defineDocumentInterfaceDetailVAT(creditNote, country###stockProp);
    @defineDocumentInterfaceDetailVATDataSumCustom(creditNoteDetail, invoice);

    @defineDocumentInterfaceHeaderQuantity(creditNote);
    @defineDocumentHeaderSkuQuantity(creditNote, sku);
    @defineDocumentInterfaceHeaderSum(creditNote);
    @defineDocumentInterfaceHeaderVATSum(creditNote, creditNoteDetail, invoice);

    @defineAddDetailDialogSkuStock(userCreditNote, sku, stockProp, dialogSku);
    @defineAddDetailDialogBarcode(userCreditNote, sku);
        

// --------------------------- Формы --------------------------------- //

    FORM userCreditNote 'Акт расхождений'###sign
        OBJECTS c = userCreditNote FIXED PANEL
        PROPERTIES (c) objectClassName, nameNumeratorObject, numberObject, seriesObject, dateUserCreditNote, timeUserCreditNote,
                       nameSupplierUserCreditNote, nameCustomerUserCreditNote, nameSupplierStockUserCreditNote, nameCustomerStockUserCreditNote,
                       nameCurrencyUserCreditNote, noteUserCreditNote,
                       countUserCreditNoteDetailUserCreditNote, quantityUserCreditNoteDetailUserCreditNote, sumUserCreditNoteDetailUserCreditNote,
                       VATSumUserCreditNoteDetailUserCreditNote, invoiceSumUserCreditNoteDetailUserCreditNote

        OBJECTS d = userCreditNoteDetail
        PROPERTIES (d) indexUserCreditNoteDetail, idBarcodeSkuUserCreditNoteDetail, nameSkuUserCreditNoteDetail, shortNameUOMSkuUserCreditNoteDetail,
                       quantityUserCreditNoteDetail, priceUserCreditNoteDetail, sumUserCreditNoteDetail,
                       numberVATUserCreditNoteDetail, valueVATUserCreditNoteDetail, VATSumUserCreditNoteDetail, invoiceSumUserCreditNoteDetail,
                       name###stockProp###userCreditNoteDetail, ADDOBJ, delete

        PROPERTIES(c) TODRAW d addDetailDialogSkuStockUserCreditNoteDetailUserCreditNote,
                               addDetailInputBarcodeUserCreditNoteDetailUserCreditNote, deleteUserCreditNoteDetailUserCreditNote
        FILTERS userCreditNoteUserCreditNoteDetail(d) == c

        EVENTS
            ON OK EXEC prePostUserCreditNote(c)

        EDIT userCreditNote OBJECT c
    ;

    DESIGN userCreditNote FROM DEFAULT{
        main {
            preferredSize = (1024, 768);

            NEW header.box BEFORE d.box {
                childConstraints = TO THE RIGHT;

                NEW headerRow1 {
                    childConstraints = TO THE BOTTOM;

                    ADD c.documentHeaderGroup {
                        childConstraints = TO THE RIGHT;
                        ADD PROPERTY(objectClassName) { preferredCharWidth = 10; }
                        ADD PROPERTY(nameNumeratorObject);
                        ADD PROPERTY(numberObject);
                        ADD PROPERTY(seriesObject);
                        ADD PROPERTY(dateUserCreditNote);
                        ADD PROPERTY(timeUserCreditNote);
                    }
                    NEW headerRow11 {
                        childConstraints = TO THE RIGHTBOTTOM;
                        NEW headerRow111 {
                            title = 'Поставщик';
                            childConstraints = TO THE RIGHTBOTTOM;
                            ADD PROPERTY(nameSupplierUserCreditNote);
                            ADD PROPERTY(nameSupplierStockUserCreditNote);

                        }
                        NEW headerRow112 {
                            title = 'Покупатель';
                            childConstraints = TO THE RIGHTBOTTOM;
                            ADD PROPERTY(nameCustomerUserCreditNote);
                            ADD PROPERTY(nameCustomerStockUserCreditNote);
                        }

                    }
                    ADD c.documentPrmGroup { childConstraints = TO THE RIGHTBOTTOM;}
                    NEW headerRow12 {
                        childConstraints = TO THE RIGHTBOTTOM;
                    }
                }

                ADD c.documentSumGroup {
                    childConstraints = TO THE BOTTOM;
                }
            }

            d.panel{
                childConstraints = TO THE BOTTOM;
            }
            PROPERTY(formOkAction) {
                caption = 'Провести';
            }
        }
    }

    addUserCreditNote 'Добавить' = ACTION ADDFORM userCreditNote;
    editUserCreditNote 'Редактировать' (userCreditNote) = ACTION EDITFORM userCreditNote;
    isAccessGrantedCreditNote (creditNote) = accessEmployeeDivisionEmployee(stockProp###creditNote(creditNote), currentUser());

    FORM creditNotes 'Акты расхождений' TITLE 'Акты расхождений'###sign
        OBJECTS c = creditNote
        PROPERTIES (c) READONLY isPostedCreditNote FORCE GRID, objectClassName, numberCreditNote, seriesCreditNote, dateCreditNote, timeCreditNote,
                                nameSupplierCreditNote, nameSupplierStockCreditNote, nameCustomerCreditNote, nameCustomerStockCreditNote,
                                nameCurrencyCreditNote, noteCreditNote,
                                countCreditNoteDetailCreditNote, quantityCreditNoteDetailCreditNote, sumCreditNoteDetailCreditNote,
                                VATSumCreditNoteDetailCreditNote, invoiceSumCreditNoteDetailCreditNote
        PROPERTIES (c) READONLY FORCE PANEL nameUserCreatedHistorizable, timeCreatedHistorizable, hostnameComputerCreatedHistorizable, nameUserClosed, timeClosed, hostnameComputerClosed

        PROPERTIES ()  addUserCreditNote TODRAW c
        PROPERTIES (c) editUserCreditNote
        PROPERTIES (c) delete FORCE PANEL DRAWTOTOOLBAR SHOWIF isUserCreditNote(c)

        OBJECTS d = creditNoteDetail
        PROPERTIES (d) READONLY indexCreditNoteDetail, idBarcodeSkuCreditNoteDetail, nameSkuCreditNoteDetail, shortNameUOMSkuCreditNoteDetail,
                                quantityCreditNoteDetail, priceCreditNoteDetail, sumCreditNoteDetail, numberVATCreditNoteDetail, valueVATCreditNoteDetail,
                                 VATSumCreditNoteDetail, invoiceSumCreditNoteDetail, name###stockProp###creditNoteDetail
        FILTERS creditNoteCreditNoteDetail(d) == c,
                isAccessGrantedCreditNote(c)

        DIALOG creditNote OBJECT c
    ;

    DESIGN creditNotes FROM DEFAULT {
        PROPERTY (delete(c)) {
            askConfirm = TRUE;
        }

        NEW documentContainer BEFORE functions.box {
            type = SPLITV;
            childConstraints = TO THE BOTTOM;

            ADD c.box;

            NEW documentDetail {
                type = TABBED;

                ADD d.box {
                    title = 'Спецификация';
                }
                NEW documentHistory {
                    title = 'История';

                    ADD c.historyGroup;
                    ADD c.postedGroup;
                }
                NEW printTab {
                    title = 'Печатные формы';
                    NEW printContainer {
                        title = 'Печать';
                        childConstraints = TO THE BOTTOM;
                        fillVertical = 1.0; // todo : иначе кнопка не всегда показывается, нужно будет пофиксить как-нибудь
                    }
                }
            }
        }
    }


//--  Связь акта и накладной
    invoiceDetailCreditNoteDetail = ABSTRACT invoiceDetail (creditNoteDetail) PERSISTENT;
    invoiceDetailUserCreditNoteDetail = DATA invoiceDetail (userCreditNoteDetail);
    invoiceDetailCreditNoteDetail(creditNoteDetail) += invoiceDetailUserCreditNoteDetail(creditNoteDetail);

    CONSTRAINT supplierCreditNoteDetail(detail) != supplierInvoiceDetail(invoiceDetailUserCreditNoteDetail(detail)) OR
               customerUserCreditNote(detail) != customerInvoice(invoiceDetailUserCreditNoteDetail(detail)) OR
               skuUserCreditNoteDetail(detail) != skuInvoiceDetail(invoiceDetailUserCreditNoteDetail(detail))
        CHECKED BY invoiceDetailUserCreditNoteDetail
            MESSAGE 'Поставщик, покупатель и товар в накладной и акте расхождения должны соответствовать друг другу';

    descriptionIndexInvoiceUserCreditNoteDetail 'Накладная' (userCreditNoteDetail) =  descriptionIndexInvoiceDetail(invoiceDetailUserCreditNoteDetail(userCreditNoteDetail));
    descriptionIndexInvoiceInvoiceCreditNoteDetail 'Накладная' (creditNoteDetail) =  descriptionIndexInvoiceDetail(invoiceDetailCreditNoteDetail(creditNoteDetail));

    quantityInvoiceCreditNote (invoice, creditNote) = GROUP SUM quantityCreditNoteDetail(creditNoteDetail) BY invoiceInvoiceDetail(invoiceDetailCreditNoteDetail(creditNoteDetail)), creditNoteCreditNoteDetail(creditNoteDetail);
    invoicesCreditNote 'Накладные' (creditNote) = GROUP CONCAT toString255(descriptionInvoice(invoice)) IF quantityInvoiceCreditNote(invoice, creditNote) , ', '
                                                    BY creditNote
                                                    ORDER invoice IN invoiceGroup MINCHARWIDTH 30 PREFCHARWIDTH 50;

    EXTEND FORM userCreditNote
        PROPERTIES(c) READONLY invoicesCreditNote
        PROPERTIES(d) descriptionIndexInvoiceUserCreditNoteDetail BEFORE delete(d)
    ;
    EXTEND DESIGN userCreditNote { headerRow12 { ADD c.invoiceGroup {childConstraints = TO THE RIGHTBOTTOM;}}}


    EXTEND FORM creditNotes
        PROPERTIES(c) READONLY invoicesCreditNote
        PROPERTIES(d) READONLY descriptionIndexInvoiceInvoiceCreditNoteDetail
    ;

    quantityUserCreditNoteDetail (detail)  <- toShipInvoiceDetail(invoiceDetailUserCreditNoteDetail(detail))
        WHEN CHANGED(invoiceDetailUserCreditNoteDetail(detail));

    priceUserCreditNoteDetail (detail)  <- priceInvoiceDetail(invoiceDetailUserCreditNoteDetail(detail))
        WHEN CHANGED(invoiceDetailUserCreditNoteDetail(detail));

    sumUserCreditNoteDetail (detail)  <- roundCurrency((quantityUserCreditNoteDetail(detail) *
        priceUserCreditNoteDetail(detail)), currencyInvoiceDetail(invoiceDetailUserCreditNoteDetail(detail)))
        WHEN CHANGED(quantityUserCreditNoteDetail(detail)) OR CHANGED(priceUserCreditNoteDetail(detail)) OR CHANGED(currencyInvoiceDetail(detail));

    VATUserCreditNoteDetail (detail)  <- VATInvoiceDetail(invoiceDetailUserCreditNoteDetail(detail))
        WHEN CHANGED(invoiceDetailUserCreditNoteDetail(detail));

    VATSumUserCreditNoteDetail (detail) <- roundCurrency((sumUserCreditNoteDetail(detail) *
        valueVATUserCreditNoteDetail (detail) / 100), currencyInvoiceDetail(invoiceDetailUserCreditNoteDetail(detail)))
        WHEN CHANGED(sumUserCreditNoteDetail(detail)) OR CHANGED(VATUserCreditNoteDetail(detail)) OR CHANGED(currencyInvoiceDetail(detail));

//-- аггр.объект

    @defineDocumentInterfaceCreate (invoice, createCreditNote, 'Создать акт расхождения');
//    createCreditNoteInvoice 'Создать акт расхождения' = ABSTRACT BOOLEAN (invoice) PERSISTENT IN documentPrmGroup;
//    createCreditNoteUserInvoice 'Создать акт расхождения' = DATA BOOLEAN (userInvoice) IN documentPrmGroup;
//    createCreditNoteInvoice (invoice) += createCreditNoteUserInvoice(invoice);
//    createCreditNoteInvoiceDetail 'Создать акт расхождения' (invoiceDetail) = createCreditNoteInvoice(invoiceInvoiceDetail(invoiceDetail));

    needToCreditNoteInvoiceDetail (invoiceDetail)= createCreditNoteInvoiceDetail(invoiceDetail)  AND
        toShipInvoiceDetail (invoiceDetail) AND isPostedInvoiceDetail(invoiceDetail) PERSISTENT;

    needToCreditNoteInvoice (invoice) = GROUP SUM 1 IF needToCreditNoteInvoiceDetail(invoiceDetail) BY invoiceInvoiceDetail(invoiceDetail) PERSISTENT;

    EXTEND FORM userInvoice PROPERTIES(i) createCreditNoteUserInvoice;
    EXTEND DESIGN userInvoice { headerRow113 { ADD PROPERTY(createCreditNoteUserInvoice);}}

    EXTEND FORM invoices PROPERTIES(i) READONLY createCreditNoteInvoice;

    CLASS invoiceCreditNote 'Акт расхождения на основе инвойса' : creditNote;
    CLASS invoiceCreditNotePosted 'Проведенный акт расхождения на основе инвойса' : invoiceCreditNote, postedObject;
    CLASS invoiceCreditNoteDetail 'Строка акта расхождения на основе инвойса' : creditNoteDetail;

    @defineDocumentTables(invoiceCreditNote);

    @defineDocumentAggregation(invoice, invoiceCreditNote, needToCreditNoteInvoice);
    creditNoteCreditNoteDetail(detail) += invoiceCreditNoteInvoiceCreditNoteDetail(detail);

    @defineDocumentDetailIndex(invoiceCreditNote);

    dateCreditNote(creditNote) += dateInvoiceCreditNote(creditNote);
    timeCreditNote(creditNote) += timeInvoiceCreditNote(creditNote);

    @defineDocumentAggregationStockPrefix(invoice, invoiceCreditNote, supplierStock, 'Склад поставщика', , );
    supplierStockCreditNote(creditNote) += supplierStockInvoiceCreditNote(creditNote);
    dataSupplierStockCreditNoteDetail(creditNoteDetail) += dataSupplierStockInvoiceDetail(invoiceDetailInvoiceCreditNoteDetail(creditNoteDetail));

    @defineDocumentAggregationStockPrefix(invoice, invoiceCreditNote, customerStock, 'Склад покупателя', , );
    customerStockCreditNote(creditNote) += customerStockInvoiceCreditNote(creditNote);
    dataCustomerStockCreditNoteDetail(creditNoteDetail) += dataCustomerStockInvoiceDetail(invoiceDetailInvoiceCreditNoteDetail(creditNoteDetail));

    @defineDocumentAggregationStockPrefix(invoice, invoiceCreditNote, supplier, 'Поставщик', , );
    supplierCreditNote(creditNote) += supplierInvoiceCreditNote(creditNote);

    @defineDocumentAggregationStockPrefix(invoice, invoiceCreditNote, customer, 'Покупатель', , );
    customerCreditNote(creditNote) += customerInvoiceCreditNote(creditNote);

    @defineDocumentAggregationPosted(invoice, invoiceCreditNote);
    isPostedCreditNote(creditNote) += isPostedInvoiceCreditNote(creditNote);

    numberInvoiceCreditNote 'Номер документа' (invoiceCreditNote) = numberInvoice(invoiceInvoiceCreditNote(invoiceCreditNote));
    numberCreditNote(creditNote) += numberInvoiceCreditNote(creditNote);

    seriesInvoiceCreditNote 'Серия документа' (invoiceCreditNote) = seriesInvoice(invoiceInvoiceCreditNote(invoiceCreditNote));
    seriesCreditNote(creditNote) += seriesInvoiceCreditNote(creditNote);

    seriesNumberInvoiceCreditNote 'Серия/номер документа' (invoiceCreditNote) = seriesNumberInvoice(invoiceInvoiceCreditNote(invoiceCreditNote));

    noteInvoiceInvoiceCreditNote 'Примечание' (invoiceCreditNote) = noteInvoice(invoiceInvoiceCreditNote(invoiceCreditNote));
    noteCreditNote(creditNote) += noteInvoiceInvoiceCreditNote(creditNote);

    currencyInvoiceCreditNote  (invoiceCreditNote) = currencyInvoice(invoiceInvoiceCreditNote(invoiceCreditNote));
    currencyCreditNote (creditNote) += currencyInvoiceCreditNote(creditNote);
    currencyInvoiceCreditNoteDetail (invoiceCreditNoteDetail) = currencyInvoiceCreditNote(invoiceCreditNoteInvoiceCreditNoteDetail(invoiceCreditNoteDetail));

    @defineDocumentDescription(invoiceCreditNote, invoiceCreditNoteDetail, seriesNumberInvoiceCreditNote, 'Акт расхождения на основе инвойса'###sign);
    descriptionCreditNote (creditNote) += descriptionInvoiceCreditNote(creditNote);

    @defineDocumentAggregationDetailSku(invoice, invoiceCreditNote, sku);
    skuCreditNoteDetail(creditNoteDetail) +=  skuInvoiceCreditNoteDetail(creditNoteDetail);

    @defineDocumentAggregationDetailProperty (invoice, invoiceCreditNote, toShip, 'Кол-во');   //                ????????   может надо сделать через минус

    quantityCreditNoteDetail(creditNoteDetail) += toShipInvoiceCreditNoteDetail(creditNoteDetail);

    @defineDocumentAggregationDetailProperty (invoice, invoiceCreditNote, price, 'Цена');

    priceCreditNoteDetail(creditNoteDetail) += priceInvoiceCreditNoteDetail(creditNoteDetail);

    sumInvoiceCreditNoteDetail 'Сумма' (invoiceCreditNoteDetail) = toNumeric16p2(roundCurrency((toShipInvoiceCreditNoteDetail(invoiceCreditNoteDetail) *
        priceInvoiceCreditNoteDetail(invoiceCreditNoteDetail)), currencyInvoiceCreditNoteDetail(invoiceCreditNoteDetail)));

    sumCreditNoteDetail(creditNoteDetail) += sumInvoiceCreditNoteDetail(creditNoteDetail);

    invoiceDetailCreditNoteDetail(creditNoteDetail) += invoiceDetailInvoiceCreditNoteDetail(creditNoteDetail);

    @defineDocumentAggregationDetailProperty (invoice, invoiceCreditNote, VAT, 'НДС');
    VATCreditNoteDetail (creditNoteDetail) += VATInvoiceCreditNoteDetail(creditNoteDetail);

    @defineDocumentAggregationDetailProperty (invoice, invoiceCreditNote, numberVAT, 'НДС, номер');
    @defineDocumentAggregationDetailProperty (invoice, invoiceCreditNote, valueVAT, 'НДС, %');

    VATSumInvoiceCreditNoteDetail 'Сумма НДС' (invoiceCreditNoteDetail) = toNumeric16p2(roundCurrency((sumInvoiceCreditNoteDetail(invoiceCreditNoteDetail) *
        valueVATInvoiceCreditNoteDetail (invoiceCreditNoteDetail) / 100), currencyInvoiceCreditNoteDetail(invoiceCreditNoteDetail)));

    VATSumCreditNoteDetail (creditNoteDetail) += VATSumInvoiceCreditNoteDetail(creditNoteDetail);

END

META defineCreditNoteBatch(dumb)
    @defineDocumentInterfaceDetailBatch(creditNote, batch);

    EXTEND FORM userCreditNote PROPERTIES (d) descriptionBatchUserCreditNoteDetail AFTER shortNameUOMSkuUserCreditNoteDetail;
    EXTEND FORM creditNotes PROPERTIES (d) READONLY descriptionBatchCreditNoteDetail AFTER shortNameUOMSkuCreditNoteDetail;


    batchUserCreditNoteDetail (detail)  <- batchInvoiceDetail(invoiceDetailUserCreditNoteDetail(detail))
        WHEN CHANGED(invoiceDetailUserCreditNoteDetail(detail));

    @defineDocumentAggregationDetailBatch (invoice, invoiceCreditNote);
    batchCreditNoteDetail (creditNoteDetail) += batchInvoiceCreditNoteDetail(creditNoteDetail);

END
