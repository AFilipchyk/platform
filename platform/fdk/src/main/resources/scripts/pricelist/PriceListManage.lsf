MODULE PriceListManage;

REQUIRE PriceList;

FORM priceListManage 'Управление ценами'
    OBJECTS dt = DATETIME FIXED PANEL
    PROPERTIES(dt) objValue = OBJVALUE

    OBJECTS pt = DataPriceListType FIXED PANEL
    PROPERTIES(pt) SELECTOR namePriceListType
;

DESIGN priceListManage FROM DEFAULT {
    main {
        type = CONTAINERV;
        NEW params {
            ADD dt.box;
            ADD pt.box {
                caption = 'Вид цены';
            }
        }
        NEW detail {
            type = TABBED;
        }
        ADD functions.box;
    }
}

NAVIGATOR {
    priceListDocuments {
        ADD priceListManage FIRST;
    }
}

inSku 'Отм.' = DATA SESSION BOOLEAN (Sku);

// ---------------------------- По организациям ----------------------- //
// c

EXTEND FORM priceListManage
    OBJECTS c = LegalEntity FIXED PANEL
    PROPERTIES(c) nameLegalEntity SELECTOR

    TREE cskg cskg = SkuGroup PARENT parentSkuGroup
    PROPERTIES READONLY cskgName = nameSkuGroup(cskg)
    ORDER BY cskgName

    OBJECTS csk = Sku
    PROPERTIES(csk)          inSku
    PROPERTIES(csk) READONLY nameSku, idBarcodeSku
    ORDER BY nameSku(csk)
    FILTERS isParentSkuGroupSku(cskg, csk)

    PROPERTIES READONLY activePriceLedgerPriceListTypeSkuCompanyDateTime(pt, csk, c, dt), // последний прайс, в котором есть цена
                        activeDescriptionLedgerPriceListTypeSkuCompanyDateTime(pt, csk, c, dt)
    // на больших объемах возможно будет тормозить
    FILTERS countStockPriceListTypeSkuCompanyDateTime(pt, csk, c, dt) // фильтруем все товары, которые входят в ассортимент хотя бы одного склада

    OBJECTS cst = Stock
    PROPERTIES(cst)          READONLY nameStock
    PROPERTIES(csk, cst, dt) READONLY balanceASkuStockDateTime
    PROPERTIES               READONLY priceLedgerPriceListTypeSkuStockCompanyDateTime(pt, csk, cst, c, dt)
    ORDER BY nameStock(cst)
    FILTERS priceLedgerPriceListTypeSkuStockCompanyDateTime(pt, csk, cst, c, dt)
;

EXTEND DESIGN priceListManage {
    detail {
        NEW c {
            caption = 'По организациям';
            type = SPLITV;
            NEW c.skus {
                type = SPLITH;
                fillVertical = 2.0;
                NEW c.skuFilters {
                    type = CONTAINERV;
                    ADD c.box;
                    ADD cskg.tree.box {
                        caption = 'Товарные группы';
                    }
                }
                ADD csk.box {
                    caption = 'Товары';
                    fillHorizontal = 2.0;
                }
            }
            NEW c.stocks {
                type = CONTAINERH;
                ADD cst.box {
                    caption = 'Склады';
                }
            }
        }
    }
}

// Создание прайс-листов

createCompanyPriceList 'Создать прайс' = ACTION (dateTime, dataPriceListType, company) {
    FOR ADDOBJ u = UserPriceList DO {
        SET fromDateUserPriceList(u) <- toDate(dateTime AS DATETIME);
        SET fromTimeUserPriceList(u) <- toTime(dateTime AS DATETIME);
        SET companyUserPriceList(u) <- company;
        SET currencyUserPriceList(u) <- currencyDataPriceListType(dataPriceListType);
        SET inUserPriceListDataPriceListType(u, dataPriceListType) <- TRUE;
        SET showUserPriceListPriceListType(u, dataPriceListType) <- TRUE;
        FOR inSku(sku) ADDOBJ d = UserPriceListDetail DO {
            SET skuUserPriceListDetail(d) <- sku;
            SET userPriceListUserPriceListDetail(d) <- u;
        }
        FORM userPriceList OBJECTS p = u DOCKEDMODAL;
        IF NOT formResult() == FormResult.ok THEN {
            DELETE detail WHERE userPriceListUserPriceListDetail(detail) == u;
            DELETE u;
        }
    }
} TOOLBAR;
EXTEND FORM priceListManage
    PROPERTIES createCompanyPriceList(dt, pt, c) TODRAW csk FORCE PANEL
;

// ---------------------------- По складам ---------------------------- //
// s

EXTEND FORM priceListManage
    OBJECTS s = Stock FIXED PANEL
    PROPERTIES(s) nameStock SELECTOR
    FILTERS isCompanyStock(s)

    TREE sskg sskg = SkuGroup PARENT parentSkuGroup
    PROPERTIES READONLY sskgName = nameSkuGroup(sskg)
    ORDER BY sskgName

    OBJECTS ssk = Sku
    PROPERTIES(ssk)          inSku
    PROPERTIES(ssk) READONLY nameSku, idBarcodeSku
    PROPERTIES      READONLY balanceASkuStockDateTime(ssk, s, dt)
    ORDER BY nameSku(ssk)
    FILTERS isParentSkuGroupSku(sskg, ssk)

    PROPERTIES(pt, ssk, s, dt) READONLY pricePriceListTypeSkuStockDateTime,
                                        nameCompanyLedgerPriceListTypeSkuStockDateTime,
                                        descriptionLedgerPriceListTypeSkuStockDateTime
    FILTERS pricePriceListTypeSkuStockDateTime(pt, ssk, s, dt)
;

EXTEND DESIGN priceListManage {
    detail {
        NEW s {
            caption = 'По складам';
            type = SPLITH;
            fillVertical = 2.0;
            NEW s.skuFilters {
                type = CONTAINERV;
                ADD s.box;
                ADD sskg.tree.box {
                    caption = 'Товарные группы';
                }
            }
            ADD ssk.box {
                caption = 'Товары';
                fillHorizontal = 2.0;
            }
        }
    }
}

// Создание прайс-листов
createStockPriceList 'Создать прайсы' = ACTION (dateTime, dataPriceListType, stock) {
    FOR [GROUP SUM 1 IF inSku(s) BY companyLedgerPriceListTypeSkuStockDateTime(t, s, st, d), t, st, d] (company, dataPriceListType, stock, dateTime)
        ADDOBJ u = UserPriceList DO {
        SET fromDateUserPriceList(u) <- toDate(dateTime AS DATETIME);
        SET fromTimeUserPriceList(u) <- toTime(dateTime AS DATETIME);
        SET companyUserPriceList(u) <- company;
        SET currencyUserPriceList(u) <- currencyDataPriceListType(dataPriceListType);
        SET inUserPriceListDataPriceListType(u, dataPriceListType) <- TRUE;
        SET showUserPriceListPriceListType(u, dataPriceListType) <- TRUE;
        SET dataInUserPriceListStock(u, stock) <- TRUE;
        FOR inSku(sku) AND companyLedgerPriceListTypeSkuStockDateTime(dataPriceListType, sku, stock, dateTime) == company
            ADDOBJ d = UserPriceListDetail DO {
            SET skuUserPriceListDetail(d) <- sku;
            SET userPriceListUserPriceListDetail(d) <- u;
        }
        FORM userPriceList OBJECTS p = u DOCKEDMODAL;
        IF NOT formResult() == FormResult.ok THEN {
            DELETE detail WHERE userPriceListUserPriceListDetail(detail) == u;
            DELETE u;
        }
    }
} TOOLBAR;

EXTEND FORM priceListManage
    PROPERTIES createStockPriceList(dt, pt, s) TODRAW ssk FORCE PANEL
;

// ----------------------------------- Список прайсов ---------------------------- //

EXTEND FORM priceListManage
    PROPERTIES(c) pNameCompany = nameLegalEntity SELECTOR

    OBJECTS p = UserPriceList
    PROPERTIES(p) READONLY isPostedUserPriceList FORCE GRID, numberObject, seriesObject, dateUserPriceList, timeUserPriceList,
                           fromDateUserPriceList, fromTimeUserPriceList, toDateUserPriceList, toTimeUserPriceList,
                           nameCurrencyUserPriceList, nameCompanyUserPriceList, priceListTypesPriceList, stocksPriceList,
                           noteUserPriceList, objectClassName
    PROPERTIES(p) EDITFORM, DELETE, updatePriceList FORCE PANEL TOOLBAR
    ORDER BY fromDateUserPriceList, fromTimeUserPriceList
    FILTERS inPriceListDataPriceListType(p, pt),
            companyUserPriceList(p) == c
;
EXTEND DESIGN priceListManage {
    detail {
        NEW p {
            caption = 'Прайсы';
            type = CONTAINERV;

            ADD PROPERTY(pNameCompany);
            ADD p.box;
        }
    }
}
