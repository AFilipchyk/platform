MODULE Geo;

REQUIRE System;

CLASS ABSTRACT POI 'POI';
TABLE POI(POI);

autoSynchronizeCoordinates 'Синхронизировать координаты' = DATA BOOLEAN ();

CLASS MapProvider 'Использовать карты' {
    google 'Google',
    yandex 'Yandex'
}
FORM mapProviders
    OBJECTS m = MapProvider
    PROPERTIES(m) READONLY staticCaption
    DIALOG MapProvider OBJECT m
;

userMapProvider = DATA MapProvider ();
mapProvider = OVERRIDE MapProvider.yandex, userMapProvider();
useTor 'Использовать для карт Tor' = DATA BOOLEAN ();

nameUserMapProvider 'Использовать карты' () = staticCaption(userMapProvider());

namePOI 'Название'= ABSTRACT VARISTRING[200] (POI) PERSISTENT;

nameCountryPOI 'Страна' (poi) = ABSTRACT VARISTRING[50] (POI) PERSISTENT;

addressPOI 'Адрес' = ABSTRACT VARISTRING[100] (POI) PERSISTENT;

latitudePOI 'Координата X' = ABSTRACT NUMERIC[10,5] (POI);
longitudePOI 'Координата Y' = ABSTRACT NUMERIC[10,5] (POI);

// Получение координат
readLatitude 'Координата X' = DATA LOCAL NUMERIC[10,5] ();
readLongitude 'Координата Y' = DATA LOCAL NUMERIC[10,5] ();

getCoordinatesAddressMapProvider = ACTION CUSTOM 'lsfusion.erp.utils.geo.GetCoordinatesAddressActionProperty' (STRING[255], MapProvider);
getCoordinatesAddress(address) = ACTION getCoordinatesAddressMapProvider(address, mapProvider());
recalculateDistancePOI = ACTION CUSTOM 'lsfusion.erp.utils.geo.RecalculateDistancePOIActionProperty' (POI);

calculateCoordinatesPOI 'Рассчитать координаты'= ACTION (POI) {

    getCoordinatesAddress (CONCAT ',', nameCountryPOI(POI), addressPOI(POI));
    latitudePOI(POI) <- readLatitude();
    longitudePOI(POI) <- readLongitude();
    apply();
    recalculateDistancePOI(POI);

}
WHEN SESSION (SETCHANGED(nameCountryPOI(POI)) OR SETCHANGED(addressPOI(POI))) AND autoSynchronizeCoordinates() DO EXEC calculateCoordinatesPOI(POI);

recalculateAllDistances 'Пересчитать все расстояния' = ACTION () {
    FOR p IS POI DO {
        recalculateDistancePOI(p);
    }
}

// Показать на карте одну точку
showOnMapMapProvider 'Показать на карте'= ACTION CUSTOM 'lsfusion.erp.utils.geo.ShowOnMapActionProperty' (DOUBLE, DOUBLE, MapProvider, STRING[100]);
showOnMap(latitude, longitude, address) = ACTION showOnMapMapProvider (latitude, longitude, mapProvider(), address);

showOnMapPOI 'Показать на карте'= ACTION (POI) {
    EXEC showOnMap (latitudePOI (POI), longitudePOI (POI), addressPOI(POI));
}

// Показать на карте путь
numberPathPOI 'Номер' = DATA LOCAL INTEGER (POI);
descriptionPathPOI 'Описание' = DATA LOCAL VARSTRING[200] (POI);

TABLE poiPoi (POI, POI); 
distancePOIPOI 'Расстояние' = DATA INTEGER (POI, POI);
showOnMapPath 'Показать точки на карте'= ACTION CUSTOM 'lsfusion.erp.utils.geo.ShowOnMapPathActionProperty' (MapProvider);

inPathPOI 'Вкл' = DATA LOCAL BOOLEAN (POI);
startPathPOI 'Место старта'= DATA LOCAL POI();
calculatePath 'Рассчитать путь'= ACTION CUSTOM 'lsfusion.erp.utils.geo.CalculatePathActionProperty' ();

EXTEND FORM options
    PROPERTIES() autoSynchronizeCoordinates, nameUserMapProvider, useTor, recalculateAllDistances
;

DESIGN options {
    commons {
        MOVE PROPERTY(autoSynchronizeCoordinates());
        MOVE PROPERTY(nameUserMapProvider());
        MOVE PROPERTY(useTor());
        MOVE PROPERTY(recalculateAllDistances());
    }
}

