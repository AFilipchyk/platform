MODULE Numerator;

REQUIRE System, MasterData, DefaultData;

// ------------------------------------------- Нумераторы ----------------------------------------------- //

CLASS Numerator 'Нумератор';
TABLE numerator (Numerator);

nameNumerator 'Наименование' = DATA VARISTRING[100](Numerator);

seriesNumerator 'Серия' = DATA STRING[2] (Numerator) IN recognize FIXEDCHARWIDTH 3;

minValueNumerator 'Мин. значение' = DATA LONG (Numerator) IN recognize MINCHARWIDTH 15;
maxValueNumerator 'Макс. значение' = DATA LONG (Numerator) IN recognize MINCHARWIDTH 15;

stringLengthNumerator 'Длина' = DATA INTEGER (Numerator) IN base;

curValueNumerator 'Тек. значение' = DATA LONG (Numerator) IN recognize MINCHARWIDTH 15;
curValueNumerator(numerator) <- minValueNumerator(numerator) WHEN SET(numerator IS Numerator);

lpadStringWithZero = FORMULA STRING[18] 'lpad(CAST($1 AS text),$2,\'0\')';

curStringValueNumerator 'Тек. значение (строка)' (numerator) = lpadStringWithZero(curValueNumerator(numerator), stringLengthNumerator(numerator)) IN base;

incrementValueNumerator 'Увеличить значение' = ACTION (numerator) NEWSESSION {
    IF curValueNumerator(numerator) >= maxValueNumerator(numerator) THEN
        MESSAGE 'Счетчик нумератора достиг максимального значения. Обратитесь к администратору.'
    ELSE {
        ASSIGN curValueNumerator(numerator) <- curValueNumerator(numerator) + 1;
        EXEC apply();
    };
};

incrementValueSessionNumerator 'Увеличить значение' = ACTION (numerator) {
    IF curValueNumerator(numerator) >= maxValueNumerator(numerator) THEN
        MESSAGE 'Счетчик нумератора достиг максимального значения. Обратитесь к администратору.'
    ELSE
        ASSIGN curValueNumerator(numerator) <- curValueNumerator(numerator) + 1;
}

FORM numerator 'Нумератор'
    OBJECTS n = Numerator FIXED PANEL
    PROPERTIES(n) nameNumerator, seriesNumerator, minValueNumerator, maxValueNumerator, stringLengthNumerator, curValueNumerator, curStringValueNumerator

    EDIT Numerator OBJECT n
;

FORM numerators 'Нумераторы'
    OBJECTS n = Numerator
    PROPERTIES(n) READONLY nameNumerator, seriesNumerator, minValueNumerator, maxValueNumerator, stringLengthNumerator, curValueNumerator, curStringValueNumerator
    PROPERTIES(n)          ADDFORM, EDITFORM, DELETE

    DIALOG Numerator OBJECT n
;

FORM defaultNumerators 'Нумераторы'
    OBJECTS n = Numerator
    PROPERTIES(n) READONLY nameNumerator, seriesNumerator, minValueNumerator, maxValueNumerator, stringLengthNumerator, curValueNumerator, curStringValueNumerator
    PROPERTIES(n)          ADDFORM, EDITFORM, DELETE
;

DESIGN defaultNumerators FROM DEFAULT {
    main {
        NEW defaultContainer AFTER n.box {
            type = COLUMNS;
            columns = 3;
            caption = 'Нумераторы по умолчанию';
        }
    }
}

NAVIGATOR {
    masterData {
        ADD defaultNumerators;
    }
}

// --------------------------------------------- Макрос по объявлению нумерируемого объекта ---------------------------- //

GROUP numberedGroup 'Нумератор' : recognize;

META defineNumberedObjectAbstract(class)
    number###class 'Номер' = ABSTRACT STRING[18] (class) IN numberedGroup PERSISTENT MINCHARWIDTH 7;
    series###class 'Серия' = ABSTRACT STRING[2] (class) IN numberedGroup PERSISTENT FIXEDCHARWIDTH 3; 

    seriesNumber###class 'Серия/Номер' (o) = 
        CONCAT '', series###class(o), number###class(o) 
        MINCHARWIDTH 7 PREFCHARWIDTH 10 MAXCHARWIDTH 20 PERSISTENT;
        
END

META defineNumberedObject(class)
    number###class 'Номер' = DATA STRING[18] (class) IN numberedGroup MINCHARWIDTH 7;
    series###class 'Серия' = DATA STRING[2] (class) IN numberedGroup FIXEDCHARWIDTH 3; 

    seriesNumber###class 'Серия/Номер' (o) = 
        CONCAT '', series###class(o), number###class(o) 
        MINCHARWIDTH 7 PREFCHARWIDTH 10 MAXCHARWIDTH 20 PERSISTENT;
        
END

META defineNumeratedObject(class)
    numerator###class 'Нумератор (ИД)' = DATA Numerator (class);
    nameNumerator###class 'Нумератор' (o) = nameNumerator(numerator###class(o)) IN numberedGroup MINCHARWIDTH 7 PREFCHARWIDTH 15;

    generateSeriesNumber###class 'Сгенерировать номер' = ACTION (o) {
        number###class(o) <- curStringValueNumerator(numerator###class(o));
        series###class(o) <- seriesNumerator(numerator###class(o));
        incrementValueSessionNumerator(numerator###class(o));
    }
    
    WHEN CHANGED(numerator###class(o)) AND
         NOT CHANGED(number###class(o)) AND
         NOT CHANGED(series###class(o))
         DO generateSeriesNumber###class(o) ;
END

META defineNumeratedObjectDefault(class, caption, series)
    @defineNumeratedObject(class);
    @defineNumeratedObjectDefault(class, caption, series, );
END

META defineNumeratedObjectDefault(class, caption, series, prefix)

    prefix###defaultNumerator###class = DATA Numerator ();
    name###prefix##DefaultNumerator###class caption = nameNumerator(prefix###defaultNumerator###class());

    numerator###class(o) <- prefix###defaultNumerator###class() WHEN SET(o IS class);

//    initValueNumeratorObject(object) += prefix###defaultNumerator###class() IF object IS class;
//    initWhenNumeratorObject(object) += SET(object IS class);

    EXTEND FORM defaultNumerators
        PROPERTIES() name###prefix##DefaultNumerator###class
    ;
    EXTEND DESIGN defaultNumerators {
        defaultContainer {
            ADD PROPERTY(name###prefix##DefaultNumerator###class);
        }
    }

    loadDefaultNumerators() += ACTION () {
        ADDOBJ Numerator;
        FOR n == addedObject() DO {
            ASSIGN nameNumerator(n) <- caption;
            ASSIGN seriesNumerator(n) <- series;
            ASSIGN minValueNumerator(n) <- 1L;
            ASSIGN maxValueNumerator(n) <- 99999L;
            ASSIGN stringLengthNumerator(n) <- 5;

            ASSIGN prefix###defaultNumerator###class() <- n;
        }
    }

END

//------------------------------------------ Для двух объектов ---------------------------------------------//

META defineNumeratedObject(object1, object2)

    number###object1###object2 'Номер' = DATA STRING[18] (###object1, ###object2) MINCHARWIDTH 7;
    series###object1###object2 'Серия' = DATA STRING[2] (###object1, ###object2) FIXEDCHARWIDTH 3;
    seriesNumber###object1###object2 'Серия/Номер' (object1, object2) = CONCAT '', series###object1###object2(object1, object2), number###object1###object2(object1, object2) MINCHARWIDTH 7 PREFCHARWIDTH 10 MAXCHARWIDTH 20 PERSISTENT;

    numerator###object1###object2 = DATA Numerator (###object1, ###object2);
    nameNumerator###object1###object2 'Нумератор' (object1, object2) = nameNumerator(numerator###object1###object2(object1, object2)) MINCHARWIDTH 7 PREFCHARWIDTH 15;

    setValueSessionNumerated###object1###object2 'Сгенерировать номер' = ACTION (object1, object2) {
        ASSIGN number###object1###object2(object1, object2) <- curStringValueNumerator(numerator###object1###object2(object1, object2));
        ASSIGN series###object1###object2(object1, object2) <- seriesNumerator(numerator###object1###object2(object1, object2));
        EXEC incrementValueSessionNumerator(numerator###object1###object2(object1, object2));
    } SHORTCUT number###object1###object2;

    WHEN CHANGED(numerator###object1###object2(object1, object2)) AND
         NOT CHANGED(number###object1###object2(object1, object2)) AND
         NOT CHANGED(series###object1###object2(object1, object2))
         DO EXEC setValueSessionNumerated###object1###object2(object1, object2) ;

END

META defineNumeratedObjectDefault (object1, object2, property, caption, series)

    defaultNumerator###object1###object2 = DATA Numerator ();
    nameDefaultNumerator###object1###object2 caption = nameNumerator(defaultNumerator###object1###object2());

    EXTEND FORM defaultNumerators
        PROPERTIES() nameDefaultNumerator###object1###object2
    ;
    EXTEND DESIGN defaultNumerators {
        defaultContainer {
            ADD PROPERTY(nameDefaultNumerator###object1###object2);
        }
    }

    loadDefaultNumerators() += ACTION () {
        ADDOBJ Numerator;
        FOR n == addedObject() DO {
            ASSIGN nameNumerator(n) <- caption;
            ASSIGN seriesNumerator(n) <- series;
            ASSIGN minValueNumerator(n) <- 1L;
            ASSIGN maxValueNumerator(n) <- 99999L;
            ASSIGN stringLengthNumerator(n) <- 5;

            ASSIGN defaultNumerator###object1###object2() <- n;
        }
    };

    numerator###object1###object2 (object1, object2) <- defaultNumerator###object1###object2 () WHEN SET(property(object1, object2));
END

// --------------------------------------------- Стандартные значения ---------------------------- //

loadDefaultNumerators 'Загрузить стандартные нумераторы' = ABSTRACT ACTION LIST ();
@implementLoadDefaultData(loadDefaultNumerators);
